*------------------------------------------------------------*;
* Computed Code;
*------------------------------------------------------------*;
*------------------------------------------------------------*;
* TRANSFORM: REP_IMP_price , log(REP_IMP_price + 1);
*------------------------------------------------------------*;
label LOG_REP_IMP_price = 'Transformed: Replacement: Imputed price';
if REP_IMP_price eq . then LOG_REP_IMP_price = .;
else do;
if REP_IMP_price + 1 > 0 then LOG_REP_IMP_price = log(REP_IMP_price + 1);
else LOG_REP_IMP_price = .;
end;
*------------------------------------------------------------*;
* TRANSFORM: REP_compression_ratio , log(REP_compression_ratio + 1);
*------------------------------------------------------------*;
label LOG_REP_compression_ratio = 'Transformed: Replacement: compression-ratio';
if REP_compression_ratio eq . then LOG_REP_compression_ratio = .;
else do;
if REP_compression_ratio + 1 > 0 then LOG_REP_compression_ratio = log(REP_compression_ratio + 1);
else LOG_REP_compression_ratio = .;
end;
*------------------------------------------------------------*;
* TRANSFORM: REP_engine_size , log(REP_engine_size + 1);
*------------------------------------------------------------*;
label LOG_REP_engine_size = 'Transformed: Replacement: engine-size';
if REP_engine_size eq . then LOG_REP_engine_size = .;
else do;
if REP_engine_size + 1 > 0 then LOG_REP_engine_size = log(REP_engine_size + 1);
else LOG_REP_engine_size = .;
end;
