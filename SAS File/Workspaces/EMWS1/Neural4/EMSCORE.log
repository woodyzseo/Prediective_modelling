MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 16, 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11:32:00 o'clock" 
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                April 16, 2021
Time:                11:32:00 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O389T7B4 "H:\746\Decision Tree 
test\Workspaces\EMWS1\Neural4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O389T7B4 new;
MPRINT(EM_DIAGRAM):   run;
128272     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
128273     set EMWS1.Neural4_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_OUTKEY;
128274     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
128275     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 50 observations read from the data set EMWS1.NEURAL4_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

128276     filename emflow "H:\746\Decision Tree test\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas"
128276   ! ;
MPRINT(EM_DIAGRAM):    filename emflow "H:\746\Decision Tree 
test\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
128277     *------------------------------------------------------------*;
128278     * Neural4: Scoring DATA data;
128279     *------------------------------------------------------------*;
128280     data EMWS1.Neural4_TRAIN
128281     / view=EMWS1.Neural4_TRAIN
128282     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural4_TRAIN / view=EMWS1.Neural4_TRAIN ;
128283     set EMWS1.Repl2_TRAIN
128284     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Repl2_TRAIN ;
128285     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file H:\746\Decision Tree 
      test\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas.
128286    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
128287    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
128288    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
128289    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
128290    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
128291    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
128292    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
128293    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
128294    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
128295    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
128296    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
128297    +LENGTH _WARN_ $4
128298    +      F_Risk  $ 12
128299    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_Risk $ 12 ;
128300    +      label S_LOG_REP_IMP_price = 'Standard: LOG_REP_IMP_price' ;
MPRINT(EM_DIAGRAM):   label S_LOG_REP_IMP_price = 'Standard: LOG_REP_IMP_price' ;
128301    +
128302    +      label S_LOG_REP_compression_ratio =
128303    +'Standard: LOG_REP_compression_ratio' ;
MPRINT(EM_DIAGRAM):   label S_LOG_REP_compression_ratio = 'Standard: 
LOG_REP_compression_ratio' ;
128304    +
128305    +      label S_LOG_REP_engine_size = 'Standard: LOG_REP_engine_size' ;
MPRINT(EM_DIAGRAM):   label S_LOG_REP_engine_size = 'Standard: LOG_REP_engine_size' ;
128306    +
128307    +      label S_REP_IMP_bore = 'Standard: REP_IMP_bore' ;
MPRINT(EM_DIAGRAM):   label S_REP_IMP_bore = 'Standard: REP_IMP_bore' ;
128308    +
128309    +      label S_REP_IMP_stroke = 'Standard: REP_IMP_stroke' ;
MPRINT(EM_DIAGRAM):   label S_REP_IMP_stroke = 'Standard: REP_IMP_stroke' ;
128310    +
128311    +      label S_REP_city_mpg = 'Standard: REP_city_mpg' ;
MPRINT(EM_DIAGRAM):   label S_REP_city_mpg = 'Standard: REP_city_mpg' ;
128312    +
128313    +      label S_REP_curb_weight = 'Standard: REP_curb_weight' ;
MPRINT(EM_DIAGRAM):   label S_REP_curb_weight = 'Standard: REP_curb_weight' ;
128314    +
128315    +      label S_REP_height = 'Standard: REP_height' ;
MPRINT(EM_DIAGRAM):   label S_REP_height = 'Standard: REP_height' ;
128316    +
128317    +      label S_REP_highway_mpg = 'Standard: REP_highway_mpg' ;
MPRINT(EM_DIAGRAM):   label S_REP_highway_mpg = 'Standard: REP_highway_mpg' ;
128318    +
128319    +      label S_REP_horsepower = 'Standard: REP_horsepower' ;
MPRINT(EM_DIAGRAM):   label S_REP_horsepower = 'Standard: REP_horsepower' ;
128320    +
128321    +      label S_REP_length = 'Standard: REP_length' ;
MPRINT(EM_DIAGRAM):   label S_REP_length = 'Standard: REP_length' ;
128322    +
128323    +      label S_REP_peak_rpm = 'Standard: REP_peak_rpm' ;
MPRINT(EM_DIAGRAM):   label S_REP_peak_rpm = 'Standard: REP_peak_rpm' ;
128324    +
128325    +      label S_REP_wheel_base = 'Standard: REP_wheel_base' ;
MPRINT(EM_DIAGRAM):   label S_REP_wheel_base = 'Standard: REP_wheel_base' ;
128326    +
128327    +      label S_REP_width = 'Standard: REP_width' ;
MPRINT(EM_DIAGRAM):   label S_REP_width = 'Standard: REP_width' ;
128328    +
128329    +      label M_bore0 = 'Dummy: M_bore=0' ;
MPRINT(EM_DIAGRAM):   label M_bore0 = 'Dummy: M_bore=0' ;
128330    +
128331    +      label M_num_of_doors0 = 'Dummy: M_num_of_doors=0' ;
MPRINT(EM_DIAGRAM):   label M_num_of_doors0 = 'Dummy: M_num_of_doors=0' ;
128332    +
128333    +      label M_price0 = 'Dummy: M_price=0' ;
MPRINT(EM_DIAGRAM):   label M_price0 = 'Dummy: M_price=0' ;
128334    +
128335    +      label M_stroke0 = 'Dummy: M_stroke=0' ;
MPRINT(EM_DIAGRAM):   label M_stroke0 = 'Dummy: M_stroke=0' ;
128336    +
128337    +      label IMP_num_of_doors2 = 'Dummy: IMP_num_of_doors=2' ;
MPRINT(EM_DIAGRAM):   label IMP_num_of_doors2 = 'Dummy: IMP_num_of_doors=2' ;
128338    +
128339    +      label REP_aspirationS = 'Dummy: REP_aspiration=S' ;
MPRINT(EM_DIAGRAM):   label REP_aspirationS = 'Dummy: REP_aspiration=S' ;
128340    +
128341    +      label REP_body_styleC = 'Dummy: REP_body_style=C' ;
MPRINT(EM_DIAGRAM):   label REP_body_styleC = 'Dummy: REP_body_style=C' ;
128342    +
128343    +      label REP_body_styleH = 'Dummy: REP_body_style=H' ;
MPRINT(EM_DIAGRAM):   label REP_body_styleH = 'Dummy: REP_body_style=H' ;
128344    +
128345    +      label REP_body_styleS = 'Dummy: REP_body_style=S' ;
MPRINT(EM_DIAGRAM):   label REP_body_styleS = 'Dummy: REP_body_style=S' ;
128346    +
128347    +      label REP_drive_wheels4 = 'Dummy: REP_drive_wheels=4' ;
MPRINT(EM_DIAGRAM):   label REP_drive_wheels4 = 'Dummy: REP_drive_wheels=4' ;
128348    +
128349    +      label REP_drive_wheelsF = 'Dummy: REP_drive_wheels=F' ;
MPRINT(EM_DIAGRAM):   label REP_drive_wheelsF = 'Dummy: REP_drive_wheels=F' ;
128350    +
128351    +      label REP_engine_locationF = 'Dummy: REP_engine_location=F' ;
MPRINT(EM_DIAGRAM):   label REP_engine_locationF = 'Dummy: REP_engine_location=F' ;
128352    +
128353    +      label REP_fuel_systemnon_spdi = 'Dummy: REP_fuel_system=non-spdi' ;
MPRINT(EM_DIAGRAM):   label REP_fuel_systemnon_spdi = 'Dummy: REP_fuel_system=non-spdi' ;
128354    +
128355    +      label REP_fuel_typeD = 'Dummy: REP_fuel_type=D' ;
MPRINT(EM_DIAGRAM):   label REP_fuel_typeD = 'Dummy: REP_fuel_type=D' ;
128356    +
128357    +      label REP_num_of_cylinders__4 = 'Dummy: REP_num_of_cylinders=<=4' ;
MPRINT(EM_DIAGRAM):   label REP_num_of_cylinders__4 = 'Dummy: REP_num_of_cylinders=<=4' ;
128358    +
128359    +      label engine_typedohc = 'Dummy: engine_type=dohc' ;
MPRINT(EM_DIAGRAM):   label engine_typedohc = 'Dummy: engine_type=dohc' ;
128360    +
128361    +      label engine_typel = 'Dummy: engine_type=l' ;
MPRINT(EM_DIAGRAM):   label engine_typel = 'Dummy: engine_type=l' ;
128362    +
128363    +      label engine_typeohc = 'Dummy: engine_type=ohc' ;
MPRINT(EM_DIAGRAM):   label engine_typeohc = 'Dummy: engine_type=ohc' ;
128364    +
128365    +      label engine_typeohcf = 'Dummy: engine_type=ohcf' ;
MPRINT(EM_DIAGRAM):   label engine_typeohcf = 'Dummy: engine_type=ohcf' ;
128366    +
128367    +      label engine_typeohcv = 'Dummy: engine_type=ohcv' ;
MPRINT(EM_DIAGRAM):   label engine_typeohcv = 'Dummy: engine_type=ohcv' ;
128368    +
128369    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
128370    +
128371    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
128372    +
128373    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
128374    +
128375    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
128376    +
128377    +      label I_Risk = 'Into: Risk' ;
MPRINT(EM_DIAGRAM):   label I_Risk = 'Into: Risk' ;
128378    +
128379    +      label F_Risk = 'From: Risk' ;
MPRINT(EM_DIAGRAM):   label F_Risk = 'From: Risk' ;
128380    +
128381    +      label U_Risk = 'Unnormalized Into: Risk' ;
MPRINT(EM_DIAGRAM):   label U_Risk = 'Unnormalized Into: Risk' ;
128382    +
128383    +      label P_Risk1 = 'Predicted: Risk=1' ;
MPRINT(EM_DIAGRAM):   label P_Risk1 = 'Predicted: Risk=1' ;
128384    +
128385    +      label R_Risk1 = 'Residual: Risk=1' ;
MPRINT(EM_DIAGRAM):   label R_Risk1 = 'Residual: Risk=1' ;
128386    +
128387    +      label P_Risk0 = 'Predicted: Risk=0' ;
MPRINT(EM_DIAGRAM):   label P_Risk0 = 'Predicted: Risk=0' ;
128388    +
128389    +      label R_Risk0 = 'Residual: Risk=0' ;
MPRINT(EM_DIAGRAM):   label R_Risk0 = 'Residual: Risk=0' ;
128390    +
128391    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
128392    +
128393    +*** Generate dummy variables for M_bore ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for M_bore ;
128394    +drop M_bore0 ;
MPRINT(EM_DIAGRAM):   drop M_bore0 ;
128395    +if missing( M_bore ) then do;
MPRINT(EM_DIAGRAM):   if missing( M_bore ) then do;
128396    +   M_bore0 = .;
MPRINT(EM_DIAGRAM):   M_bore0 = .;
128397    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128398    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128399    +end;
MPRINT(EM_DIAGRAM):   end;
128400    +else do;
MPRINT(EM_DIAGRAM):   else do;
128401    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
128402    +   _dm12 = put( M_bore , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( M_bore , BEST12. );
128403    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128404    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
128405    +      M_bore0 = 1;
MPRINT(EM_DIAGRAM):   M_bore0 = 1;
128406    +   end;
MPRINT(EM_DIAGRAM):   end;
128407    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
128408    +      M_bore0 = -1;
MPRINT(EM_DIAGRAM):   M_bore0 = -1;
128409    +   end;
MPRINT(EM_DIAGRAM):   end;
128410    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128411    +      M_bore0 = .;
MPRINT(EM_DIAGRAM):   M_bore0 = .;
128412    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128413    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128414    +   end;
MPRINT(EM_DIAGRAM):   end;
128415    +end;
MPRINT(EM_DIAGRAM):   end;
128416    +
128417    +*** Generate dummy variables for M_num_of_doors ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for M_num_of_doors ;
128418    +drop M_num_of_doors0 ;
MPRINT(EM_DIAGRAM):   drop M_num_of_doors0 ;
128419    +if missing( M_num_of_doors ) then do;
MPRINT(EM_DIAGRAM):   if missing( M_num_of_doors ) then do;
128420    +   M_num_of_doors0 = .;
MPRINT(EM_DIAGRAM):   M_num_of_doors0 = .;
128421    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128422    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128423    +end;
MPRINT(EM_DIAGRAM):   end;
128424    +else do;
MPRINT(EM_DIAGRAM):   else do;
128425    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
128426    +   _dm12 = put( M_num_of_doors , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( M_num_of_doors , BEST12. );
128427    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128428    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
128429    +      M_num_of_doors0 = 1;
MPRINT(EM_DIAGRAM):   M_num_of_doors0 = 1;
128430    +   end;
MPRINT(EM_DIAGRAM):   end;
128431    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
128432    +      M_num_of_doors0 = -1;
MPRINT(EM_DIAGRAM):   M_num_of_doors0 = -1;
128433    +   end;
MPRINT(EM_DIAGRAM):   end;
128434    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128435    +      M_num_of_doors0 = .;
MPRINT(EM_DIAGRAM):   M_num_of_doors0 = .;
128436    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128437    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128438    +   end;
MPRINT(EM_DIAGRAM):   end;
128439    +end;
MPRINT(EM_DIAGRAM):   end;
128440    +
128441    +*** Generate dummy variables for M_price ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for M_price ;
128442    +drop M_price0 ;
MPRINT(EM_DIAGRAM):   drop M_price0 ;
128443    +if missing( M_price ) then do;
MPRINT(EM_DIAGRAM):   if missing( M_price ) then do;
128444    +   M_price0 = .;
MPRINT(EM_DIAGRAM):   M_price0 = .;
128445    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128446    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128447    +end;
MPRINT(EM_DIAGRAM):   end;
128448    +else do;
MPRINT(EM_DIAGRAM):   else do;
128449    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
128450    +   _dm12 = put( M_price , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( M_price , BEST12. );
128451    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128452    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
128453    +      M_price0 = 1;
MPRINT(EM_DIAGRAM):   M_price0 = 1;
128454    +   end;
MPRINT(EM_DIAGRAM):   end;
128455    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
128456    +      M_price0 = -1;
MPRINT(EM_DIAGRAM):   M_price0 = -1;
128457    +   end;
MPRINT(EM_DIAGRAM):   end;
128458    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128459    +      M_price0 = .;
MPRINT(EM_DIAGRAM):   M_price0 = .;
128460    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128461    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128462    +   end;
MPRINT(EM_DIAGRAM):   end;
128463    +end;
MPRINT(EM_DIAGRAM):   end;
128464    +
128465    +*** Generate dummy variables for M_stroke ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for M_stroke ;
128466    +drop M_stroke0 ;
MPRINT(EM_DIAGRAM):   drop M_stroke0 ;
128467    +if missing( M_stroke ) then do;
MPRINT(EM_DIAGRAM):   if missing( M_stroke ) then do;
128468    +   M_stroke0 = .;
MPRINT(EM_DIAGRAM):   M_stroke0 = .;
128469    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128470    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128471    +end;
MPRINT(EM_DIAGRAM):   end;
128472    +else do;
MPRINT(EM_DIAGRAM):   else do;
128473    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
128474    +   _dm12 = put( M_stroke , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( M_stroke , BEST12. );
128475    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128476    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
128477    +      M_stroke0 = 1;
MPRINT(EM_DIAGRAM):   M_stroke0 = 1;
128478    +   end;
MPRINT(EM_DIAGRAM):   end;
128479    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
128480    +      M_stroke0 = -1;
MPRINT(EM_DIAGRAM):   M_stroke0 = -1;
128481    +   end;
MPRINT(EM_DIAGRAM):   end;
128482    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128483    +      M_stroke0 = .;
MPRINT(EM_DIAGRAM):   M_stroke0 = .;
128484    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128485    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128486    +   end;
MPRINT(EM_DIAGRAM):   end;
128487    +end;
MPRINT(EM_DIAGRAM):   end;
128488    +
128489    +*** Generate dummy variables for IMP_num_of_doors ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for IMP_num_of_doors ;
128490    +drop IMP_num_of_doors2 ;
MPRINT(EM_DIAGRAM):   drop IMP_num_of_doors2 ;
128491    +if missing( IMP_num_of_doors ) then do;
MPRINT(EM_DIAGRAM):   if missing( IMP_num_of_doors ) then do;
128492    +   IMP_num_of_doors2 = .;
MPRINT(EM_DIAGRAM):   IMP_num_of_doors2 = .;
128493    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128494    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128495    +end;
MPRINT(EM_DIAGRAM):   end;
128496    +else do;
MPRINT(EM_DIAGRAM):   else do;
128497    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
128498    +   _dm12 = put( IMP_num_of_doors , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( IMP_num_of_doors , BEST12. );
128499    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128500    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
128501    +      IMP_num_of_doors2 = -1;
MPRINT(EM_DIAGRAM):   IMP_num_of_doors2 = -1;
128502    +   end;
MPRINT(EM_DIAGRAM):   end;
128503    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
128504    +      IMP_num_of_doors2 = 1;
MPRINT(EM_DIAGRAM):   IMP_num_of_doors2 = 1;
128505    +   end;
MPRINT(EM_DIAGRAM):   end;
128506    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128507    +      IMP_num_of_doors2 = .;
MPRINT(EM_DIAGRAM):   IMP_num_of_doors2 = .;
128508    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128509    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128510    +   end;
MPRINT(EM_DIAGRAM):   end;
128511    +end;
MPRINT(EM_DIAGRAM):   end;
128512    +
128513    +*** Generate dummy variables for REP_aspiration ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for REP_aspiration ;
128514    +drop REP_aspirationS ;
MPRINT(EM_DIAGRAM):   drop REP_aspirationS ;
128515    +if missing( REP_aspiration ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_aspiration ) then do;
128516    +   REP_aspirationS = .;
MPRINT(EM_DIAGRAM):   REP_aspirationS = .;
128517    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128518    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128519    +end;
MPRINT(EM_DIAGRAM):   end;
128520    +else do;
MPRINT(EM_DIAGRAM):   else do;
128521    +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
128522    +   _dm5 = put( REP_aspiration , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( REP_aspiration , $5. );
128523    +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128524    +   if _dm5 = 'S'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = 'S' then do;
128525    +      REP_aspirationS = 1;
MPRINT(EM_DIAGRAM):   REP_aspirationS = 1;
128526    +   end;
MPRINT(EM_DIAGRAM):   end;
128527    +   else if _dm5 = 'T'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'T' then do;
128528    +      REP_aspirationS = -1;
MPRINT(EM_DIAGRAM):   REP_aspirationS = -1;
128529    +   end;
MPRINT(EM_DIAGRAM):   end;
128530    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128531    +      REP_aspirationS = .;
MPRINT(EM_DIAGRAM):   REP_aspirationS = .;
128532    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128533    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128534    +   end;
MPRINT(EM_DIAGRAM):   end;
128535    +end;
MPRINT(EM_DIAGRAM):   end;
128536    +
128537    +*** Generate dummy variables for REP_body_style ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for REP_body_style ;
128538    +drop REP_body_styleC REP_body_styleH REP_body_styleS ;
MPRINT(EM_DIAGRAM):   drop REP_body_styleC REP_body_styleH REP_body_styleS ;
128539    +if missing( REP_body_style ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_body_style ) then do;
128540    +   REP_body_styleC = .;
MPRINT(EM_DIAGRAM):   REP_body_styleC = .;
128541    +   REP_body_styleH = .;
MPRINT(EM_DIAGRAM):   REP_body_styleH = .;
128542    +   REP_body_styleS = .;
MPRINT(EM_DIAGRAM):   REP_body_styleS = .;
128543    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128544    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128545    +end;
MPRINT(EM_DIAGRAM):   end;
128546    +else do;
MPRINT(EM_DIAGRAM):   else do;
128547    +   length _dm11 $ 11; drop _dm11 ;
MPRINT(EM_DIAGRAM):   length _dm11 $ 11;
MPRINT(EM_DIAGRAM):   drop _dm11 ;
128548    +   %DMNORMCP( REP_body_style , _dm11 )
MPRINT(DMNORMCP):   _dm11=dmnorm(REP_body_style,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
128549    +   if _dm11 = 'S'  then do;
MPRINT(EM_DIAGRAM):   if _dm11 = 'S' then do;
128550    +      REP_body_styleC = 0;
MPRINT(EM_DIAGRAM):   REP_body_styleC = 0;
128551    +      REP_body_styleH = 0;
MPRINT(EM_DIAGRAM):   REP_body_styleH = 0;
128552    +      REP_body_styleS = 1;
MPRINT(EM_DIAGRAM):   REP_body_styleS = 1;
128553    +   end;
MPRINT(EM_DIAGRAM):   end;
128554    +   else if _dm11 = 'H'  then do;
MPRINT(EM_DIAGRAM):   else if _dm11 = 'H' then do;
128555    +      REP_body_styleC = 0;
MPRINT(EM_DIAGRAM):   REP_body_styleC = 0;
128556    +      REP_body_styleH = 1;
MPRINT(EM_DIAGRAM):   REP_body_styleH = 1;
128557    +      REP_body_styleS = 0;
MPRINT(EM_DIAGRAM):   REP_body_styleS = 0;
128558    +   end;
MPRINT(EM_DIAGRAM):   end;
128559    +   else if _dm11 = 'W'  then do;
MPRINT(EM_DIAGRAM):   else if _dm11 = 'W' then do;
128560    +      REP_body_styleC = -1;
MPRINT(EM_DIAGRAM):   REP_body_styleC = -1;
128561    +      REP_body_styleH = -1;
MPRINT(EM_DIAGRAM):   REP_body_styleH = -1;
128562    +      REP_body_styleS = -1;
MPRINT(EM_DIAGRAM):   REP_body_styleS = -1;
128563    +   end;
MPRINT(EM_DIAGRAM):   end;
128564    +   else if _dm11 = 'C'  then do;
MPRINT(EM_DIAGRAM):   else if _dm11 = 'C' then do;
128565    +      REP_body_styleC = 1;
MPRINT(EM_DIAGRAM):   REP_body_styleC = 1;
128566    +      REP_body_styleH = 0;
MPRINT(EM_DIAGRAM):   REP_body_styleH = 0;
128567    +      REP_body_styleS = 0;
MPRINT(EM_DIAGRAM):   REP_body_styleS = 0;
128568    +   end;
MPRINT(EM_DIAGRAM):   end;
128569    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128570    +      REP_body_styleC = .;
MPRINT(EM_DIAGRAM):   REP_body_styleC = .;
128571    +      REP_body_styleH = .;
MPRINT(EM_DIAGRAM):   REP_body_styleH = .;
128572    +      REP_body_styleS = .;
MPRINT(EM_DIAGRAM):   REP_body_styleS = .;
128573    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128574    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128575    +   end;
MPRINT(EM_DIAGRAM):   end;
128576    +end;
MPRINT(EM_DIAGRAM):   end;
128577    +
128578    +*** Generate dummy variables for REP_drive_wheels ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for REP_drive_wheels ;
128579    +drop REP_drive_wheels4 REP_drive_wheelsF ;
MPRINT(EM_DIAGRAM):   drop REP_drive_wheels4 REP_drive_wheelsF ;
128580    +if missing( REP_drive_wheels ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_drive_wheels ) then do;
128581    +   REP_drive_wheels4 = .;
MPRINT(EM_DIAGRAM):   REP_drive_wheels4 = .;
128582    +   REP_drive_wheelsF = .;
MPRINT(EM_DIAGRAM):   REP_drive_wheelsF = .;
128583    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128584    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128585    +end;
MPRINT(EM_DIAGRAM):   end;
128586    +else do;
MPRINT(EM_DIAGRAM):   else do;
128587    +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
128588    +   %DMNORMCP( REP_drive_wheels , _dm3 )
MPRINT(DMNORMCP):   _dm3=dmnorm(REP_drive_wheels,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
128589    +   if _dm3 = 'F'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'F' then do;
128590    +      REP_drive_wheels4 = 0;
MPRINT(EM_DIAGRAM):   REP_drive_wheels4 = 0;
128591    +      REP_drive_wheelsF = 1;
MPRINT(EM_DIAGRAM):   REP_drive_wheelsF = 1;
128592    +   end;
MPRINT(EM_DIAGRAM):   end;
128593    +   else if _dm3 = 'R'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'R' then do;
128594    +      REP_drive_wheels4 = -1;
MPRINT(EM_DIAGRAM):   REP_drive_wheels4 = -1;
128595    +      REP_drive_wheelsF = -1;
MPRINT(EM_DIAGRAM):   REP_drive_wheelsF = -1;
128596    +   end;
MPRINT(EM_DIAGRAM):   end;
128597    +   else if _dm3 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = '4' then do;
128598    +      REP_drive_wheels4 = 1;
MPRINT(EM_DIAGRAM):   REP_drive_wheels4 = 1;
128599    +      REP_drive_wheelsF = 0;
MPRINT(EM_DIAGRAM):   REP_drive_wheelsF = 0;
128600    +   end;
MPRINT(EM_DIAGRAM):   end;
128601    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128602    +      REP_drive_wheels4 = .;
MPRINT(EM_DIAGRAM):   REP_drive_wheels4 = .;
128603    +      REP_drive_wheelsF = .;
MPRINT(EM_DIAGRAM):   REP_drive_wheelsF = .;
128604    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128605    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128606    +   end;
MPRINT(EM_DIAGRAM):   end;
128607    +end;
MPRINT(EM_DIAGRAM):   end;
128608    +
128609    +*** Generate dummy variables for REP_engine_location ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for REP_engine_location ;
128610    +drop REP_engine_locationF ;
MPRINT(EM_DIAGRAM):   drop REP_engine_locationF ;
128611    +if missing( REP_engine_location ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_engine_location ) then do;
128612    +   REP_engine_locationF = .;
MPRINT(EM_DIAGRAM):   REP_engine_locationF = .;
128613    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128614    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128615    +end;
MPRINT(EM_DIAGRAM):   end;
128616    +else do;
MPRINT(EM_DIAGRAM):   else do;
128617    +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
128618    +   %DMNORMCP( REP_engine_location , _dm5 )
MPRINT(DMNORMCP):   _dm5=dmnorm(REP_engine_location,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
128619    +   if _dm5 = 'F'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = 'F' then do;
128620    +      REP_engine_locationF = 1;
MPRINT(EM_DIAGRAM):   REP_engine_locationF = 1;
128621    +   end;
MPRINT(EM_DIAGRAM):   end;
128622    +   else if _dm5 = 'R'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'R' then do;
128623    +      REP_engine_locationF = -1;
MPRINT(EM_DIAGRAM):   REP_engine_locationF = -1;
128624    +   end;
MPRINT(EM_DIAGRAM):   end;
128625    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128626    +      REP_engine_locationF = .;
MPRINT(EM_DIAGRAM):   REP_engine_locationF = .;
128627    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128628    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128629    +   end;
MPRINT(EM_DIAGRAM):   end;
128630    +end;
MPRINT(EM_DIAGRAM):   end;
128631    +
128632    +*** Generate dummy variables for REP_fuel_system ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for REP_fuel_system ;
128633    +drop REP_fuel_systemnon_spdi ;
MPRINT(EM_DIAGRAM):   drop REP_fuel_systemnon_spdi ;
128634    +if missing( REP_fuel_system ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_fuel_system ) then do;
128635    +   REP_fuel_systemnon_spdi = .;
MPRINT(EM_DIAGRAM):   REP_fuel_systemnon_spdi = .;
128636    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128637    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128638    +end;
MPRINT(EM_DIAGRAM):   end;
128639    +else do;
MPRINT(EM_DIAGRAM):   else do;
128640    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
128641    +   %DMNORMCP( REP_fuel_system , _dm8 )
MPRINT(DMNORMCP):   _dm8=dmnorm(REP_fuel_system,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
128642    +   if _dm8 = 'NON-SPDI'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'NON-SPDI' then do;
128643    +      REP_fuel_systemnon_spdi = 1;
MPRINT(EM_DIAGRAM):   REP_fuel_systemnon_spdi = 1;
128644    +   end;
MPRINT(EM_DIAGRAM):   end;
128645    +   else if _dm8 = 'SPDI'  then do;
MPRINT(EM_DIAGRAM):   else if _dm8 = 'SPDI' then do;
128646    +      REP_fuel_systemnon_spdi = -1;
MPRINT(EM_DIAGRAM):   REP_fuel_systemnon_spdi = -1;
128647    +   end;
MPRINT(EM_DIAGRAM):   end;
128648    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128649    +      REP_fuel_systemnon_spdi = .;
MPRINT(EM_DIAGRAM):   REP_fuel_systemnon_spdi = .;
128650    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128651    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128652    +   end;
MPRINT(EM_DIAGRAM):   end;
128653    +end;
MPRINT(EM_DIAGRAM):   end;
128654    +
128655    +*** Generate dummy variables for REP_fuel_type ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for REP_fuel_type ;
128656    +drop REP_fuel_typeD ;
MPRINT(EM_DIAGRAM):   drop REP_fuel_typeD ;
128657    +if missing( REP_fuel_type ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_fuel_type ) then do;
128658    +   REP_fuel_typeD = .;
MPRINT(EM_DIAGRAM):   REP_fuel_typeD = .;
128659    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128660    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128661    +end;
MPRINT(EM_DIAGRAM):   end;
128662    +else do;
MPRINT(EM_DIAGRAM):   else do;
128663    +   length _dm6 $ 6; drop _dm6 ;
MPRINT(EM_DIAGRAM):   length _dm6 $ 6;
MPRINT(EM_DIAGRAM):   drop _dm6 ;
128664    +   %DMNORMCP( REP_fuel_type , _dm6 )
MPRINT(DMNORMCP):   _dm6=dmnorm(REP_fuel_type,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
128665    +   if _dm6 = 'G'  then do;
MPRINT(EM_DIAGRAM):   if _dm6 = 'G' then do;
128666    +      REP_fuel_typeD = -1;
MPRINT(EM_DIAGRAM):   REP_fuel_typeD = -1;
128667    +   end;
MPRINT(EM_DIAGRAM):   end;
128668    +   else if _dm6 = 'D'  then do;
MPRINT(EM_DIAGRAM):   else if _dm6 = 'D' then do;
128669    +      REP_fuel_typeD = 1;
MPRINT(EM_DIAGRAM):   REP_fuel_typeD = 1;
128670    +   end;
MPRINT(EM_DIAGRAM):   end;
128671    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128672    +      REP_fuel_typeD = .;
MPRINT(EM_DIAGRAM):   REP_fuel_typeD = .;
128673    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128674    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128675    +   end;
MPRINT(EM_DIAGRAM):   end;
128676    +end;
MPRINT(EM_DIAGRAM):   end;
128677    +
128678    +*** Generate dummy variables for REP_num_of_cylinders ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for REP_num_of_cylinders ;
128679    +drop REP_num_of_cylinders__4 ;
MPRINT(EM_DIAGRAM):   drop REP_num_of_cylinders__4 ;
128680    +if missing( REP_num_of_cylinders ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_num_of_cylinders ) then do;
128681    +   REP_num_of_cylinders__4 = .;
MPRINT(EM_DIAGRAM):   REP_num_of_cylinders__4 = .;
128682    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128683    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128684    +end;
MPRINT(EM_DIAGRAM):   end;
128685    +else do;
MPRINT(EM_DIAGRAM):   else do;
128686    +   length _dm6 $ 6; drop _dm6 ;
MPRINT(EM_DIAGRAM):   length _dm6 $ 6;
MPRINT(EM_DIAGRAM):   drop _dm6 ;
128687    +   %DMNORMCP( REP_num_of_cylinders , _dm6 )
MPRINT(DMNORMCP):   _dm6=dmnorm(REP_num_of_cylinders,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
128688    +   if _dm6 = '<=4'  then do;
MPRINT(EM_DIAGRAM):   if _dm6 = '<=4' then do;
128689    +      REP_num_of_cylinders__4 = 1;
MPRINT(EM_DIAGRAM):   REP_num_of_cylinders__4 = 1;
128690    +   end;
MPRINT(EM_DIAGRAM):   end;
128691    +   else if _dm6 = '>4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm6 = '>4' then do;
128692    +      REP_num_of_cylinders__4 = -1;
MPRINT(EM_DIAGRAM):   REP_num_of_cylinders__4 = -1;
128693    +   end;
MPRINT(EM_DIAGRAM):   end;
128694    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128695    +      REP_num_of_cylinders__4 = .;
MPRINT(EM_DIAGRAM):   REP_num_of_cylinders__4 = .;
128696    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128697    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128698    +   end;
MPRINT(EM_DIAGRAM):   end;
128699    +end;
MPRINT(EM_DIAGRAM):   end;
128700    +
128701    +*** Generate dummy variables for engine_type ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for engine_type ;
128702    +drop engine_typedohc engine_typel engine_typeohc engine_typeohcf
128703    +        engine_typeohcv ;
MPRINT(EM_DIAGRAM):   drop engine_typedohc engine_typel engine_typeohc engine_typeohcf 
engine_typeohcv ;
128704    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
128705    +engine_typedohc = 0;
MPRINT(EM_DIAGRAM):   engine_typedohc = 0;
128706    +engine_typel = 0;
MPRINT(EM_DIAGRAM):   engine_typel = 0;
128707    +engine_typeohc = 0;
MPRINT(EM_DIAGRAM):   engine_typeohc = 0;
128708    +engine_typeohcf = 0;
MPRINT(EM_DIAGRAM):   engine_typeohcf = 0;
128709    +engine_typeohcv = 0;
MPRINT(EM_DIAGRAM):   engine_typeohcv = 0;
128710    +if missing( engine_type ) then do;
MPRINT(EM_DIAGRAM):   if missing( engine_type ) then do;
128711    +   engine_typedohc = .;
MPRINT(EM_DIAGRAM):   engine_typedohc = .;
128712    +   engine_typel = .;
MPRINT(EM_DIAGRAM):   engine_typel = .;
128713    +   engine_typeohc = .;
MPRINT(EM_DIAGRAM):   engine_typeohc = .;
128714    +   engine_typeohcf = .;
MPRINT(EM_DIAGRAM):   engine_typeohcf = .;
128715    +   engine_typeohcv = .;
MPRINT(EM_DIAGRAM):   engine_typeohcv = .;
128716    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
128717    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128718    +end;
MPRINT(EM_DIAGRAM):   end;
128719    +else do;
MPRINT(EM_DIAGRAM):   else do;
128720    +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
128721    +   %DMNORMCP( engine_type , _dm5 )
MPRINT(DMNORMCP):   _dm5=dmnorm(engine_type,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
128722    +   if _dm5 = 'OHC'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = 'OHC' then do;
128723    +      engine_typeohc = 1;
MPRINT(EM_DIAGRAM):   engine_typeohc = 1;
128724    +   end;
MPRINT(EM_DIAGRAM):   end;
128725    +   else if _dm5 = 'OHCF'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'OHCF' then do;
128726    +      engine_typeohcf = 1;
MPRINT(EM_DIAGRAM):   engine_typeohcf = 1;
128727    +   end;
MPRINT(EM_DIAGRAM):   end;
128728    +   else if _dm5 = 'OHCV'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'OHCV' then do;
128729    +      engine_typeohcv = 1;
MPRINT(EM_DIAGRAM):   engine_typeohcv = 1;
128730    +   end;
MPRINT(EM_DIAGRAM):   end;
128731    +   else if _dm5 = 'DOHC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'DOHC' then do;
128732    +      engine_typedohc = 1;
MPRINT(EM_DIAGRAM):   engine_typedohc = 1;
128733    +   end;
MPRINT(EM_DIAGRAM):   end;
128734    +   else if _dm5 = 'L'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'L' then do;
128735    +      engine_typel = 1;
MPRINT(EM_DIAGRAM):   engine_typel = 1;
128736    +   end;
MPRINT(EM_DIAGRAM):   end;
128737    +   else if _dm5 = 'ROTOR'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'ROTOR' then do;
128738    +      engine_typedohc = -1;
MPRINT(EM_DIAGRAM):   engine_typedohc = -1;
128739    +      engine_typel = -1;
MPRINT(EM_DIAGRAM):   engine_typel = -1;
128740    +      engine_typeohc = -1;
MPRINT(EM_DIAGRAM):   engine_typeohc = -1;
128741    +      engine_typeohcf = -1;
MPRINT(EM_DIAGRAM):   engine_typeohcf = -1;
128742    +      engine_typeohcv = -1;
MPRINT(EM_DIAGRAM):   engine_typeohcv = -1;
128743    +   end;
MPRINT(EM_DIAGRAM):   end;
128744    +   else do;
MPRINT(EM_DIAGRAM):   else do;
128745    +      engine_typedohc = .;
MPRINT(EM_DIAGRAM):   engine_typedohc = .;
128746    +      engine_typel = .;
MPRINT(EM_DIAGRAM):   engine_typel = .;
128747    +      engine_typeohc = .;
MPRINT(EM_DIAGRAM):   engine_typeohc = .;
128748    +      engine_typeohcf = .;
MPRINT(EM_DIAGRAM):   engine_typeohcf = .;
128749    +      engine_typeohcv = .;
MPRINT(EM_DIAGRAM):   engine_typeohcv = .;
128750    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
128751    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128752    +   end;
MPRINT(EM_DIAGRAM):   end;
128753    +end;
MPRINT(EM_DIAGRAM):   end;
128754    +
128755    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128756    +*** Checking missing input Interval
128757    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
128758    +
128759    +IF NMISS(
128760    +   LOG_REP_IMP_price ,
128761    +   LOG_REP_compression_ratio ,
128762    +   LOG_REP_engine_size ,
128763    +   REP_IMP_bore ,
128764    +   REP_IMP_stroke ,
128765    +   REP_city_mpg ,
128766    +   REP_curb_weight ,
128767    +   REP_height ,
128768    +   REP_highway_mpg ,
128769    +   REP_horsepower ,
128770    +   REP_length ,
128771    +   REP_peak_rpm ,
128772    +   REP_wheel_base ,
128773    +   REP_width   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( LOG_REP_IMP_price , LOG_REP_compression_ratio , 
LOG_REP_engine_size , REP_IMP_bore , REP_IMP_stroke , REP_city_mpg , REP_curb_weight , 
REP_height , REP_highway_mpg , REP_horsepower , REP_length , REP_peak_rpm , REP_wheel_base , 
REP_width ) THEN DO;
128774    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
128775    +
128776    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
128777    +END;
MPRINT(EM_DIAGRAM):   END;
128778    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128779    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
128780    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128781    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
128782    +   S_LOG_REP_IMP_price  =    -20.2356185469493 +     2.16855745948401 *
128783    +        LOG_REP_IMP_price ;
MPRINT(EM_DIAGRAM):   S_LOG_REP_IMP_price = -20.2356185469493 + 2.16855745948401 * 
LOG_REP_IMP_price ;
128784    +   S_LOG_REP_compression_ratio
128785    +          =    -8.72649819321039 +     3.65742873950677 *
128786    +        LOG_REP_compression_ratio ;
MPRINT(EM_DIAGRAM):   S_LOG_REP_compression_ratio = -8.72649819321039 + 3.65742873950677 * 
LOG_REP_compression_ratio ;
128787    +   S_LOG_REP_engine_size  =    -19.3053254119757 +     4.02929302984948 *
128788    +        LOG_REP_engine_size ;
MPRINT(EM_DIAGRAM):   S_LOG_REP_engine_size = -19.3053254119757 + 4.02929302984948 * 
LOG_REP_engine_size ;
128789    +   S_REP_IMP_bore  =    -13.3604302656684 +     4.04536293034574 *
128790    +        REP_IMP_bore ;
MPRINT(EM_DIAGRAM):   S_REP_IMP_bore = -13.3604302656684 + 4.04536293034574 * REP_IMP_bore ;
128791    +   S_REP_IMP_stroke  =    -11.3205669287077 +     3.47855217496738 *
128792    +        REP_IMP_stroke ;
MPRINT(EM_DIAGRAM):   S_REP_IMP_stroke = -11.3205669287077 + 3.47855217496738 * REP_IMP_stroke 
;
128793    +   S_REP_city_mpg  =    -4.23279255832632 +     0.16535248553422 *
128794    +        REP_city_mpg ;
MPRINT(EM_DIAGRAM):   S_REP_city_mpg = -4.23279255832632 + 0.16535248553422 * REP_city_mpg ;
128795    +   S_REP_curb_weight  =    -5.35597047742979 +     0.00212869810672 *
128796    +        REP_curb_weight ;
MPRINT(EM_DIAGRAM):   S_REP_curb_weight = -5.35597047742979 + 0.00212869810672 * 
REP_curb_weight ;
128797    +   S_REP_height  =    -21.8926608140893 +     0.40589318675657 * REP_height ;
MPRINT(EM_DIAGRAM):   S_REP_height = -21.8926608140893 + 0.40589318675657 * REP_height ;
128798    +   S_REP_highway_mpg  =    -4.99166764925563 +     0.16020006928199 *
128799    +        REP_highway_mpg ;
MPRINT(EM_DIAGRAM):   S_REP_highway_mpg = -4.99166764925563 + 0.16020006928199 * 
REP_highway_mpg ;
128800    +   S_REP_horsepower  =    -2.74643097264309 +     0.02734944206973 *
128801    +        REP_horsepower ;
MPRINT(EM_DIAGRAM):   S_REP_horsepower = -2.74643097264309 + 0.02734944206973 * REP_horsepower 
;
128802    +   S_REP_length  =    -15.2378498365576 +     0.08781104037663 * REP_length ;
MPRINT(EM_DIAGRAM):   S_REP_length = -15.2378498365576 + 0.08781104037663 * REP_length ;
128803    +   S_REP_peak_rpm  =    -10.6885709541859 +     0.00208333904184 *
128804    +        REP_peak_rpm ;
MPRINT(EM_DIAGRAM):   S_REP_peak_rpm = -10.6885709541859 + 0.00208333904184 * REP_peak_rpm ;
128805    +   S_REP_wheel_base  =    -17.8009087180129 +     0.18059887504832 *
128806    +        REP_wheel_base ;
MPRINT(EM_DIAGRAM):   S_REP_wheel_base = -17.8009087180129 + 0.18059887504832 * REP_wheel_base 
;
128807    +   S_REP_width  =    -35.9167499004784 +     0.54673628301566 * REP_width ;
MPRINT(EM_DIAGRAM):   S_REP_width = -35.9167499004784 + 0.54673628301566 * REP_width ;
128808    +END;
MPRINT(EM_DIAGRAM):   END;
128809    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
128810    +   IF MISSING( LOG_REP_IMP_price ) THEN S_LOG_REP_IMP_price  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( LOG_REP_IMP_price ) THEN S_LOG_REP_IMP_price = . ;
128811    +   ELSE S_LOG_REP_IMP_price  =    -20.2356185469493 +     2.16855745948401 *
128812    +        LOG_REP_IMP_price ;
MPRINT(EM_DIAGRAM):   ELSE S_LOG_REP_IMP_price = -20.2356185469493 + 2.16855745948401 * 
LOG_REP_IMP_price ;
128813    +   IF MISSING( LOG_REP_compression_ratio ) THEN S_LOG_REP_compression_ratio
128814    +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( LOG_REP_compression_ratio ) THEN S_LOG_REP_compression_ratio 
= . ;
128815    +   ELSE S_LOG_REP_compression_ratio
128816    +          =    -8.72649819321039 +     3.65742873950677 *
128817    +        LOG_REP_compression_ratio ;
MPRINT(EM_DIAGRAM):   ELSE S_LOG_REP_compression_ratio = -8.72649819321039 + 3.65742873950677 
* LOG_REP_compression_ratio ;
128818    +   IF MISSING( LOG_REP_engine_size ) THEN S_LOG_REP_engine_size  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( LOG_REP_engine_size ) THEN S_LOG_REP_engine_size = . ;
128819    +   ELSE S_LOG_REP_engine_size
128820    +          =    -19.3053254119757 +     4.02929302984948 * LOG_REP_engine_size
128821    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_LOG_REP_engine_size = -19.3053254119757 + 4.02929302984948 * 
LOG_REP_engine_size ;
128822    +   IF MISSING( REP_IMP_bore ) THEN S_REP_IMP_bore  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_IMP_bore ) THEN S_REP_IMP_bore = . ;
128823    +   ELSE S_REP_IMP_bore  =    -13.3604302656684 +     4.04536293034574 *
128824    +        REP_IMP_bore ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_IMP_bore = -13.3604302656684 + 4.04536293034574 * 
REP_IMP_bore ;
128825    +   IF MISSING( REP_IMP_stroke ) THEN S_REP_IMP_stroke  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_IMP_stroke ) THEN S_REP_IMP_stroke = . ;
128826    +   ELSE S_REP_IMP_stroke  =    -11.3205669287077 +     3.47855217496738 *
128827    +        REP_IMP_stroke ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_IMP_stroke = -11.3205669287077 + 3.47855217496738 * 
REP_IMP_stroke ;
128828    +   IF MISSING( REP_city_mpg ) THEN S_REP_city_mpg  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_city_mpg ) THEN S_REP_city_mpg = . ;
128829    +   ELSE S_REP_city_mpg  =    -4.23279255832632 +     0.16535248553422 *
128830    +        REP_city_mpg ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_city_mpg = -4.23279255832632 + 0.16535248553422 * 
REP_city_mpg ;
128831    +   IF MISSING( REP_curb_weight ) THEN S_REP_curb_weight  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_curb_weight ) THEN S_REP_curb_weight = . ;
128832    +   ELSE S_REP_curb_weight  =    -5.35597047742979 +     0.00212869810672 *
128833    +        REP_curb_weight ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_curb_weight = -5.35597047742979 + 0.00212869810672 * 
REP_curb_weight ;
128834    +   IF MISSING( REP_height ) THEN S_REP_height  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_height ) THEN S_REP_height = . ;
128835    +   ELSE S_REP_height  =    -21.8926608140893 +     0.40589318675657 *
128836    +        REP_height ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_height = -21.8926608140893 + 0.40589318675657 * REP_height ;
128837    +   IF MISSING( REP_highway_mpg ) THEN S_REP_highway_mpg  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_highway_mpg ) THEN S_REP_highway_mpg = . ;
128838    +   ELSE S_REP_highway_mpg  =    -4.99166764925563 +     0.16020006928199 *
128839    +        REP_highway_mpg ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_highway_mpg = -4.99166764925563 + 0.16020006928199 * 
REP_highway_mpg ;
128840    +   IF MISSING( REP_horsepower ) THEN S_REP_horsepower  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_horsepower ) THEN S_REP_horsepower = . ;
128841    +   ELSE S_REP_horsepower  =    -2.74643097264309 +     0.02734944206973 *
128842    +        REP_horsepower ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_horsepower = -2.74643097264309 + 0.02734944206973 * 
REP_horsepower ;
128843    +   IF MISSING( REP_length ) THEN S_REP_length  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_length ) THEN S_REP_length = . ;
128844    +   ELSE S_REP_length  =    -15.2378498365576 +     0.08781104037663 *
128845    +        REP_length ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_length = -15.2378498365576 + 0.08781104037663 * REP_length ;
128846    +   IF MISSING( REP_peak_rpm ) THEN S_REP_peak_rpm  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_peak_rpm ) THEN S_REP_peak_rpm = . ;
128847    +   ELSE S_REP_peak_rpm  =    -10.6885709541859 +     0.00208333904184 *
128848    +        REP_peak_rpm ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_peak_rpm = -10.6885709541859 + 0.00208333904184 * 
REP_peak_rpm ;
128849    +   IF MISSING( REP_wheel_base ) THEN S_REP_wheel_base  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_wheel_base ) THEN S_REP_wheel_base = . ;
128850    +   ELSE S_REP_wheel_base  =    -17.8009087180129 +     0.18059887504832 *
128851    +        REP_wheel_base ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_wheel_base = -17.8009087180129 + 0.18059887504832 * 
REP_wheel_base ;
128852    +   IF MISSING( REP_width ) THEN S_REP_width  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_width ) THEN S_REP_width = . ;
128853    +   ELSE S_REP_width  =    -35.9167499004784 +     0.54673628301566 * REP_width
128854    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_width = -35.9167499004784 + 0.54673628301566 * REP_width ;
128855    +END;
MPRINT(EM_DIAGRAM):   END;
128856    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128857    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
128858    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128859    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128860    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
128861    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128862    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128863    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
128864    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128865    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
128866    +   H11  =    -0.30239282542129 * S_LOG_REP_IMP_price
128867    +          +     0.07375266777945 * S_LOG_REP_compression_ratio
128868    +          +    -0.32314301225116 * S_LOG_REP_engine_size
128869    +          +    -0.05791191369564 * S_REP_IMP_bore  +    -0.31295728139086 *
128870    +        S_REP_IMP_stroke  +    -0.50271357032608 * S_REP_city_mpg
128871    +          +    -0.49945653510897 * S_REP_curb_weight
128872    +          +    -0.35982904642168 * S_REP_height  +     0.17605089142765 *
128873    +        S_REP_highway_mpg  +     0.28723977440497 * S_REP_horsepower
128874    +          +     0.00026487266845 * S_REP_length  +     0.02115131299283 *
128875    +        S_REP_peak_rpm  +    -0.71479623156263 * S_REP_wheel_base
128876    +          +     0.57582729455077 * S_REP_width ;
MPRINT(EM_DIAGRAM):   H11 = -0.30239282542129 * S_LOG_REP_IMP_price + 0.07375266777945 * 
S_LOG_REP_compression_ratio + -0.32314301225116 * S_LOG_REP_engine_size + -0.05791191369564 * 
S_REP_IMP_bore + -0.31295728139086 * S_REP_IMP_stroke + -0.50271357032608 * S_REP_city_mpg + 
-0.49945653510897 * S_REP_curb_weight + -0.35982904642168 * S_REP_height + 0.17605089142765 * 
S_REP_highway_mpg + 0.28723977440497 * S_REP_horsepower + 0.00026487266845 * S_REP_length + 
0.02115131299283 * S_REP_peak_rpm + -0.71479623156263 * S_REP_wheel_base + 0.57582729455077 * 
S_REP_width ;
128877    +   H12  =     0.06053587643791 * S_LOG_REP_IMP_price
128878    +          +      0.0008309684403 * S_LOG_REP_compression_ratio
128879    +          +     0.10954404329148 * S_LOG_REP_engine_size
128880    +          +    -0.15328263161893 * S_REP_IMP_bore  +      0.3532849519374 *
128881    +        S_REP_IMP_stroke  +    -0.15402746977116 * S_REP_city_mpg
128882    +          +     0.08110850880681 * S_REP_curb_weight
128883    +          +      0.1651911585853 * S_REP_height  +    -0.32984368998018 *
128884    +        S_REP_highway_mpg  +     0.18550754810975 * S_REP_horsepower
128885    +          +     0.41047827319029 * S_REP_length  +     0.63048066732644 *
128886    +        S_REP_peak_rpm  +    -0.29989205901953 * S_REP_wheel_base
128887    +          +     -0.1141373130746 * S_REP_width ;
MPRINT(EM_DIAGRAM):   H12 = 0.06053587643791 * S_LOG_REP_IMP_price + 0.0008309684403 * 
S_LOG_REP_compression_ratio + 0.10954404329148 * S_LOG_REP_engine_size + -0.15328263161893 * 
S_REP_IMP_bore + 0.3532849519374 * S_REP_IMP_stroke + -0.15402746977116 * S_REP_city_mpg + 
0.08110850880681 * S_REP_curb_weight + 0.1651911585853 * S_REP_height + -0.32984368998018 * 
S_REP_highway_mpg + 0.18550754810975 * S_REP_horsepower + 0.41047827319029 * S_REP_length + 
0.63048066732644 * S_REP_peak_rpm + -0.29989205901953 * S_REP_wheel_base + -0.1141373130746 * 
S_REP_width ;
128888    +   H13  =    -0.12651763973835 * S_LOG_REP_IMP_price
128889    +          +     0.02916610158425 * S_LOG_REP_compression_ratio
128890    +          +    -0.35464297055318 * S_LOG_REP_engine_size
128891    +          +    -0.46861794622827 * S_REP_IMP_bore  +    -0.02615304729098 *
128892    +        S_REP_IMP_stroke  +    -0.62348817252786 * S_REP_city_mpg
128893    +          +    -0.40578479144999 * S_REP_curb_weight
128894    +          +    -0.07842498208478 * S_REP_height  +     0.04009867443631 *
128895    +        S_REP_highway_mpg  +    -0.15410203402429 * S_REP_horsepower
128896    +          +     0.56826194006802 * S_REP_length  +    -0.18451746998248 *
128897    +        S_REP_peak_rpm  +    -0.85455873337219 * S_REP_wheel_base
128898    +          +     0.42143506757855 * S_REP_width ;
MPRINT(EM_DIAGRAM):   H13 = -0.12651763973835 * S_LOG_REP_IMP_price + 0.02916610158425 * 
S_LOG_REP_compression_ratio + -0.35464297055318 * S_LOG_REP_engine_size + -0.46861794622827 * 
S_REP_IMP_bore + -0.02615304729098 * S_REP_IMP_stroke + -0.62348817252786 * S_REP_city_mpg + 
-0.40578479144999 * S_REP_curb_weight + -0.07842498208478 * S_REP_height + 0.04009867443631 * 
S_REP_highway_mpg + -0.15410203402429 * S_REP_horsepower + 0.56826194006802 * S_REP_length + 
-0.18451746998248 * S_REP_peak_rpm + -0.85455873337219 * S_REP_wheel_base + 0.42143506757855 * 
S_REP_width ;
128899    +   H14  =    -0.14040869686762 * S_LOG_REP_IMP_price
128900    +          +     0.26990612353105 * S_LOG_REP_compression_ratio
128901    +          +     0.08219740713507 * S_LOG_REP_engine_size
128902    +          +    -0.28143237638041 * S_REP_IMP_bore  +     0.00240833621272 *
128903    +        S_REP_IMP_stroke  +     0.36691424782401 * S_REP_city_mpg
128904    +          +     0.05296966762507 * S_REP_curb_weight
128905    +          +    -0.25195594241151 * S_REP_height  +     -0.2869086713551 *
128906    +        S_REP_highway_mpg  +     0.10149659867121 * S_REP_horsepower
128907    +          +     -0.1051173203177 * S_REP_length  +     -0.3623925092356 *
128908    +        S_REP_peak_rpm  +      0.0608651450636 * S_REP_wheel_base
128909    +          +     0.01925376907658 * S_REP_width ;
MPRINT(EM_DIAGRAM):   H14 = -0.14040869686762 * S_LOG_REP_IMP_price + 0.26990612353105 * 
S_LOG_REP_compression_ratio + 0.08219740713507 * S_LOG_REP_engine_size + -0.28143237638041 * 
S_REP_IMP_bore + 0.00240833621272 * S_REP_IMP_stroke + 0.36691424782401 * S_REP_city_mpg + 
0.05296966762507 * S_REP_curb_weight + -0.25195594241151 * S_REP_height + -0.2869086713551 * 
S_REP_highway_mpg + 0.10149659867121 * S_REP_horsepower + -0.1051173203177 * S_REP_length + 
-0.3623925092356 * S_REP_peak_rpm + 0.0608651450636 * S_REP_wheel_base + 0.01925376907658 * 
S_REP_width ;
128910    +   H11  = H11  +    -0.14261512916098 * M_bore0  +    -0.15389501961531 *
128911    +        M_num_of_doors0  +     0.35584066469033 * M_price0
128912    +          +     0.27766950948074 * M_stroke0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14261512916098 * M_bore0 + -0.15389501961531 * 
M_num_of_doors0 + 0.35584066469033 * M_price0 + 0.27766950948074 * M_stroke0 ;
128913    +   H12  = H12  +    -0.05100694260106 * M_bore0  +     0.06706620637318 *
128914    +        M_num_of_doors0  +      0.3061805720719 * M_price0
128915    +          +     0.12447551805965 * M_stroke0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05100694260106 * M_bore0 + 0.06706620637318 * 
M_num_of_doors0 + 0.3061805720719 * M_price0 + 0.12447551805965 * M_stroke0 ;
128916    +   H13  = H13  +    -0.24380670225771 * M_bore0  +     0.00690440155477 *
128917    +        M_num_of_doors0  +     0.44779145359173 * M_price0
128918    +          +    -0.23546408240278 * M_stroke0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.24380670225771 * M_bore0 + 0.00690440155477 * 
M_num_of_doors0 + 0.44779145359173 * M_price0 + -0.23546408240278 * M_stroke0 ;
128919    +   H14  = H14  +     0.27468171274192 * M_bore0  +    -0.08256208447896 *
128920    +        M_num_of_doors0  +    -0.00282400944614 * M_price0
128921    +          +    -0.06998464230678 * M_stroke0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27468171274192 * M_bore0 + -0.08256208447896 * 
M_num_of_doors0 + -0.00282400944614 * M_price0 + -0.06998464230678 * M_stroke0 ;
128922    +   H11  = H11  +     1.04565178534847 * IMP_num_of_doors2
128923    +          +    -0.19697323559306 * REP_aspirationS  +     0.22441677117341 *
128924    +        REP_body_styleC  +    -0.02928079039896 * REP_body_styleH
128925    +          +    -0.32302273741455 * REP_body_styleS  +    -0.34785776016975 *
128926    +        REP_drive_wheels4  +     0.10897139165566 * REP_drive_wheelsF
128927    +          +    -0.04922700305318 * REP_engine_locationF
128928    +          +    -0.26217753108901 * REP_fuel_systemnon_spdi
128929    +          +    -0.09655321276347 * REP_fuel_typeD  +     0.23776476290772 *
128930    +        REP_num_of_cylinders__4  +     0.09807786136518 * engine_typedohc
128931    +          +    -0.13265317517425 * engine_typel  +    -0.20346070618898 *
128932    +        engine_typeohc  +    -0.38758952222173 * engine_typeohcf
128933    +          +    -0.02182861600599 * engine_typeohcv ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.04565178534847 * IMP_num_of_doors2 + -0.19697323559306 * 
REP_aspirationS + 0.22441677117341 * REP_body_styleC + -0.02928079039896 * REP_body_styleH + 
-0.32302273741455 * REP_body_styleS + -0.34785776016975 * REP_drive_wheels4 + 0.10897139165566 
* REP_drive_wheelsF + -0.04922700305318 * REP_engine_locationF + -0.26217753108901 * 
REP_fuel_systemnon_spdi + -0.09655321276347 * REP_fuel_typeD + 0.23776476290772 * 
REP_num_of_cylinders__4 + 0.09807786136518 * engine_typedohc + -0.13265317517425 * 
engine_typel + -0.20346070618898 * engine_typeohc + -0.38758952222173 * engine_typeohcf + 
-0.02182861600599 * engine_typeohcv ;
128934    +   H12  = H12  +     0.26990643452778 * IMP_num_of_doors2
128935    +          +       0.167681754676 * REP_aspirationS  +     0.12265207155474 *
128936    +        REP_body_styleC  +     0.01179187263391 * REP_body_styleH
128937    +          +    -0.19097006494623 * REP_body_styleS  +     0.02816873649616 *
128938    +        REP_drive_wheels4  +     0.00159784165226 * REP_drive_wheelsF
128939    +          +    -0.02772792707071 * REP_engine_locationF
128940    +          +     0.12038561732288 * REP_fuel_systemnon_spdi
128941    +          +    -0.14129190020361 * REP_fuel_typeD  +     0.19062991356263 *
128942    +        REP_num_of_cylinders__4  +     0.24458965384513 * engine_typedohc
128943    +          +     0.06535466491026 * engine_typel  +     0.03320508558174 *
128944    +        engine_typeohc  +    -0.18114960783147 * engine_typeohcf
128945    +          +    -0.07940214830665 * engine_typeohcv ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.26990643452778 * IMP_num_of_doors2 + 0.167681754676 * 
REP_aspirationS + 0.12265207155474 * REP_body_styleC + 0.01179187263391 * REP_body_styleH + 
-0.19097006494623 * REP_body_styleS + 0.02816873649616 * REP_drive_wheels4 + 0.00159784165226 
* REP_drive_wheelsF + -0.02772792707071 * REP_engine_locationF + 0.12038561732288 * 
REP_fuel_systemnon_spdi + -0.14129190020361 * REP_fuel_typeD + 0.19062991356263 * 
REP_num_of_cylinders__4 + 0.24458965384513 * engine_typedohc + 0.06535466491026 * engine_typel 
+ 0.03320508558174 * engine_typeohc + -0.18114960783147 * engine_typeohcf + -0.07940214830665 
* engine_typeohcv ;
128946    +   H13  = H13  +     1.05539312393709 * IMP_num_of_doors2
128947    +          +     0.12429838443133 * REP_aspirationS  +     0.40169612542437 *
128948    +        REP_body_styleC  +    -0.09868938303023 * REP_body_styleH
128949    +          +      0.2376441839816 * REP_body_styleS  +     0.13697634714208 *
128950    +        REP_drive_wheels4  +     0.10951824489242 * REP_drive_wheelsF
128951    +          +    -0.39061918168859 * REP_engine_locationF
128952    +          +    -0.35137171605866 * REP_fuel_systemnon_spdi
128953    +          +    -0.02185171430754 * REP_fuel_typeD  +    -0.09138285511683 *
128954    +        REP_num_of_cylinders__4  +     0.03269731016982 * engine_typedohc
128955    +          +     0.05515310047148 * engine_typel  +     0.73759347527352 *
128956    +        engine_typeohc  +    -0.25108559978843 * engine_typeohcf
128957    +          +    -0.04350517211887 * engine_typeohcv ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.05539312393709 * IMP_num_of_doors2 + 0.12429838443133 * 
REP_aspirationS + 0.40169612542437 * REP_body_styleC + -0.09868938303023 * REP_body_styleH + 
0.2376441839816 * REP_body_styleS + 0.13697634714208 * REP_drive_wheels4 + 0.10951824489242 * 
REP_drive_wheelsF + -0.39061918168859 * REP_engine_locationF + -0.35137171605866 * 
REP_fuel_systemnon_spdi + -0.02185171430754 * REP_fuel_typeD + -0.09138285511683 * 
REP_num_of_cylinders__4 + 0.03269731016982 * engine_typedohc + 0.05515310047148 * engine_typel 
+ 0.73759347527352 * engine_typeohc + -0.25108559978843 * engine_typeohcf + -0.04350517211887 
* engine_typeohcv ;
128958    +   H14  = H14  +    -0.02666661002825 * IMP_num_of_doors2
128959    +          +     0.23388455289343 * REP_aspirationS  +     0.14743723464082 *
128960    +        REP_body_styleC  +      0.0123336113796 * REP_body_styleH
128961    +          +     0.09096512684108 * REP_body_styleS  +     0.10317954156915 *
128962    +        REP_drive_wheels4  +    -0.02461397967256 * REP_drive_wheelsF
128963    +          +     0.23880808113951 * REP_engine_locationF
128964    +          +     0.07730157092911 * REP_fuel_systemnon_spdi
128965    +          +    -0.18576165929056 * REP_fuel_typeD  +    -0.07768584919964 *
128966    +        REP_num_of_cylinders__4  +    -0.12278489872095 * engine_typedohc
128967    +          +    -0.11219020348018 * engine_typel  +    -0.25056732048025 *
128968    +        engine_typeohc  +     0.04020447734225 * engine_typeohcf
128969    +          +    -0.01124754988024 * engine_typeohcv ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.02666661002825 * IMP_num_of_doors2 + 0.23388455289343 * 
REP_aspirationS + 0.14743723464082 * REP_body_styleC + 0.0123336113796 * REP_body_styleH + 
0.09096512684108 * REP_body_styleS + 0.10317954156915 * REP_drive_wheels4 + -0.02461397967256 
* REP_drive_wheelsF + 0.23880808113951 * REP_engine_locationF + 0.07730157092911 * 
REP_fuel_systemnon_spdi + -0.18576165929056 * REP_fuel_typeD + -0.07768584919964 * 
REP_num_of_cylinders__4 + -0.12278489872095 * engine_typedohc + -0.11219020348018 * 
engine_typel + -0.25056732048025 * engine_typeohc + 0.04020447734225 * engine_typeohcf + 
-0.01124754988024 * engine_typeohcv ;
128970    +   H11  =     0.16799741694776 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.16799741694776 + H11 ;
128971    +   H12  =     0.36085487833004 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36085487833004 + H12 ;
128972    +   H13  =     0.92763058157618 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.92763058157618 + H13 ;
128973    +   H14  =     1.24301062195055 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.24301062195055 + H14 ;
128974    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
128975    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
128976    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
128977    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
128978    +END;
MPRINT(EM_DIAGRAM):   END;
128979    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
128980    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
128981    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
128982    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
128983    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
128984    +END;
MPRINT(EM_DIAGRAM):   END;
128985    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128986    +*** Writing the Node Risk ;
MPRINT(EM_DIAGRAM):   *** Writing the Node Risk ;
128987    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
128988    +
128989    +*** Generate dummy variables for Risk ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Risk ;
128990    +drop Risk1 Risk0 ;
MPRINT(EM_DIAGRAM):   drop Risk1 Risk0 ;
128991    +label F_Risk = 'From: Risk' ;
MPRINT(EM_DIAGRAM):   label F_Risk = 'From: Risk' ;
128992    +length F_Risk $ 12;
MPRINT(EM_DIAGRAM):   length F_Risk $ 12;
128993    +F_Risk = put( Risk , BEST12. );
MPRINT(EM_DIAGRAM):   F_Risk = put( Risk , BEST12. );
128994    +%DMNORMIP( F_Risk )
MPRINT(DMNORMIP):   call dmnorm(F_Risk,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
128995    +if missing( Risk ) then do;
MPRINT(EM_DIAGRAM):   if missing( Risk ) then do;
128996    +   Risk1 = .;
MPRINT(EM_DIAGRAM):   Risk1 = .;
128997    +   Risk0 = .;
MPRINT(EM_DIAGRAM):   Risk0 = .;
128998    +end;
MPRINT(EM_DIAGRAM):   end;
128999    +else do;
MPRINT(EM_DIAGRAM):   else do;
129000    +   if F_Risk = '1'  then do;
MPRINT(EM_DIAGRAM):   if F_Risk = '1' then do;
129001    +      Risk1 = 1;
MPRINT(EM_DIAGRAM):   Risk1 = 1;
129002    +      Risk0 = 0;
MPRINT(EM_DIAGRAM):   Risk0 = 0;
129003    +   end;
MPRINT(EM_DIAGRAM):   end;
129004    +   else if F_Risk = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_Risk = '0' then do;
129005    +      Risk1 = 0;
MPRINT(EM_DIAGRAM):   Risk1 = 0;
129006    +      Risk0 = 1;
MPRINT(EM_DIAGRAM):   Risk0 = 1;
129007    +   end;
MPRINT(EM_DIAGRAM):   end;
129008    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129009    +      Risk1 = .;
MPRINT(EM_DIAGRAM):   Risk1 = .;
129010    +      Risk0 = .;
MPRINT(EM_DIAGRAM):   Risk0 = .;
129011    +   end;
MPRINT(EM_DIAGRAM):   end;
129012    +end;
MPRINT(EM_DIAGRAM):   end;
129013    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
129014    +   P_Risk1  =     2.33058130691871 * H11  +      0.6315559780393 * H12
129015    +          +     2.68752606098709 * H13  +     -0.1774721562472 * H14 ;
MPRINT(EM_DIAGRAM):   P_Risk1 = 2.33058130691871 * H11 + 0.6315559780393 * H12 + 
2.68752606098709 * H13 + -0.1774721562472 * H14 ;
129016    +   P_Risk1  =    -0.37783197107417 + P_Risk1 ;
MPRINT(EM_DIAGRAM):   P_Risk1 = -0.37783197107417 + P_Risk1 ;
129017    +   P_Risk0  = 0;
MPRINT(EM_DIAGRAM):   P_Risk0 = 0;
129018    +   _MAX_ = MAX (P_Risk1 , P_Risk0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_Risk1 , P_Risk0 );
129019    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
129020    +   P_Risk1  = EXP(P_Risk1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Risk1 = EXP(P_Risk1 - _MAX_);
129021    +   _SUM_ = _SUM_ + P_Risk1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Risk1 ;
129022    +   P_Risk0  = EXP(P_Risk0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Risk0 = EXP(P_Risk0 - _MAX_);
129023    +   _SUM_ = _SUM_ + P_Risk0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Risk0 ;
129024    +   P_Risk1  = P_Risk1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Risk1 = P_Risk1 / _SUM_;
129025    +   P_Risk0  = P_Risk0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Risk0 = P_Risk0 / _SUM_;
129026    +END;
MPRINT(EM_DIAGRAM):   END;
129027    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
129028    +   P_Risk1  = .;
MPRINT(EM_DIAGRAM):   P_Risk1 = .;
129029    +   P_Risk0  = .;
MPRINT(EM_DIAGRAM):   P_Risk0 = .;
129030    +END;
MPRINT(EM_DIAGRAM):   END;
129031    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
129032    +   P_Risk1  =                 0.54;
MPRINT(EM_DIAGRAM):   P_Risk1 = 0.54;
129033    +   P_Risk0  =                 0.46;
MPRINT(EM_DIAGRAM):   P_Risk0 = 0.46;
129034    +END;
MPRINT(EM_DIAGRAM):   END;
129035    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
129036    +*** Writing the Residuals  of the Node Risk ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node Risk ;
129037    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
129038    +IF MISSING( Risk1 ) THEN R_Risk1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Risk1 ) THEN R_Risk1 = . ;
129039    +ELSE R_Risk1  = Risk1  - P_Risk1 ;
MPRINT(EM_DIAGRAM):   ELSE R_Risk1 = Risk1 - P_Risk1 ;
129040    +IF MISSING( Risk0 ) THEN R_Risk0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Risk0 ) THEN R_Risk0 = . ;
129041    +ELSE R_Risk0  = Risk0  - P_Risk0 ;
MPRINT(EM_DIAGRAM):   ELSE R_Risk0 = Risk0 - P_Risk0 ;
129042    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129043    +*** Writing the I_Risk  AND U_Risk ;
MPRINT(EM_DIAGRAM):   *** Writing the I_Risk AND U_Risk ;
129044    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129045    +_MAXP_ = P_Risk1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Risk1 ;
129046    +I_Risk  = "1           " ;
MPRINT(EM_DIAGRAM):   I_Risk = "1           " ;
129047    +U_Risk  =                    1;
MPRINT(EM_DIAGRAM):   U_Risk = 1;
129048    +IF( _MAXP_ LT P_Risk0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_Risk0 ) THEN DO;
129049    +   _MAXP_ = P_Risk0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Risk0 ;
129050    +   I_Risk  = "0           " ;
MPRINT(EM_DIAGRAM):   I_Risk = "0           " ;
129051    +   U_Risk  =                    0;
MPRINT(EM_DIAGRAM):   U_Risk = 0;
129052    +END;
MPRINT(EM_DIAGRAM):   END;
129053    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
129054    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
129055    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
129056    +drop
129057    +H11
129058    +H12
129059    +H13
129060    +H14
129061    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
129062    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
129063     run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL4_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REPL2_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.26 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
129064     quit;
129065     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
129066     filename emflow "H:\746\Decision Tree test\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas"
129066   ! ;
MPRINT(EM_DIAGRAM):    filename emflow "H:\746\Decision Tree 
test\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
129067     *------------------------------------------------------------*;
129068     * Neural4: Scoring VALIDATE data;
129069     *------------------------------------------------------------*;
129070     data EMWS1.Neural4_VALIDATE
129071     / view=EMWS1.Neural4_VALIDATE
129072     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural4_VALIDATE / view=EMWS1.Neural4_VALIDATE ;
129073     set EMWS1.Repl2_VALIDATE
129074     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Repl2_VALIDATE ;
129075     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file H:\746\Decision Tree 
      test\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas.
129076    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
129077    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
129078    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
129079    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
129080    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
129081    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
129082    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
129083    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
129084    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
129085    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
129086    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
129087    +LENGTH _WARN_ $4
129088    +      F_Risk  $ 12
129089    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_Risk $ 12 ;
129090    +      label S_LOG_REP_IMP_price = 'Standard: LOG_REP_IMP_price' ;
MPRINT(EM_DIAGRAM):   label S_LOG_REP_IMP_price = 'Standard: LOG_REP_IMP_price' ;
129091    +
129092    +      label S_LOG_REP_compression_ratio =
129093    +'Standard: LOG_REP_compression_ratio' ;
MPRINT(EM_DIAGRAM):   label S_LOG_REP_compression_ratio = 'Standard: 
LOG_REP_compression_ratio' ;
129094    +
129095    +      label S_LOG_REP_engine_size = 'Standard: LOG_REP_engine_size' ;
MPRINT(EM_DIAGRAM):   label S_LOG_REP_engine_size = 'Standard: LOG_REP_engine_size' ;
129096    +
129097    +      label S_REP_IMP_bore = 'Standard: REP_IMP_bore' ;
MPRINT(EM_DIAGRAM):   label S_REP_IMP_bore = 'Standard: REP_IMP_bore' ;
129098    +
129099    +      label S_REP_IMP_stroke = 'Standard: REP_IMP_stroke' ;
MPRINT(EM_DIAGRAM):   label S_REP_IMP_stroke = 'Standard: REP_IMP_stroke' ;
129100    +
129101    +      label S_REP_city_mpg = 'Standard: REP_city_mpg' ;
MPRINT(EM_DIAGRAM):   label S_REP_city_mpg = 'Standard: REP_city_mpg' ;
129102    +
129103    +      label S_REP_curb_weight = 'Standard: REP_curb_weight' ;
MPRINT(EM_DIAGRAM):   label S_REP_curb_weight = 'Standard: REP_curb_weight' ;
129104    +
129105    +      label S_REP_height = 'Standard: REP_height' ;
MPRINT(EM_DIAGRAM):   label S_REP_height = 'Standard: REP_height' ;
129106    +
129107    +      label S_REP_highway_mpg = 'Standard: REP_highway_mpg' ;
MPRINT(EM_DIAGRAM):   label S_REP_highway_mpg = 'Standard: REP_highway_mpg' ;
129108    +
129109    +      label S_REP_horsepower = 'Standard: REP_horsepower' ;
MPRINT(EM_DIAGRAM):   label S_REP_horsepower = 'Standard: REP_horsepower' ;
129110    +
129111    +      label S_REP_length = 'Standard: REP_length' ;
MPRINT(EM_DIAGRAM):   label S_REP_length = 'Standard: REP_length' ;
129112    +
129113    +      label S_REP_peak_rpm = 'Standard: REP_peak_rpm' ;
MPRINT(EM_DIAGRAM):   label S_REP_peak_rpm = 'Standard: REP_peak_rpm' ;
129114    +
129115    +      label S_REP_wheel_base = 'Standard: REP_wheel_base' ;
MPRINT(EM_DIAGRAM):   label S_REP_wheel_base = 'Standard: REP_wheel_base' ;
129116    +
129117    +      label S_REP_width = 'Standard: REP_width' ;
MPRINT(EM_DIAGRAM):   label S_REP_width = 'Standard: REP_width' ;
129118    +
129119    +      label M_bore0 = 'Dummy: M_bore=0' ;
MPRINT(EM_DIAGRAM):   label M_bore0 = 'Dummy: M_bore=0' ;
129120    +
129121    +      label M_num_of_doors0 = 'Dummy: M_num_of_doors=0' ;
MPRINT(EM_DIAGRAM):   label M_num_of_doors0 = 'Dummy: M_num_of_doors=0' ;
129122    +
129123    +      label M_price0 = 'Dummy: M_price=0' ;
MPRINT(EM_DIAGRAM):   label M_price0 = 'Dummy: M_price=0' ;
129124    +
129125    +      label M_stroke0 = 'Dummy: M_stroke=0' ;
MPRINT(EM_DIAGRAM):   label M_stroke0 = 'Dummy: M_stroke=0' ;
129126    +
129127    +      label IMP_num_of_doors2 = 'Dummy: IMP_num_of_doors=2' ;
MPRINT(EM_DIAGRAM):   label IMP_num_of_doors2 = 'Dummy: IMP_num_of_doors=2' ;
129128    +
129129    +      label REP_aspirationS = 'Dummy: REP_aspiration=S' ;
MPRINT(EM_DIAGRAM):   label REP_aspirationS = 'Dummy: REP_aspiration=S' ;
129130    +
129131    +      label REP_body_styleC = 'Dummy: REP_body_style=C' ;
MPRINT(EM_DIAGRAM):   label REP_body_styleC = 'Dummy: REP_body_style=C' ;
129132    +
129133    +      label REP_body_styleH = 'Dummy: REP_body_style=H' ;
MPRINT(EM_DIAGRAM):   label REP_body_styleH = 'Dummy: REP_body_style=H' ;
129134    +
129135    +      label REP_body_styleS = 'Dummy: REP_body_style=S' ;
MPRINT(EM_DIAGRAM):   label REP_body_styleS = 'Dummy: REP_body_style=S' ;
129136    +
129137    +      label REP_drive_wheels4 = 'Dummy: REP_drive_wheels=4' ;
MPRINT(EM_DIAGRAM):   label REP_drive_wheels4 = 'Dummy: REP_drive_wheels=4' ;
129138    +
129139    +      label REP_drive_wheelsF = 'Dummy: REP_drive_wheels=F' ;
MPRINT(EM_DIAGRAM):   label REP_drive_wheelsF = 'Dummy: REP_drive_wheels=F' ;
129140    +
129141    +      label REP_engine_locationF = 'Dummy: REP_engine_location=F' ;
MPRINT(EM_DIAGRAM):   label REP_engine_locationF = 'Dummy: REP_engine_location=F' ;
129142    +
129143    +      label REP_fuel_systemnon_spdi = 'Dummy: REP_fuel_system=non-spdi' ;
MPRINT(EM_DIAGRAM):   label REP_fuel_systemnon_spdi = 'Dummy: REP_fuel_system=non-spdi' ;
129144    +
129145    +      label REP_fuel_typeD = 'Dummy: REP_fuel_type=D' ;
MPRINT(EM_DIAGRAM):   label REP_fuel_typeD = 'Dummy: REP_fuel_type=D' ;
129146    +
129147    +      label REP_num_of_cylinders__4 = 'Dummy: REP_num_of_cylinders=<=4' ;
MPRINT(EM_DIAGRAM):   label REP_num_of_cylinders__4 = 'Dummy: REP_num_of_cylinders=<=4' ;
129148    +
129149    +      label engine_typedohc = 'Dummy: engine_type=dohc' ;
MPRINT(EM_DIAGRAM):   label engine_typedohc = 'Dummy: engine_type=dohc' ;
129150    +
129151    +      label engine_typel = 'Dummy: engine_type=l' ;
MPRINT(EM_DIAGRAM):   label engine_typel = 'Dummy: engine_type=l' ;
129152    +
129153    +      label engine_typeohc = 'Dummy: engine_type=ohc' ;
MPRINT(EM_DIAGRAM):   label engine_typeohc = 'Dummy: engine_type=ohc' ;
129154    +
129155    +      label engine_typeohcf = 'Dummy: engine_type=ohcf' ;
MPRINT(EM_DIAGRAM):   label engine_typeohcf = 'Dummy: engine_type=ohcf' ;
129156    +
129157    +      label engine_typeohcv = 'Dummy: engine_type=ohcv' ;
MPRINT(EM_DIAGRAM):   label engine_typeohcv = 'Dummy: engine_type=ohcv' ;
129158    +
129159    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
129160    +
129161    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
129162    +
129163    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
129164    +
129165    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
129166    +
129167    +      label I_Risk = 'Into: Risk' ;
MPRINT(EM_DIAGRAM):   label I_Risk = 'Into: Risk' ;
129168    +
129169    +      label F_Risk = 'From: Risk' ;
MPRINT(EM_DIAGRAM):   label F_Risk = 'From: Risk' ;
129170    +
129171    +      label U_Risk = 'Unnormalized Into: Risk' ;
MPRINT(EM_DIAGRAM):   label U_Risk = 'Unnormalized Into: Risk' ;
129172    +
129173    +      label P_Risk1 = 'Predicted: Risk=1' ;
MPRINT(EM_DIAGRAM):   label P_Risk1 = 'Predicted: Risk=1' ;
129174    +
129175    +      label R_Risk1 = 'Residual: Risk=1' ;
MPRINT(EM_DIAGRAM):   label R_Risk1 = 'Residual: Risk=1' ;
129176    +
129177    +      label P_Risk0 = 'Predicted: Risk=0' ;
MPRINT(EM_DIAGRAM):   label P_Risk0 = 'Predicted: Risk=0' ;
129178    +
129179    +      label R_Risk0 = 'Residual: Risk=0' ;
MPRINT(EM_DIAGRAM):   label R_Risk0 = 'Residual: Risk=0' ;
129180    +
129181    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
129182    +
129183    +*** Generate dummy variables for M_bore ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for M_bore ;
129184    +drop M_bore0 ;
MPRINT(EM_DIAGRAM):   drop M_bore0 ;
129185    +if missing( M_bore ) then do;
MPRINT(EM_DIAGRAM):   if missing( M_bore ) then do;
129186    +   M_bore0 = .;
MPRINT(EM_DIAGRAM):   M_bore0 = .;
129187    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129188    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129189    +end;
MPRINT(EM_DIAGRAM):   end;
129190    +else do;
MPRINT(EM_DIAGRAM):   else do;
129191    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129192    +   _dm12 = put( M_bore , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( M_bore , BEST12. );
129193    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129194    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
129195    +      M_bore0 = 1;
MPRINT(EM_DIAGRAM):   M_bore0 = 1;
129196    +   end;
MPRINT(EM_DIAGRAM):   end;
129197    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
129198    +      M_bore0 = -1;
MPRINT(EM_DIAGRAM):   M_bore0 = -1;
129199    +   end;
MPRINT(EM_DIAGRAM):   end;
129200    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129201    +      M_bore0 = .;
MPRINT(EM_DIAGRAM):   M_bore0 = .;
129202    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129203    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129204    +   end;
MPRINT(EM_DIAGRAM):   end;
129205    +end;
MPRINT(EM_DIAGRAM):   end;
129206    +
129207    +*** Generate dummy variables for M_num_of_doors ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for M_num_of_doors ;
129208    +drop M_num_of_doors0 ;
MPRINT(EM_DIAGRAM):   drop M_num_of_doors0 ;
129209    +if missing( M_num_of_doors ) then do;
MPRINT(EM_DIAGRAM):   if missing( M_num_of_doors ) then do;
129210    +   M_num_of_doors0 = .;
MPRINT(EM_DIAGRAM):   M_num_of_doors0 = .;
129211    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129212    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129213    +end;
MPRINT(EM_DIAGRAM):   end;
129214    +else do;
MPRINT(EM_DIAGRAM):   else do;
129215    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129216    +   _dm12 = put( M_num_of_doors , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( M_num_of_doors , BEST12. );
129217    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129218    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
129219    +      M_num_of_doors0 = 1;
MPRINT(EM_DIAGRAM):   M_num_of_doors0 = 1;
129220    +   end;
MPRINT(EM_DIAGRAM):   end;
129221    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
129222    +      M_num_of_doors0 = -1;
MPRINT(EM_DIAGRAM):   M_num_of_doors0 = -1;
129223    +   end;
MPRINT(EM_DIAGRAM):   end;
129224    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129225    +      M_num_of_doors0 = .;
MPRINT(EM_DIAGRAM):   M_num_of_doors0 = .;
129226    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129227    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129228    +   end;
MPRINT(EM_DIAGRAM):   end;
129229    +end;
MPRINT(EM_DIAGRAM):   end;
129230    +
129231    +*** Generate dummy variables for M_price ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for M_price ;
129232    +drop M_price0 ;
MPRINT(EM_DIAGRAM):   drop M_price0 ;
129233    +if missing( M_price ) then do;
MPRINT(EM_DIAGRAM):   if missing( M_price ) then do;
129234    +   M_price0 = .;
MPRINT(EM_DIAGRAM):   M_price0 = .;
129235    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129236    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129237    +end;
MPRINT(EM_DIAGRAM):   end;
129238    +else do;
MPRINT(EM_DIAGRAM):   else do;
129239    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129240    +   _dm12 = put( M_price , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( M_price , BEST12. );
129241    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129242    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
129243    +      M_price0 = 1;
MPRINT(EM_DIAGRAM):   M_price0 = 1;
129244    +   end;
MPRINT(EM_DIAGRAM):   end;
129245    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
129246    +      M_price0 = -1;
MPRINT(EM_DIAGRAM):   M_price0 = -1;
129247    +   end;
MPRINT(EM_DIAGRAM):   end;
129248    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129249    +      M_price0 = .;
MPRINT(EM_DIAGRAM):   M_price0 = .;
129250    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129251    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129252    +   end;
MPRINT(EM_DIAGRAM):   end;
129253    +end;
MPRINT(EM_DIAGRAM):   end;
129254    +
129255    +*** Generate dummy variables for M_stroke ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for M_stroke ;
129256    +drop M_stroke0 ;
MPRINT(EM_DIAGRAM):   drop M_stroke0 ;
129257    +if missing( M_stroke ) then do;
MPRINT(EM_DIAGRAM):   if missing( M_stroke ) then do;
129258    +   M_stroke0 = .;
MPRINT(EM_DIAGRAM):   M_stroke0 = .;
129259    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129260    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129261    +end;
MPRINT(EM_DIAGRAM):   end;
129262    +else do;
MPRINT(EM_DIAGRAM):   else do;
129263    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129264    +   _dm12 = put( M_stroke , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( M_stroke , BEST12. );
129265    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129266    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
129267    +      M_stroke0 = 1;
MPRINT(EM_DIAGRAM):   M_stroke0 = 1;
129268    +   end;
MPRINT(EM_DIAGRAM):   end;
129269    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
129270    +      M_stroke0 = -1;
MPRINT(EM_DIAGRAM):   M_stroke0 = -1;
129271    +   end;
MPRINT(EM_DIAGRAM):   end;
129272    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129273    +      M_stroke0 = .;
MPRINT(EM_DIAGRAM):   M_stroke0 = .;
129274    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129275    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129276    +   end;
MPRINT(EM_DIAGRAM):   end;
129277    +end;
MPRINT(EM_DIAGRAM):   end;
129278    +
129279    +*** Generate dummy variables for IMP_num_of_doors ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for IMP_num_of_doors ;
129280    +drop IMP_num_of_doors2 ;
MPRINT(EM_DIAGRAM):   drop IMP_num_of_doors2 ;
129281    +if missing( IMP_num_of_doors ) then do;
MPRINT(EM_DIAGRAM):   if missing( IMP_num_of_doors ) then do;
129282    +   IMP_num_of_doors2 = .;
MPRINT(EM_DIAGRAM):   IMP_num_of_doors2 = .;
129283    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129284    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129285    +end;
MPRINT(EM_DIAGRAM):   end;
129286    +else do;
MPRINT(EM_DIAGRAM):   else do;
129287    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
129288    +   _dm12 = put( IMP_num_of_doors , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( IMP_num_of_doors , BEST12. );
129289    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129290    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
129291    +      IMP_num_of_doors2 = -1;
MPRINT(EM_DIAGRAM):   IMP_num_of_doors2 = -1;
129292    +   end;
MPRINT(EM_DIAGRAM):   end;
129293    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
129294    +      IMP_num_of_doors2 = 1;
MPRINT(EM_DIAGRAM):   IMP_num_of_doors2 = 1;
129295    +   end;
MPRINT(EM_DIAGRAM):   end;
129296    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129297    +      IMP_num_of_doors2 = .;
MPRINT(EM_DIAGRAM):   IMP_num_of_doors2 = .;
129298    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129299    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129300    +   end;
MPRINT(EM_DIAGRAM):   end;
129301    +end;
MPRINT(EM_DIAGRAM):   end;
129302    +
129303    +*** Generate dummy variables for REP_aspiration ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for REP_aspiration ;
129304    +drop REP_aspirationS ;
MPRINT(EM_DIAGRAM):   drop REP_aspirationS ;
129305    +if missing( REP_aspiration ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_aspiration ) then do;
129306    +   REP_aspirationS = .;
MPRINT(EM_DIAGRAM):   REP_aspirationS = .;
129307    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129308    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129309    +end;
MPRINT(EM_DIAGRAM):   end;
129310    +else do;
MPRINT(EM_DIAGRAM):   else do;
129311    +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
129312    +   _dm5 = put( REP_aspiration , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( REP_aspiration , $5. );
129313    +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129314    +   if _dm5 = 'S'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = 'S' then do;
129315    +      REP_aspirationS = 1;
MPRINT(EM_DIAGRAM):   REP_aspirationS = 1;
129316    +   end;
MPRINT(EM_DIAGRAM):   end;
129317    +   else if _dm5 = 'T'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'T' then do;
129318    +      REP_aspirationS = -1;
MPRINT(EM_DIAGRAM):   REP_aspirationS = -1;
129319    +   end;
MPRINT(EM_DIAGRAM):   end;
129320    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129321    +      REP_aspirationS = .;
MPRINT(EM_DIAGRAM):   REP_aspirationS = .;
129322    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129323    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129324    +   end;
MPRINT(EM_DIAGRAM):   end;
129325    +end;
MPRINT(EM_DIAGRAM):   end;
129326    +
129327    +*** Generate dummy variables for REP_body_style ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for REP_body_style ;
129328    +drop REP_body_styleC REP_body_styleH REP_body_styleS ;
MPRINT(EM_DIAGRAM):   drop REP_body_styleC REP_body_styleH REP_body_styleS ;
129329    +if missing( REP_body_style ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_body_style ) then do;
129330    +   REP_body_styleC = .;
MPRINT(EM_DIAGRAM):   REP_body_styleC = .;
129331    +   REP_body_styleH = .;
MPRINT(EM_DIAGRAM):   REP_body_styleH = .;
129332    +   REP_body_styleS = .;
MPRINT(EM_DIAGRAM):   REP_body_styleS = .;
129333    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129334    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129335    +end;
MPRINT(EM_DIAGRAM):   end;
129336    +else do;
MPRINT(EM_DIAGRAM):   else do;
129337    +   length _dm11 $ 11; drop _dm11 ;
MPRINT(EM_DIAGRAM):   length _dm11 $ 11;
MPRINT(EM_DIAGRAM):   drop _dm11 ;
129338    +   %DMNORMCP( REP_body_style , _dm11 )
MPRINT(DMNORMCP):   _dm11=dmnorm(REP_body_style,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
129339    +   if _dm11 = 'S'  then do;
MPRINT(EM_DIAGRAM):   if _dm11 = 'S' then do;
129340    +      REP_body_styleC = 0;
MPRINT(EM_DIAGRAM):   REP_body_styleC = 0;
129341    +      REP_body_styleH = 0;
MPRINT(EM_DIAGRAM):   REP_body_styleH = 0;
129342    +      REP_body_styleS = 1;
MPRINT(EM_DIAGRAM):   REP_body_styleS = 1;
129343    +   end;
MPRINT(EM_DIAGRAM):   end;
129344    +   else if _dm11 = 'H'  then do;
MPRINT(EM_DIAGRAM):   else if _dm11 = 'H' then do;
129345    +      REP_body_styleC = 0;
MPRINT(EM_DIAGRAM):   REP_body_styleC = 0;
129346    +      REP_body_styleH = 1;
MPRINT(EM_DIAGRAM):   REP_body_styleH = 1;
129347    +      REP_body_styleS = 0;
MPRINT(EM_DIAGRAM):   REP_body_styleS = 0;
129348    +   end;
MPRINT(EM_DIAGRAM):   end;
129349    +   else if _dm11 = 'W'  then do;
MPRINT(EM_DIAGRAM):   else if _dm11 = 'W' then do;
129350    +      REP_body_styleC = -1;
MPRINT(EM_DIAGRAM):   REP_body_styleC = -1;
129351    +      REP_body_styleH = -1;
MPRINT(EM_DIAGRAM):   REP_body_styleH = -1;
129352    +      REP_body_styleS = -1;
MPRINT(EM_DIAGRAM):   REP_body_styleS = -1;
129353    +   end;
MPRINT(EM_DIAGRAM):   end;
129354    +   else if _dm11 = 'C'  then do;
MPRINT(EM_DIAGRAM):   else if _dm11 = 'C' then do;
129355    +      REP_body_styleC = 1;
MPRINT(EM_DIAGRAM):   REP_body_styleC = 1;
129356    +      REP_body_styleH = 0;
MPRINT(EM_DIAGRAM):   REP_body_styleH = 0;
129357    +      REP_body_styleS = 0;
MPRINT(EM_DIAGRAM):   REP_body_styleS = 0;
129358    +   end;
MPRINT(EM_DIAGRAM):   end;
129359    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129360    +      REP_body_styleC = .;
MPRINT(EM_DIAGRAM):   REP_body_styleC = .;
129361    +      REP_body_styleH = .;
MPRINT(EM_DIAGRAM):   REP_body_styleH = .;
129362    +      REP_body_styleS = .;
MPRINT(EM_DIAGRAM):   REP_body_styleS = .;
129363    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129364    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129365    +   end;
MPRINT(EM_DIAGRAM):   end;
129366    +end;
MPRINT(EM_DIAGRAM):   end;
129367    +
129368    +*** Generate dummy variables for REP_drive_wheels ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for REP_drive_wheels ;
129369    +drop REP_drive_wheels4 REP_drive_wheelsF ;
MPRINT(EM_DIAGRAM):   drop REP_drive_wheels4 REP_drive_wheelsF ;
129370    +if missing( REP_drive_wheels ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_drive_wheels ) then do;
129371    +   REP_drive_wheels4 = .;
MPRINT(EM_DIAGRAM):   REP_drive_wheels4 = .;
129372    +   REP_drive_wheelsF = .;
MPRINT(EM_DIAGRAM):   REP_drive_wheelsF = .;
129373    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129374    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129375    +end;
MPRINT(EM_DIAGRAM):   end;
129376    +else do;
MPRINT(EM_DIAGRAM):   else do;
129377    +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
129378    +   %DMNORMCP( REP_drive_wheels , _dm3 )
MPRINT(DMNORMCP):   _dm3=dmnorm(REP_drive_wheels,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
129379    +   if _dm3 = 'F'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'F' then do;
129380    +      REP_drive_wheels4 = 0;
MPRINT(EM_DIAGRAM):   REP_drive_wheels4 = 0;
129381    +      REP_drive_wheelsF = 1;
MPRINT(EM_DIAGRAM):   REP_drive_wheelsF = 1;
129382    +   end;
MPRINT(EM_DIAGRAM):   end;
129383    +   else if _dm3 = 'R'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'R' then do;
129384    +      REP_drive_wheels4 = -1;
MPRINT(EM_DIAGRAM):   REP_drive_wheels4 = -1;
129385    +      REP_drive_wheelsF = -1;
MPRINT(EM_DIAGRAM):   REP_drive_wheelsF = -1;
129386    +   end;
MPRINT(EM_DIAGRAM):   end;
129387    +   else if _dm3 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = '4' then do;
129388    +      REP_drive_wheels4 = 1;
MPRINT(EM_DIAGRAM):   REP_drive_wheels4 = 1;
129389    +      REP_drive_wheelsF = 0;
MPRINT(EM_DIAGRAM):   REP_drive_wheelsF = 0;
129390    +   end;
MPRINT(EM_DIAGRAM):   end;
129391    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129392    +      REP_drive_wheels4 = .;
MPRINT(EM_DIAGRAM):   REP_drive_wheels4 = .;
129393    +      REP_drive_wheelsF = .;
MPRINT(EM_DIAGRAM):   REP_drive_wheelsF = .;
129394    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129395    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129396    +   end;
MPRINT(EM_DIAGRAM):   end;
129397    +end;
MPRINT(EM_DIAGRAM):   end;
129398    +
129399    +*** Generate dummy variables for REP_engine_location ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for REP_engine_location ;
129400    +drop REP_engine_locationF ;
MPRINT(EM_DIAGRAM):   drop REP_engine_locationF ;
129401    +if missing( REP_engine_location ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_engine_location ) then do;
129402    +   REP_engine_locationF = .;
MPRINT(EM_DIAGRAM):   REP_engine_locationF = .;
129403    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129404    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129405    +end;
MPRINT(EM_DIAGRAM):   end;
129406    +else do;
MPRINT(EM_DIAGRAM):   else do;
129407    +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
129408    +   %DMNORMCP( REP_engine_location , _dm5 )
MPRINT(DMNORMCP):   _dm5=dmnorm(REP_engine_location,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
129409    +   if _dm5 = 'F'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = 'F' then do;
129410    +      REP_engine_locationF = 1;
MPRINT(EM_DIAGRAM):   REP_engine_locationF = 1;
129411    +   end;
MPRINT(EM_DIAGRAM):   end;
129412    +   else if _dm5 = 'R'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'R' then do;
129413    +      REP_engine_locationF = -1;
MPRINT(EM_DIAGRAM):   REP_engine_locationF = -1;
129414    +   end;
MPRINT(EM_DIAGRAM):   end;
129415    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129416    +      REP_engine_locationF = .;
MPRINT(EM_DIAGRAM):   REP_engine_locationF = .;
129417    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129418    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129419    +   end;
MPRINT(EM_DIAGRAM):   end;
129420    +end;
MPRINT(EM_DIAGRAM):   end;
129421    +
129422    +*** Generate dummy variables for REP_fuel_system ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for REP_fuel_system ;
129423    +drop REP_fuel_systemnon_spdi ;
MPRINT(EM_DIAGRAM):   drop REP_fuel_systemnon_spdi ;
129424    +if missing( REP_fuel_system ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_fuel_system ) then do;
129425    +   REP_fuel_systemnon_spdi = .;
MPRINT(EM_DIAGRAM):   REP_fuel_systemnon_spdi = .;
129426    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129427    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129428    +end;
MPRINT(EM_DIAGRAM):   end;
129429    +else do;
MPRINT(EM_DIAGRAM):   else do;
129430    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
129431    +   %DMNORMCP( REP_fuel_system , _dm8 )
MPRINT(DMNORMCP):   _dm8=dmnorm(REP_fuel_system,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
129432    +   if _dm8 = 'NON-SPDI'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'NON-SPDI' then do;
129433    +      REP_fuel_systemnon_spdi = 1;
MPRINT(EM_DIAGRAM):   REP_fuel_systemnon_spdi = 1;
129434    +   end;
MPRINT(EM_DIAGRAM):   end;
129435    +   else if _dm8 = 'SPDI'  then do;
MPRINT(EM_DIAGRAM):   else if _dm8 = 'SPDI' then do;
129436    +      REP_fuel_systemnon_spdi = -1;
MPRINT(EM_DIAGRAM):   REP_fuel_systemnon_spdi = -1;
129437    +   end;
MPRINT(EM_DIAGRAM):   end;
129438    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129439    +      REP_fuel_systemnon_spdi = .;
MPRINT(EM_DIAGRAM):   REP_fuel_systemnon_spdi = .;
129440    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129441    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129442    +   end;
MPRINT(EM_DIAGRAM):   end;
129443    +end;
MPRINT(EM_DIAGRAM):   end;
129444    +
129445    +*** Generate dummy variables for REP_fuel_type ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for REP_fuel_type ;
129446    +drop REP_fuel_typeD ;
MPRINT(EM_DIAGRAM):   drop REP_fuel_typeD ;
129447    +if missing( REP_fuel_type ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_fuel_type ) then do;
129448    +   REP_fuel_typeD = .;
MPRINT(EM_DIAGRAM):   REP_fuel_typeD = .;
129449    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129450    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129451    +end;
MPRINT(EM_DIAGRAM):   end;
129452    +else do;
MPRINT(EM_DIAGRAM):   else do;
129453    +   length _dm6 $ 6; drop _dm6 ;
MPRINT(EM_DIAGRAM):   length _dm6 $ 6;
MPRINT(EM_DIAGRAM):   drop _dm6 ;
129454    +   %DMNORMCP( REP_fuel_type , _dm6 )
MPRINT(DMNORMCP):   _dm6=dmnorm(REP_fuel_type,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
129455    +   if _dm6 = 'G'  then do;
MPRINT(EM_DIAGRAM):   if _dm6 = 'G' then do;
129456    +      REP_fuel_typeD = -1;
MPRINT(EM_DIAGRAM):   REP_fuel_typeD = -1;
129457    +   end;
MPRINT(EM_DIAGRAM):   end;
129458    +   else if _dm6 = 'D'  then do;
MPRINT(EM_DIAGRAM):   else if _dm6 = 'D' then do;
129459    +      REP_fuel_typeD = 1;
MPRINT(EM_DIAGRAM):   REP_fuel_typeD = 1;
129460    +   end;
MPRINT(EM_DIAGRAM):   end;
129461    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129462    +      REP_fuel_typeD = .;
MPRINT(EM_DIAGRAM):   REP_fuel_typeD = .;
129463    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129464    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129465    +   end;
MPRINT(EM_DIAGRAM):   end;
129466    +end;
MPRINT(EM_DIAGRAM):   end;
129467    +
129468    +*** Generate dummy variables for REP_num_of_cylinders ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for REP_num_of_cylinders ;
129469    +drop REP_num_of_cylinders__4 ;
MPRINT(EM_DIAGRAM):   drop REP_num_of_cylinders__4 ;
129470    +if missing( REP_num_of_cylinders ) then do;
MPRINT(EM_DIAGRAM):   if missing( REP_num_of_cylinders ) then do;
129471    +   REP_num_of_cylinders__4 = .;
MPRINT(EM_DIAGRAM):   REP_num_of_cylinders__4 = .;
129472    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129473    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129474    +end;
MPRINT(EM_DIAGRAM):   end;
129475    +else do;
MPRINT(EM_DIAGRAM):   else do;
129476    +   length _dm6 $ 6; drop _dm6 ;
MPRINT(EM_DIAGRAM):   length _dm6 $ 6;
MPRINT(EM_DIAGRAM):   drop _dm6 ;
129477    +   %DMNORMCP( REP_num_of_cylinders , _dm6 )
MPRINT(DMNORMCP):   _dm6=dmnorm(REP_num_of_cylinders,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
129478    +   if _dm6 = '<=4'  then do;
MPRINT(EM_DIAGRAM):   if _dm6 = '<=4' then do;
129479    +      REP_num_of_cylinders__4 = 1;
MPRINT(EM_DIAGRAM):   REP_num_of_cylinders__4 = 1;
129480    +   end;
MPRINT(EM_DIAGRAM):   end;
129481    +   else if _dm6 = '>4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm6 = '>4' then do;
129482    +      REP_num_of_cylinders__4 = -1;
MPRINT(EM_DIAGRAM):   REP_num_of_cylinders__4 = -1;
129483    +   end;
MPRINT(EM_DIAGRAM):   end;
129484    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129485    +      REP_num_of_cylinders__4 = .;
MPRINT(EM_DIAGRAM):   REP_num_of_cylinders__4 = .;
129486    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129487    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129488    +   end;
MPRINT(EM_DIAGRAM):   end;
129489    +end;
MPRINT(EM_DIAGRAM):   end;
129490    +
129491    +*** Generate dummy variables for engine_type ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for engine_type ;
129492    +drop engine_typedohc engine_typel engine_typeohc engine_typeohcf
129493    +        engine_typeohcv ;
MPRINT(EM_DIAGRAM):   drop engine_typedohc engine_typel engine_typeohc engine_typeohcf 
engine_typeohcv ;
129494    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
129495    +engine_typedohc = 0;
MPRINT(EM_DIAGRAM):   engine_typedohc = 0;
129496    +engine_typel = 0;
MPRINT(EM_DIAGRAM):   engine_typel = 0;
129497    +engine_typeohc = 0;
MPRINT(EM_DIAGRAM):   engine_typeohc = 0;
129498    +engine_typeohcf = 0;
MPRINT(EM_DIAGRAM):   engine_typeohcf = 0;
129499    +engine_typeohcv = 0;
MPRINT(EM_DIAGRAM):   engine_typeohcv = 0;
129500    +if missing( engine_type ) then do;
MPRINT(EM_DIAGRAM):   if missing( engine_type ) then do;
129501    +   engine_typedohc = .;
MPRINT(EM_DIAGRAM):   engine_typedohc = .;
129502    +   engine_typel = .;
MPRINT(EM_DIAGRAM):   engine_typel = .;
129503    +   engine_typeohc = .;
MPRINT(EM_DIAGRAM):   engine_typeohc = .;
129504    +   engine_typeohcf = .;
MPRINT(EM_DIAGRAM):   engine_typeohcf = .;
129505    +   engine_typeohcv = .;
MPRINT(EM_DIAGRAM):   engine_typeohcv = .;
129506    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
129507    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129508    +end;
MPRINT(EM_DIAGRAM):   end;
129509    +else do;
MPRINT(EM_DIAGRAM):   else do;
129510    +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
129511    +   %DMNORMCP( engine_type , _dm5 )
MPRINT(DMNORMCP):   _dm5=dmnorm(engine_type,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
129512    +   if _dm5 = 'OHC'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = 'OHC' then do;
129513    +      engine_typeohc = 1;
MPRINT(EM_DIAGRAM):   engine_typeohc = 1;
129514    +   end;
MPRINT(EM_DIAGRAM):   end;
129515    +   else if _dm5 = 'OHCF'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'OHCF' then do;
129516    +      engine_typeohcf = 1;
MPRINT(EM_DIAGRAM):   engine_typeohcf = 1;
129517    +   end;
MPRINT(EM_DIAGRAM):   end;
129518    +   else if _dm5 = 'OHCV'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'OHCV' then do;
129519    +      engine_typeohcv = 1;
MPRINT(EM_DIAGRAM):   engine_typeohcv = 1;
129520    +   end;
MPRINT(EM_DIAGRAM):   end;
129521    +   else if _dm5 = 'DOHC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'DOHC' then do;
129522    +      engine_typedohc = 1;
MPRINT(EM_DIAGRAM):   engine_typedohc = 1;
129523    +   end;
MPRINT(EM_DIAGRAM):   end;
129524    +   else if _dm5 = 'L'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'L' then do;
129525    +      engine_typel = 1;
MPRINT(EM_DIAGRAM):   engine_typel = 1;
129526    +   end;
MPRINT(EM_DIAGRAM):   end;
129527    +   else if _dm5 = 'ROTOR'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'ROTOR' then do;
129528    +      engine_typedohc = -1;
MPRINT(EM_DIAGRAM):   engine_typedohc = -1;
129529    +      engine_typel = -1;
MPRINT(EM_DIAGRAM):   engine_typel = -1;
129530    +      engine_typeohc = -1;
MPRINT(EM_DIAGRAM):   engine_typeohc = -1;
129531    +      engine_typeohcf = -1;
MPRINT(EM_DIAGRAM):   engine_typeohcf = -1;
129532    +      engine_typeohcv = -1;
MPRINT(EM_DIAGRAM):   engine_typeohcv = -1;
129533    +   end;
MPRINT(EM_DIAGRAM):   end;
129534    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129535    +      engine_typedohc = .;
MPRINT(EM_DIAGRAM):   engine_typedohc = .;
129536    +      engine_typel = .;
MPRINT(EM_DIAGRAM):   engine_typel = .;
129537    +      engine_typeohc = .;
MPRINT(EM_DIAGRAM):   engine_typeohc = .;
129538    +      engine_typeohcf = .;
MPRINT(EM_DIAGRAM):   engine_typeohcf = .;
129539    +      engine_typeohcv = .;
MPRINT(EM_DIAGRAM):   engine_typeohcv = .;
129540    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
129541    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129542    +   end;
MPRINT(EM_DIAGRAM):   end;
129543    +end;
MPRINT(EM_DIAGRAM):   end;
129544    +
129545    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129546    +*** Checking missing input Interval
129547    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
129548    +
129549    +IF NMISS(
129550    +   LOG_REP_IMP_price ,
129551    +   LOG_REP_compression_ratio ,
129552    +   LOG_REP_engine_size ,
129553    +   REP_IMP_bore ,
129554    +   REP_IMP_stroke ,
129555    +   REP_city_mpg ,
129556    +   REP_curb_weight ,
129557    +   REP_height ,
129558    +   REP_highway_mpg ,
129559    +   REP_horsepower ,
129560    +   REP_length ,
129561    +   REP_peak_rpm ,
129562    +   REP_wheel_base ,
129563    +   REP_width   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( LOG_REP_IMP_price , LOG_REP_compression_ratio , 
LOG_REP_engine_size , REP_IMP_bore , REP_IMP_stroke , REP_city_mpg , REP_curb_weight , 
REP_height , REP_highway_mpg , REP_horsepower , REP_length , REP_peak_rpm , REP_wheel_base , 
REP_width ) THEN DO;
129564    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
129565    +
129566    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
129567    +END;
MPRINT(EM_DIAGRAM):   END;
129568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129569    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
129570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129571    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
129572    +   S_LOG_REP_IMP_price  =    -20.2356185469493 +     2.16855745948401 *
129573    +        LOG_REP_IMP_price ;
MPRINT(EM_DIAGRAM):   S_LOG_REP_IMP_price = -20.2356185469493 + 2.16855745948401 * 
LOG_REP_IMP_price ;
129574    +   S_LOG_REP_compression_ratio
129575    +          =    -8.72649819321039 +     3.65742873950677 *
129576    +        LOG_REP_compression_ratio ;
MPRINT(EM_DIAGRAM):   S_LOG_REP_compression_ratio = -8.72649819321039 + 3.65742873950677 * 
LOG_REP_compression_ratio ;
129577    +   S_LOG_REP_engine_size  =    -19.3053254119757 +     4.02929302984948 *
129578    +        LOG_REP_engine_size ;
MPRINT(EM_DIAGRAM):   S_LOG_REP_engine_size = -19.3053254119757 + 4.02929302984948 * 
LOG_REP_engine_size ;
129579    +   S_REP_IMP_bore  =    -13.3604302656684 +     4.04536293034574 *
129580    +        REP_IMP_bore ;
MPRINT(EM_DIAGRAM):   S_REP_IMP_bore = -13.3604302656684 + 4.04536293034574 * REP_IMP_bore ;
129581    +   S_REP_IMP_stroke  =    -11.3205669287077 +     3.47855217496738 *
129582    +        REP_IMP_stroke ;
MPRINT(EM_DIAGRAM):   S_REP_IMP_stroke = -11.3205669287077 + 3.47855217496738 * REP_IMP_stroke 
;
129583    +   S_REP_city_mpg  =    -4.23279255832632 +     0.16535248553422 *
129584    +        REP_city_mpg ;
MPRINT(EM_DIAGRAM):   S_REP_city_mpg = -4.23279255832632 + 0.16535248553422 * REP_city_mpg ;
129585    +   S_REP_curb_weight  =    -5.35597047742979 +     0.00212869810672 *
129586    +        REP_curb_weight ;
MPRINT(EM_DIAGRAM):   S_REP_curb_weight = -5.35597047742979 + 0.00212869810672 * 
REP_curb_weight ;
129587    +   S_REP_height  =    -21.8926608140893 +     0.40589318675657 * REP_height ;
MPRINT(EM_DIAGRAM):   S_REP_height = -21.8926608140893 + 0.40589318675657 * REP_height ;
129588    +   S_REP_highway_mpg  =    -4.99166764925563 +     0.16020006928199 *
129589    +        REP_highway_mpg ;
MPRINT(EM_DIAGRAM):   S_REP_highway_mpg = -4.99166764925563 + 0.16020006928199 * 
REP_highway_mpg ;
129590    +   S_REP_horsepower  =    -2.74643097264309 +     0.02734944206973 *
129591    +        REP_horsepower ;
MPRINT(EM_DIAGRAM):   S_REP_horsepower = -2.74643097264309 + 0.02734944206973 * REP_horsepower 
;
129592    +   S_REP_length  =    -15.2378498365576 +     0.08781104037663 * REP_length ;
MPRINT(EM_DIAGRAM):   S_REP_length = -15.2378498365576 + 0.08781104037663 * REP_length ;
129593    +   S_REP_peak_rpm  =    -10.6885709541859 +     0.00208333904184 *
129594    +        REP_peak_rpm ;
MPRINT(EM_DIAGRAM):   S_REP_peak_rpm = -10.6885709541859 + 0.00208333904184 * REP_peak_rpm ;
129595    +   S_REP_wheel_base  =    -17.8009087180129 +     0.18059887504832 *
129596    +        REP_wheel_base ;
MPRINT(EM_DIAGRAM):   S_REP_wheel_base = -17.8009087180129 + 0.18059887504832 * REP_wheel_base 
;
129597    +   S_REP_width  =    -35.9167499004784 +     0.54673628301566 * REP_width ;
MPRINT(EM_DIAGRAM):   S_REP_width = -35.9167499004784 + 0.54673628301566 * REP_width ;
129598    +END;
MPRINT(EM_DIAGRAM):   END;
129599    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
129600    +   IF MISSING( LOG_REP_IMP_price ) THEN S_LOG_REP_IMP_price  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( LOG_REP_IMP_price ) THEN S_LOG_REP_IMP_price = . ;
129601    +   ELSE S_LOG_REP_IMP_price  =    -20.2356185469493 +     2.16855745948401 *
129602    +        LOG_REP_IMP_price ;
MPRINT(EM_DIAGRAM):   ELSE S_LOG_REP_IMP_price = -20.2356185469493 + 2.16855745948401 * 
LOG_REP_IMP_price ;
129603    +   IF MISSING( LOG_REP_compression_ratio ) THEN S_LOG_REP_compression_ratio
129604    +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( LOG_REP_compression_ratio ) THEN S_LOG_REP_compression_ratio 
= . ;
129605    +   ELSE S_LOG_REP_compression_ratio
129606    +          =    -8.72649819321039 +     3.65742873950677 *
129607    +        LOG_REP_compression_ratio ;
MPRINT(EM_DIAGRAM):   ELSE S_LOG_REP_compression_ratio = -8.72649819321039 + 3.65742873950677 
* LOG_REP_compression_ratio ;
129608    +   IF MISSING( LOG_REP_engine_size ) THEN S_LOG_REP_engine_size  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( LOG_REP_engine_size ) THEN S_LOG_REP_engine_size = . ;
129609    +   ELSE S_LOG_REP_engine_size
129610    +          =    -19.3053254119757 +     4.02929302984948 * LOG_REP_engine_size
129611    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_LOG_REP_engine_size = -19.3053254119757 + 4.02929302984948 * 
LOG_REP_engine_size ;
129612    +   IF MISSING( REP_IMP_bore ) THEN S_REP_IMP_bore  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_IMP_bore ) THEN S_REP_IMP_bore = . ;
129613    +   ELSE S_REP_IMP_bore  =    -13.3604302656684 +     4.04536293034574 *
129614    +        REP_IMP_bore ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_IMP_bore = -13.3604302656684 + 4.04536293034574 * 
REP_IMP_bore ;
129615    +   IF MISSING( REP_IMP_stroke ) THEN S_REP_IMP_stroke  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_IMP_stroke ) THEN S_REP_IMP_stroke = . ;
129616    +   ELSE S_REP_IMP_stroke  =    -11.3205669287077 +     3.47855217496738 *
129617    +        REP_IMP_stroke ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_IMP_stroke = -11.3205669287077 + 3.47855217496738 * 
REP_IMP_stroke ;
129618    +   IF MISSING( REP_city_mpg ) THEN S_REP_city_mpg  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_city_mpg ) THEN S_REP_city_mpg = . ;
129619    +   ELSE S_REP_city_mpg  =    -4.23279255832632 +     0.16535248553422 *
129620    +        REP_city_mpg ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_city_mpg = -4.23279255832632 + 0.16535248553422 * 
REP_city_mpg ;
129621    +   IF MISSING( REP_curb_weight ) THEN S_REP_curb_weight  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_curb_weight ) THEN S_REP_curb_weight = . ;
129622    +   ELSE S_REP_curb_weight  =    -5.35597047742979 +     0.00212869810672 *
129623    +        REP_curb_weight ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_curb_weight = -5.35597047742979 + 0.00212869810672 * 
REP_curb_weight ;
129624    +   IF MISSING( REP_height ) THEN S_REP_height  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_height ) THEN S_REP_height = . ;
129625    +   ELSE S_REP_height  =    -21.8926608140893 +     0.40589318675657 *
129626    +        REP_height ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_height = -21.8926608140893 + 0.40589318675657 * REP_height ;
129627    +   IF MISSING( REP_highway_mpg ) THEN S_REP_highway_mpg  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_highway_mpg ) THEN S_REP_highway_mpg = . ;
129628    +   ELSE S_REP_highway_mpg  =    -4.99166764925563 +     0.16020006928199 *
129629    +        REP_highway_mpg ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_highway_mpg = -4.99166764925563 + 0.16020006928199 * 
REP_highway_mpg ;
129630    +   IF MISSING( REP_horsepower ) THEN S_REP_horsepower  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_horsepower ) THEN S_REP_horsepower = . ;
129631    +   ELSE S_REP_horsepower  =    -2.74643097264309 +     0.02734944206973 *
129632    +        REP_horsepower ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_horsepower = -2.74643097264309 + 0.02734944206973 * 
REP_horsepower ;
129633    +   IF MISSING( REP_length ) THEN S_REP_length  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_length ) THEN S_REP_length = . ;
129634    +   ELSE S_REP_length  =    -15.2378498365576 +     0.08781104037663 *
129635    +        REP_length ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_length = -15.2378498365576 + 0.08781104037663 * REP_length ;
129636    +   IF MISSING( REP_peak_rpm ) THEN S_REP_peak_rpm  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_peak_rpm ) THEN S_REP_peak_rpm = . ;
129637    +   ELSE S_REP_peak_rpm  =    -10.6885709541859 +     0.00208333904184 *
129638    +        REP_peak_rpm ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_peak_rpm = -10.6885709541859 + 0.00208333904184 * 
REP_peak_rpm ;
129639    +   IF MISSING( REP_wheel_base ) THEN S_REP_wheel_base  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_wheel_base ) THEN S_REP_wheel_base = . ;
129640    +   ELSE S_REP_wheel_base  =    -17.8009087180129 +     0.18059887504832 *
129641    +        REP_wheel_base ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_wheel_base = -17.8009087180129 + 0.18059887504832 * 
REP_wheel_base ;
129642    +   IF MISSING( REP_width ) THEN S_REP_width  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( REP_width ) THEN S_REP_width = . ;
129643    +   ELSE S_REP_width  =    -35.9167499004784 +     0.54673628301566 * REP_width
129644    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_REP_width = -35.9167499004784 + 0.54673628301566 * REP_width ;
129645    +END;
MPRINT(EM_DIAGRAM):   END;
129646    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129647    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
129648    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129649    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129650    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
129651    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129652    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129653    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
129654    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129655    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
129656    +   H11  =    -0.30239282542129 * S_LOG_REP_IMP_price
129657    +          +     0.07375266777945 * S_LOG_REP_compression_ratio
129658    +          +    -0.32314301225116 * S_LOG_REP_engine_size
129659    +          +    -0.05791191369564 * S_REP_IMP_bore  +    -0.31295728139086 *
129660    +        S_REP_IMP_stroke  +    -0.50271357032608 * S_REP_city_mpg
129661    +          +    -0.49945653510897 * S_REP_curb_weight
129662    +          +    -0.35982904642168 * S_REP_height  +     0.17605089142765 *
129663    +        S_REP_highway_mpg  +     0.28723977440497 * S_REP_horsepower
129664    +          +     0.00026487266845 * S_REP_length  +     0.02115131299283 *
129665    +        S_REP_peak_rpm  +    -0.71479623156263 * S_REP_wheel_base
129666    +          +     0.57582729455077 * S_REP_width ;
MPRINT(EM_DIAGRAM):   H11 = -0.30239282542129 * S_LOG_REP_IMP_price + 0.07375266777945 * 
S_LOG_REP_compression_ratio + -0.32314301225116 * S_LOG_REP_engine_size + -0.05791191369564 * 
S_REP_IMP_bore + -0.31295728139086 * S_REP_IMP_stroke + -0.50271357032608 * S_REP_city_mpg + 
-0.49945653510897 * S_REP_curb_weight + -0.35982904642168 * S_REP_height + 0.17605089142765 * 
S_REP_highway_mpg + 0.28723977440497 * S_REP_horsepower + 0.00026487266845 * S_REP_length + 
0.02115131299283 * S_REP_peak_rpm + -0.71479623156263 * S_REP_wheel_base + 0.57582729455077 * 
S_REP_width ;
129667    +   H12  =     0.06053587643791 * S_LOG_REP_IMP_price
129668    +          +      0.0008309684403 * S_LOG_REP_compression_ratio
129669    +          +     0.10954404329148 * S_LOG_REP_engine_size
129670    +          +    -0.15328263161893 * S_REP_IMP_bore  +      0.3532849519374 *
129671    +        S_REP_IMP_stroke  +    -0.15402746977116 * S_REP_city_mpg
129672    +          +     0.08110850880681 * S_REP_curb_weight
129673    +          +      0.1651911585853 * S_REP_height  +    -0.32984368998018 *
129674    +        S_REP_highway_mpg  +     0.18550754810975 * S_REP_horsepower
129675    +          +     0.41047827319029 * S_REP_length  +     0.63048066732644 *
129676    +        S_REP_peak_rpm  +    -0.29989205901953 * S_REP_wheel_base
129677    +          +     -0.1141373130746 * S_REP_width ;
MPRINT(EM_DIAGRAM):   H12 = 0.06053587643791 * S_LOG_REP_IMP_price + 0.0008309684403 * 
S_LOG_REP_compression_ratio + 0.10954404329148 * S_LOG_REP_engine_size + -0.15328263161893 * 
S_REP_IMP_bore + 0.3532849519374 * S_REP_IMP_stroke + -0.15402746977116 * S_REP_city_mpg + 
0.08110850880681 * S_REP_curb_weight + 0.1651911585853 * S_REP_height + -0.32984368998018 * 
S_REP_highway_mpg + 0.18550754810975 * S_REP_horsepower + 0.41047827319029 * S_REP_length + 
0.63048066732644 * S_REP_peak_rpm + -0.29989205901953 * S_REP_wheel_base + -0.1141373130746 * 
S_REP_width ;
129678    +   H13  =    -0.12651763973835 * S_LOG_REP_IMP_price
129679    +          +     0.02916610158425 * S_LOG_REP_compression_ratio
129680    +          +    -0.35464297055318 * S_LOG_REP_engine_size
129681    +          +    -0.46861794622827 * S_REP_IMP_bore  +    -0.02615304729098 *
129682    +        S_REP_IMP_stroke  +    -0.62348817252786 * S_REP_city_mpg
129683    +          +    -0.40578479144999 * S_REP_curb_weight
129684    +          +    -0.07842498208478 * S_REP_height  +     0.04009867443631 *
129685    +        S_REP_highway_mpg  +    -0.15410203402429 * S_REP_horsepower
129686    +          +     0.56826194006802 * S_REP_length  +    -0.18451746998248 *
129687    +        S_REP_peak_rpm  +    -0.85455873337219 * S_REP_wheel_base
129688    +          +     0.42143506757855 * S_REP_width ;
MPRINT(EM_DIAGRAM):   H13 = -0.12651763973835 * S_LOG_REP_IMP_price + 0.02916610158425 * 
S_LOG_REP_compression_ratio + -0.35464297055318 * S_LOG_REP_engine_size + -0.46861794622827 * 
S_REP_IMP_bore + -0.02615304729098 * S_REP_IMP_stroke + -0.62348817252786 * S_REP_city_mpg + 
-0.40578479144999 * S_REP_curb_weight + -0.07842498208478 * S_REP_height + 0.04009867443631 * 
S_REP_highway_mpg + -0.15410203402429 * S_REP_horsepower + 0.56826194006802 * S_REP_length + 
-0.18451746998248 * S_REP_peak_rpm + -0.85455873337219 * S_REP_wheel_base + 0.42143506757855 * 
S_REP_width ;
129689    +   H14  =    -0.14040869686762 * S_LOG_REP_IMP_price
129690    +          +     0.26990612353105 * S_LOG_REP_compression_ratio
129691    +          +     0.08219740713507 * S_LOG_REP_engine_size
129692    +          +    -0.28143237638041 * S_REP_IMP_bore  +     0.00240833621272 *
129693    +        S_REP_IMP_stroke  +     0.36691424782401 * S_REP_city_mpg
129694    +          +     0.05296966762507 * S_REP_curb_weight
129695    +          +    -0.25195594241151 * S_REP_height  +     -0.2869086713551 *
129696    +        S_REP_highway_mpg  +     0.10149659867121 * S_REP_horsepower
129697    +          +     -0.1051173203177 * S_REP_length  +     -0.3623925092356 *
129698    +        S_REP_peak_rpm  +      0.0608651450636 * S_REP_wheel_base
129699    +          +     0.01925376907658 * S_REP_width ;
MPRINT(EM_DIAGRAM):   H14 = -0.14040869686762 * S_LOG_REP_IMP_price + 0.26990612353105 * 
S_LOG_REP_compression_ratio + 0.08219740713507 * S_LOG_REP_engine_size + -0.28143237638041 * 
S_REP_IMP_bore + 0.00240833621272 * S_REP_IMP_stroke + 0.36691424782401 * S_REP_city_mpg + 
0.05296966762507 * S_REP_curb_weight + -0.25195594241151 * S_REP_height + -0.2869086713551 * 
S_REP_highway_mpg + 0.10149659867121 * S_REP_horsepower + -0.1051173203177 * S_REP_length + 
-0.3623925092356 * S_REP_peak_rpm + 0.0608651450636 * S_REP_wheel_base + 0.01925376907658 * 
S_REP_width ;
129700    +   H11  = H11  +    -0.14261512916098 * M_bore0  +    -0.15389501961531 *
129701    +        M_num_of_doors0  +     0.35584066469033 * M_price0
129702    +          +     0.27766950948074 * M_stroke0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14261512916098 * M_bore0 + -0.15389501961531 * 
M_num_of_doors0 + 0.35584066469033 * M_price0 + 0.27766950948074 * M_stroke0 ;
129703    +   H12  = H12  +    -0.05100694260106 * M_bore0  +     0.06706620637318 *
129704    +        M_num_of_doors0  +      0.3061805720719 * M_price0
129705    +          +     0.12447551805965 * M_stroke0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05100694260106 * M_bore0 + 0.06706620637318 * 
M_num_of_doors0 + 0.3061805720719 * M_price0 + 0.12447551805965 * M_stroke0 ;
129706    +   H13  = H13  +    -0.24380670225771 * M_bore0  +     0.00690440155477 *
129707    +        M_num_of_doors0  +     0.44779145359173 * M_price0
129708    +          +    -0.23546408240278 * M_stroke0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.24380670225771 * M_bore0 + 0.00690440155477 * 
M_num_of_doors0 + 0.44779145359173 * M_price0 + -0.23546408240278 * M_stroke0 ;
129709    +   H14  = H14  +     0.27468171274192 * M_bore0  +    -0.08256208447896 *
129710    +        M_num_of_doors0  +    -0.00282400944614 * M_price0
129711    +          +    -0.06998464230678 * M_stroke0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27468171274192 * M_bore0 + -0.08256208447896 * 
M_num_of_doors0 + -0.00282400944614 * M_price0 + -0.06998464230678 * M_stroke0 ;
129712    +   H11  = H11  +     1.04565178534847 * IMP_num_of_doors2
129713    +          +    -0.19697323559306 * REP_aspirationS  +     0.22441677117341 *
129714    +        REP_body_styleC  +    -0.02928079039896 * REP_body_styleH
129715    +          +    -0.32302273741455 * REP_body_styleS  +    -0.34785776016975 *
129716    +        REP_drive_wheels4  +     0.10897139165566 * REP_drive_wheelsF
129717    +          +    -0.04922700305318 * REP_engine_locationF
129718    +          +    -0.26217753108901 * REP_fuel_systemnon_spdi
129719    +          +    -0.09655321276347 * REP_fuel_typeD  +     0.23776476290772 *
129720    +        REP_num_of_cylinders__4  +     0.09807786136518 * engine_typedohc
129721    +          +    -0.13265317517425 * engine_typel  +    -0.20346070618898 *
129722    +        engine_typeohc  +    -0.38758952222173 * engine_typeohcf
129723    +          +    -0.02182861600599 * engine_typeohcv ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.04565178534847 * IMP_num_of_doors2 + -0.19697323559306 * 
REP_aspirationS + 0.22441677117341 * REP_body_styleC + -0.02928079039896 * REP_body_styleH + 
-0.32302273741455 * REP_body_styleS + -0.34785776016975 * REP_drive_wheels4 + 0.10897139165566 
* REP_drive_wheelsF + -0.04922700305318 * REP_engine_locationF + -0.26217753108901 * 
REP_fuel_systemnon_spdi + -0.09655321276347 * REP_fuel_typeD + 0.23776476290772 * 
REP_num_of_cylinders__4 + 0.09807786136518 * engine_typedohc + -0.13265317517425 * 
engine_typel + -0.20346070618898 * engine_typeohc + -0.38758952222173 * engine_typeohcf + 
-0.02182861600599 * engine_typeohcv ;
129724    +   H12  = H12  +     0.26990643452778 * IMP_num_of_doors2
129725    +          +       0.167681754676 * REP_aspirationS  +     0.12265207155474 *
129726    +        REP_body_styleC  +     0.01179187263391 * REP_body_styleH
129727    +          +    -0.19097006494623 * REP_body_styleS  +     0.02816873649616 *
129728    +        REP_drive_wheels4  +     0.00159784165226 * REP_drive_wheelsF
129729    +          +    -0.02772792707071 * REP_engine_locationF
129730    +          +     0.12038561732288 * REP_fuel_systemnon_spdi
129731    +          +    -0.14129190020361 * REP_fuel_typeD  +     0.19062991356263 *
129732    +        REP_num_of_cylinders__4  +     0.24458965384513 * engine_typedohc
129733    +          +     0.06535466491026 * engine_typel  +     0.03320508558174 *
129734    +        engine_typeohc  +    -0.18114960783147 * engine_typeohcf
129735    +          +    -0.07940214830665 * engine_typeohcv ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.26990643452778 * IMP_num_of_doors2 + 0.167681754676 * 
REP_aspirationS + 0.12265207155474 * REP_body_styleC + 0.01179187263391 * REP_body_styleH + 
-0.19097006494623 * REP_body_styleS + 0.02816873649616 * REP_drive_wheels4 + 0.00159784165226 
* REP_drive_wheelsF + -0.02772792707071 * REP_engine_locationF + 0.12038561732288 * 
REP_fuel_systemnon_spdi + -0.14129190020361 * REP_fuel_typeD + 0.19062991356263 * 
REP_num_of_cylinders__4 + 0.24458965384513 * engine_typedohc + 0.06535466491026 * engine_typel 
+ 0.03320508558174 * engine_typeohc + -0.18114960783147 * engine_typeohcf + -0.07940214830665 
* engine_typeohcv ;
129736    +   H13  = H13  +     1.05539312393709 * IMP_num_of_doors2
129737    +          +     0.12429838443133 * REP_aspirationS  +     0.40169612542437 *
129738    +        REP_body_styleC  +    -0.09868938303023 * REP_body_styleH
129739    +          +      0.2376441839816 * REP_body_styleS  +     0.13697634714208 *
129740    +        REP_drive_wheels4  +     0.10951824489242 * REP_drive_wheelsF
129741    +          +    -0.39061918168859 * REP_engine_locationF
129742    +          +    -0.35137171605866 * REP_fuel_systemnon_spdi
129743    +          +    -0.02185171430754 * REP_fuel_typeD  +    -0.09138285511683 *
129744    +        REP_num_of_cylinders__4  +     0.03269731016982 * engine_typedohc
129745    +          +     0.05515310047148 * engine_typel  +     0.73759347527352 *
129746    +        engine_typeohc  +    -0.25108559978843 * engine_typeohcf
129747    +          +    -0.04350517211887 * engine_typeohcv ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.05539312393709 * IMP_num_of_doors2 + 0.12429838443133 * 
REP_aspirationS + 0.40169612542437 * REP_body_styleC + -0.09868938303023 * REP_body_styleH + 
0.2376441839816 * REP_body_styleS + 0.13697634714208 * REP_drive_wheels4 + 0.10951824489242 * 
REP_drive_wheelsF + -0.39061918168859 * REP_engine_locationF + -0.35137171605866 * 
REP_fuel_systemnon_spdi + -0.02185171430754 * REP_fuel_typeD + -0.09138285511683 * 
REP_num_of_cylinders__4 + 0.03269731016982 * engine_typedohc + 0.05515310047148 * engine_typel 
+ 0.73759347527352 * engine_typeohc + -0.25108559978843 * engine_typeohcf + -0.04350517211887 
* engine_typeohcv ;
129748    +   H14  = H14  +    -0.02666661002825 * IMP_num_of_doors2
129749    +          +     0.23388455289343 * REP_aspirationS  +     0.14743723464082 *
129750    +        REP_body_styleC  +      0.0123336113796 * REP_body_styleH
129751    +          +     0.09096512684108 * REP_body_styleS  +     0.10317954156915 *
129752    +        REP_drive_wheels4  +    -0.02461397967256 * REP_drive_wheelsF
129753    +          +     0.23880808113951 * REP_engine_locationF
129754    +          +     0.07730157092911 * REP_fuel_systemnon_spdi
129755    +          +    -0.18576165929056 * REP_fuel_typeD  +    -0.07768584919964 *
129756    +        REP_num_of_cylinders__4  +    -0.12278489872095 * engine_typedohc
129757    +          +    -0.11219020348018 * engine_typel  +    -0.25056732048025 *
129758    +        engine_typeohc  +     0.04020447734225 * engine_typeohcf
129759    +          +    -0.01124754988024 * engine_typeohcv ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.02666661002825 * IMP_num_of_doors2 + 0.23388455289343 * 
REP_aspirationS + 0.14743723464082 * REP_body_styleC + 0.0123336113796 * REP_body_styleH + 
0.09096512684108 * REP_body_styleS + 0.10317954156915 * REP_drive_wheels4 + -0.02461397967256 
* REP_drive_wheelsF + 0.23880808113951 * REP_engine_locationF + 0.07730157092911 * 
REP_fuel_systemnon_spdi + -0.18576165929056 * REP_fuel_typeD + -0.07768584919964 * 
REP_num_of_cylinders__4 + -0.12278489872095 * engine_typedohc + -0.11219020348018 * 
engine_typel + -0.25056732048025 * engine_typeohc + 0.04020447734225 * engine_typeohcf + 
-0.01124754988024 * engine_typeohcv ;
129760    +   H11  =     0.16799741694776 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.16799741694776 + H11 ;
129761    +   H12  =     0.36085487833004 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36085487833004 + H12 ;
129762    +   H13  =     0.92763058157618 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.92763058157618 + H13 ;
129763    +   H14  =     1.24301062195055 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.24301062195055 + H14 ;
129764    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
129765    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
129766    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
129767    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
129768    +END;
MPRINT(EM_DIAGRAM):   END;
129769    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
129770    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
129771    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
129772    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
129773    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
129774    +END;
MPRINT(EM_DIAGRAM):   END;
129775    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129776    +*** Writing the Node Risk ;
MPRINT(EM_DIAGRAM):   *** Writing the Node Risk ;
129777    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129778    +
129779    +*** Generate dummy variables for Risk ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Risk ;
129780    +drop Risk1 Risk0 ;
MPRINT(EM_DIAGRAM):   drop Risk1 Risk0 ;
129781    +label F_Risk = 'From: Risk' ;
MPRINT(EM_DIAGRAM):   label F_Risk = 'From: Risk' ;
129782    +length F_Risk $ 12;
MPRINT(EM_DIAGRAM):   length F_Risk $ 12;
129783    +F_Risk = put( Risk , BEST12. );
MPRINT(EM_DIAGRAM):   F_Risk = put( Risk , BEST12. );
129784    +%DMNORMIP( F_Risk )
MPRINT(DMNORMIP):   call dmnorm(F_Risk,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
129785    +if missing( Risk ) then do;
MPRINT(EM_DIAGRAM):   if missing( Risk ) then do;
129786    +   Risk1 = .;
MPRINT(EM_DIAGRAM):   Risk1 = .;
129787    +   Risk0 = .;
MPRINT(EM_DIAGRAM):   Risk0 = .;
129788    +end;
MPRINT(EM_DIAGRAM):   end;
129789    +else do;
MPRINT(EM_DIAGRAM):   else do;
129790    +   if F_Risk = '1'  then do;
MPRINT(EM_DIAGRAM):   if F_Risk = '1' then do;
129791    +      Risk1 = 1;
MPRINT(EM_DIAGRAM):   Risk1 = 1;
129792    +      Risk0 = 0;
MPRINT(EM_DIAGRAM):   Risk0 = 0;
129793    +   end;
MPRINT(EM_DIAGRAM):   end;
129794    +   else if F_Risk = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_Risk = '0' then do;
129795    +      Risk1 = 0;
MPRINT(EM_DIAGRAM):   Risk1 = 0;
129796    +      Risk0 = 1;
MPRINT(EM_DIAGRAM):   Risk0 = 1;
129797    +   end;
MPRINT(EM_DIAGRAM):   end;
129798    +   else do;
MPRINT(EM_DIAGRAM):   else do;
129799    +      Risk1 = .;
MPRINT(EM_DIAGRAM):   Risk1 = .;
129800    +      Risk0 = .;
MPRINT(EM_DIAGRAM):   Risk0 = .;
129801    +   end;
MPRINT(EM_DIAGRAM):   end;
129802    +end;
MPRINT(EM_DIAGRAM):   end;
129803    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
129804    +   P_Risk1  =     2.33058130691871 * H11  +      0.6315559780393 * H12
129805    +          +     2.68752606098709 * H13  +     -0.1774721562472 * H14 ;
MPRINT(EM_DIAGRAM):   P_Risk1 = 2.33058130691871 * H11 + 0.6315559780393 * H12 + 
2.68752606098709 * H13 + -0.1774721562472 * H14 ;
129806    +   P_Risk1  =    -0.37783197107417 + P_Risk1 ;
MPRINT(EM_DIAGRAM):   P_Risk1 = -0.37783197107417 + P_Risk1 ;
129807    +   P_Risk0  = 0;
MPRINT(EM_DIAGRAM):   P_Risk0 = 0;
129808    +   _MAX_ = MAX (P_Risk1 , P_Risk0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_Risk1 , P_Risk0 );
129809    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
129810    +   P_Risk1  = EXP(P_Risk1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Risk1 = EXP(P_Risk1 - _MAX_);
129811    +   _SUM_ = _SUM_ + P_Risk1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Risk1 ;
129812    +   P_Risk0  = EXP(P_Risk0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Risk0 = EXP(P_Risk0 - _MAX_);
129813    +   _SUM_ = _SUM_ + P_Risk0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Risk0 ;
129814    +   P_Risk1  = P_Risk1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Risk1 = P_Risk1 / _SUM_;
129815    +   P_Risk0  = P_Risk0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Risk0 = P_Risk0 / _SUM_;
129816    +END;
MPRINT(EM_DIAGRAM):   END;
129817    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
129818    +   P_Risk1  = .;
MPRINT(EM_DIAGRAM):   P_Risk1 = .;
129819    +   P_Risk0  = .;
MPRINT(EM_DIAGRAM):   P_Risk0 = .;
129820    +END;
MPRINT(EM_DIAGRAM):   END;
129821    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
129822    +   P_Risk1  =                 0.54;
MPRINT(EM_DIAGRAM):   P_Risk1 = 0.54;
129823    +   P_Risk0  =                 0.46;
MPRINT(EM_DIAGRAM):   P_Risk0 = 0.46;
129824    +END;
MPRINT(EM_DIAGRAM):   END;
129825    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
129826    +*** Writing the Residuals  of the Node Risk ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node Risk ;
129827    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
129828    +IF MISSING( Risk1 ) THEN R_Risk1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Risk1 ) THEN R_Risk1 = . ;
129829    +ELSE R_Risk1  = Risk1  - P_Risk1 ;
MPRINT(EM_DIAGRAM):   ELSE R_Risk1 = Risk1 - P_Risk1 ;
129830    +IF MISSING( Risk0 ) THEN R_Risk0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Risk0 ) THEN R_Risk0 = . ;
129831    +ELSE R_Risk0  = Risk0  - P_Risk0 ;
MPRINT(EM_DIAGRAM):   ELSE R_Risk0 = Risk0 - P_Risk0 ;
129832    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129833    +*** Writing the I_Risk  AND U_Risk ;
MPRINT(EM_DIAGRAM):   *** Writing the I_Risk AND U_Risk ;
129834    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
129835    +_MAXP_ = P_Risk1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Risk1 ;
129836    +I_Risk  = "1           " ;
MPRINT(EM_DIAGRAM):   I_Risk = "1           " ;
129837    +U_Risk  =                    1;
MPRINT(EM_DIAGRAM):   U_Risk = 1;
129838    +IF( _MAXP_ LT P_Risk0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_Risk0 ) THEN DO;
129839    +   _MAXP_ = P_Risk0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Risk0 ;
129840    +   I_Risk  = "0           " ;
MPRINT(EM_DIAGRAM):   I_Risk = "0           " ;
129841    +   U_Risk  =                    0;
MPRINT(EM_DIAGRAM):   U_Risk = 0;
129842    +END;
MPRINT(EM_DIAGRAM):   END;
129843    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
129844    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
129845    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
129846    +drop
129847    +H11
129848    +H12
129849    +H13
129850    +H14
129851    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
129852    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
129853     run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL4_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REPL2_VALIDATE.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.24 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
129854     quit;
129855     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
129856     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
129857     * Neural4: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural4: Computing metadata for TRAIN data;
129858     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "H:\746\Decision Tree 
test\Workspaces\EMWS1\Neural4\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural4_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural4_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural4_TRAIN out=WORK.M15JAT62 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M15JAT62;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M15JAT62(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M15JAT62;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M15JAT62;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1GIGLE8 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1GIGLE8;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1GIGLE8;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M01DXNPZ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1GIGLE8;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1GIGLE8;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1GIGLE8;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1GIGLE8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1GIGLE8;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Repl2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Repl2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural4";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_RISK1") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("R_RISK1") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("P_RISK0") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("R_RISK0") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("F_RISK") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("I_RISK") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("U_RISK") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("RISK") model = "Neural4";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
130197     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
130198     set EMWS1.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMINFO;
130199     where DATA='Neural4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
130200     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL4_EMINFO.
      WHERE (DATA='Neural4') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

130201     data EMWS1.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural4_EMINFO;
130202     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
130203     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
130204     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
130208     run;
130209     data EMWS1.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural4_EMINFO;
130210     set EMWS1.Neural4_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMINFO WORK.MODELTEMP_INFO;
130211     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL4_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
      

130212     proc sort data = EMWS1.Neural4_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural4_EMINFO NOTHREADS;
130213     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
130214     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL4_EMINFO.
NOTE: The data set EMWS1.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.40 seconds
      cpu time            0.01 seconds
      

130215     proc sort data = EMWS1.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
130216     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
130217     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

130218     proc sort data = EMWS1.Neural4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Neural4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
130219     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
130220     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.NEURAL4_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

130221     data EMWS1.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural4_EMINFO;
130222     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
130223     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
130224     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.NEURAL4_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      

130225     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
130226     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
130227     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
130228     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS1.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      
NOTE: View EMWS1.NEURAL4_VALIDATE.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
