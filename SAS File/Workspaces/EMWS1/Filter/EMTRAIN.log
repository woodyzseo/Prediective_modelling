MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 05, 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:09:03 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                April 05, 2021
Time:                13:09:03 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O09_XYTV "H:\746\Decision Tree test\Workspaces\EMWS1\Filter\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O09_XYTV new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "H:\746\Decision Tree test\Workspaces\EMWS1\Filter\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 05, 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:09:03 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                301152869";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70104631";
MPRINT(EM_DIAGRAM):   put "Platform:            W32_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M2P072314";
MPRINT(EM_DIAGRAM):   put "EM Version:          13.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "H:\746\Decision Tree test\Workspaces\EMWS1\Filter\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "H:\746\Decision Tree test\Workspaces\EMWS1\Filter\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "H:\746\Decision Tree test\Workspaces\EMWS1\Filter\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "H:\746\Decision Tree test\Workspaces\EMWS1\Filter\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 05, 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:09:03 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                301152869";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "H:\746\Decision Tree test\Workspaces\EMWS1\Filter\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "H:\746\Decision Tree test\Workspaces\EMWS1\Filter\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "H:\746\Decision Tree test\Workspaces\EMWS1\Filter\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'H:\746\Decision Tree test\Workspaces\EMWS1\Filter\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
21195      proc freq data=EMWS1.Filter_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Filter_VariableSet noprint;
21196      table ROLE*LEVEL/out=WORK.FilterMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.FilterMETA;
21197      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS1.FILTER_VARIABLESET.
NOTE: The data set WORK.FILTERMETA has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

21198      proc print data=WORK.FilterMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.FilterMETA label noobs;
21199      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
21200      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
21201      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
21202      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
21203      run;

NOTE: There were 5 observations read from the data set WORK.FILTERMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21204      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M2ZW46TL;
MPRINT(EM_DIAGRAM):   set WORK.M2ZW46TL;
MPRINT(EM_DIAGRAM):   if CALCMETHOD eq 'DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then CALCMETHOD='MANUAL';
MPRINT(EM_DIAGRAM):   else CALCMETHOD='MINPCT';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if KEEPMISSING eq 'D' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if CALCMETHOD='NONE' and KEEPMISSING='Y' then delete;
MPRINT(EM_DIAGRAM):   run;
21227      filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
21228      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_CLASSDIST.SOURCE.
21229     +%macro class_profile(DATA=, OUTPUT=_CLASS, VARS=, METADATA=, WHERE=, STAT=_STAT, FREQ=);
21230     +   %if %INDEX(&EM_DEBUG, LOG SOURCE) %then %do;
21231     +       %put *** Statistics for Class variables ***;
21232     +       %put >>> DATA= &data  OUTPUT= &output;
21233     +       %put >>> VAR= &vars;
21234     +       %put >>> WHERE=  &where;
21235     +       %put >>> FREQ=  &freq;
21236     +   %end;
21237     +
21238     +      /* Process metadata data set */
21239     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
21240     +   %if %sysfunc(exist(&metadata))>0 and ("&metadata" ne "") %then %do;
21241     +       %let FREQ=;
21242     +       %let _nobs=0;
21243     +       data _null;
21244     +          set &metadata(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
21245     +          if eof then call symput('_nobs', put(_N_, best.));
21246     +       run;
21247     +       %if "&_nobs" ne "0" %then %do;
21248     +           data _null_;
21249     +              file _mac;
21250     +              length _VARS $80; retain _vars;
21251     +              if _n_ =1 then put '%macro _vars;';
21252     +              set &metadata end=eof;
21253     +              where LEVEL ne 'INTERVAL' or ROLE='FREQ';
21254     +              if ROLE='FREQ' then call symput('FREQ', NAME);
21255     +              else do;
21256     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
21257     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
21258     +                 else do;
21259     +                    put _Vars;
21260     +                    _vars = strip(NAME);
21261     +                 end;
21262     +              end;
21263     +              if eof then do;
21264     +                 put _Vars;
21265     +                 put '%mend _vars;';
21266     +              end;
21267     +           run;
21268     +       %end;
21269     +       %else %do;
21270     +           data _null_;
21271     +              file _mac;
21272     +              put '%macro _vars;';
21273     +              put '%mend _vars;';
21274     +           run;
21275     +       %end;
21276     +   %end;
21277     +   %else %do;
21278     +       data _null_;
21279     +          file _mac;
21280     +          put '%macro _vars;';
21281     +          put '%mend _vars;';
21282     +       run;
21283     +   %end;
21284     +   %inc _mac;
21285     +   filename _mac;
21286     +
21287     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
21288     +
21289     +   /* Check if FREQ variable is in the data set */
21290     +   %if &freq ne %then %do;
21291     +       data _null_;
21292     +          dsid = open("&data");
21293     +          if dsid>0 then do;
21294     +               if varnum(dsid, "&FREQ")<1 then
21295     +                  call symput('FREQ', '');
21296     +               dsid = close(dsid);
21297     +          end;
21298     +       run;
21299     +   %end;
21300     +
21301     +   proc dmdb data=&DATA  nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
21302     +      class %_Vars &vars;
21303     +      %if &FREQ ne %then %do;
21304     +          freq &FREQ;
21305     +      %end;
21306     +      %if %bquote(&WHERE) ne %then %do;
21307     +            where &WHERE;
21308     +      %end;
21309     +   run;
21310     +   proc sort data=_tempclass;
21311     +      by VARIABLE;
21312     +   run;
21313     +   data &output;
21314     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
21315     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
21316     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
21317     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
21318     +      set _tempclass;
21319     +      format COUNT;
21320     +      keep VARIABLE COUNT PERCENT VALUE;
21321     +   run;
21322     +   proc means data=&output noprint;
21323     +      class VARIABLE;
21324     +      var COUNT;
21325     +      output out=&STAT N=NUMCAT;
21326     +   run;
21327     +   data &STAT;
21328     +      set &STAT;
21329     +      where _TYPE_=1;
21330     +      KEEP VARIABLE NUMCAT;
21331     +      label NUMCAT   = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
21332     +      format NUMCAT 8.;
21333     +   run;
21334     +   proc datasets lib=work nolist;
21335     +      delete _tempclass;
21336     +   run;
21337     +   quit;
21338     +
21339     +   %doend:
21340     +%mend class_profile;
21341     +
NOTE: %INCLUDE (level 1) ending.
21342      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
21343      data work.tempSummaryClass;
MPRINT(EM_DIAGRAM):   data work.tempSummaryClass;
21344      set EMWS1.Filter_CLASSDIST(drop=Count Percent);
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_CLASSDIST(drop=Count Percent);
21345      where Filter='Y';
MPRINT(EM_DIAGRAM):   where Filter='Y';
21346      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.FILTER_CLASSDIST.
      WHERE Filter='Y';
NOTE: The data set WORK.TEMPSUMMARYCLASS has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

21347      proc sort data=work.tempSummaryClass;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempSummaryClass;
21348      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
21349      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK.TEMPSUMMARYCLASS has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21350      %class_profile(DATA=EMWS1.FIMPORT_train, OUTPUT=EMWS1.Filter_CLASSDIST, METADATA=EMWS1.Filter_VariableSet, STAT=_STAT);
MPRINT(EM_DIAGRAM):   
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null;
MPRINT(CLASS_PROFILE):   set EMWS1.Filter_VariableSet(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(CLASS_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 12 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 12 observations and 34 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   length _VARS $80;
MPRINT(CLASS_PROFILE):   retain _vars;
MPRINT(CLASS_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(CLASS_PROFILE):   set EMWS1.Filter_VariableSet end=eof;
MPRINT(CLASS_PROFILE):   where LEVEL ne 'INTERVAL' or ROLE='FREQ';
MPRINT(CLASS_PROFILE):   if ROLE='FREQ' then call symput('FREQ', NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   _vars = strip(NAME);
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   if eof then do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Mon,  5 Apr, 2021 01:09:04 PM,
      Last Modified=Mon,  5 Apr, 2021 01:09:04 PM,
      Filename=C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\macros.sas7bcat,
      Release Created=9.0401M2,Host Created=W32_8PRO

NOTE: 4 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 79.
NOTE: There were 12 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
21351     +%macro _vars;
21352     +Risk aspiration body_style drive_wheels engine_location engine_type fuel_system
21353     +fuel_type make num_of_cylinders num_of_doors symboling
21354     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=EMWS1.FIMPORT_train nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(_VARS):   Risk aspiration body_style drive_wheels engine_location engine_type fuel_system fuel_type make num_of_cylinders num_of_doors symboling
MPRINT(CLASS_PROFILE):   ;
MPRINT(CLASS_PROFILE):   run;

NOTE: Records processed = 205   Memory used = 511K.
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: There were 205 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: There were 205 observations read from the data set EMWS1.FIMPORT_TRAIN.
NOTE: The data set WORK._TEMPCLASS has 69 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 69 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 69 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data EMWS1.Filter_CLASSDIST;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 69 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 69 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=EMWS1.Filter_CLASSDIST noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 69 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: The data set WORK._STAT has 13 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 12 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 12 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

21355      data EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASSDIST;
21356      set EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_CLASSDIST;
21357      length Filter $1;
MPRINT(EM_DIAGRAM):   length Filter $1;
21358      retain Filter 'N';
MPRINT(EM_DIAGRAM):   retain Filter 'N';
21359      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 69 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 69 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
      

21360      proc sort data=EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_CLASSDIST;
21361      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
21362      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 69 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 69 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.07 seconds
      cpu time            0.00 seconds
      

21363      data EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASSDIST;
21364      merge EMWS1.Filter_CLASSDIST(in=_a) work.tempSummaryClass(in=_b);
MPRINT(EM_DIAGRAM):   merge EMWS1.Filter_CLASSDIST(in=_a) work.tempSummaryClass(in=_b);
21365      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
21366      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
21367      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 69 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: There were 0 observations read from the data set WORK.TEMPSUMMARYCLASS.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 69 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.00 seconds
      

21368      data EMWS1.Filter_CLASSFILTER / view=EMWS1.Filter_CLASSFILTER;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASSFILTER / view=EMWS1.Filter_CLASSFILTER;
21369      set EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_CLASSDIST;
21370      where Filter eq 'Y';
MPRINT(EM_DIAGRAM):   where Filter eq 'Y';
21371      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS1.FILTER_CLASSFILTER.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      

21372      %let EM_CODEBAR = *------------------------------------------------------------*;
21373      filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
21374      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_VARDIST.SOURCE.
21375     +%macro var_profile(DATA=, OUTPUT=_INTERVAL, VARS=, METADATA=, COMPUTESTAT=Y, STAT=_STAT, PCTLSTAT=_PCTLSTAT, FREQ=,
21376     +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
21377     +   %let _em_nodeid = EM;
21378     +   %if %symexist(EM_NODEID) %then %do;
21379     +       %let _em_nodeid = &em_nodeid;
21380     +   %end;
21381     +
21382     +   %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingsummarystats_note, NOQUOTE, &_em_nodeid));
21383     +   %put &EM_CODEBAR;
21384     +   %put * &msgString;
21385     +   %put &EM_CODEBAR;
21386     +
21387     +   /* Process metadata data set */
21388     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
21389     +   %if %sysfunc(exist(&metadata))>0 and (&metadata ne ) %then %do;
21390     +       %let FREQ=;
21391     +       %let _nobs=0;
21392     +       data _null;
21393     +          set &metadata(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
21394     +          if eof then call symput('_nobs', put(_N_, best.));
21395     +       run;
21396     +       %if "&_nobs" ne "0" %then %do;
21397     +           data _null_;
21398     +              file _mac;
21399     +              length _VARS $80; retain _vars;
21400     +              if _n_ =1 then put '%macro _vars;';
21401     +              set &metadata end=eof;
21402     +              where LEVEL = 'INTERVAL' or ROLE='FREQ';
21403     +              if ROLE='FREQ' then call symput('FREQ', trim(NAME));
21404     +              else do;
21405     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
21406     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
21407     +                 else do;
21408     +                    put _Vars;
21409     +                    _vars = strip(NAME);
21410     +                 end;
21411     +              end;
21412     +
21413     +              if eof then do;
21414     +                 put _Vars;
21415     +                 put '%mend _vars;';
21416     +              end;
21417     +           run;
21418     +       %end;
21419     +       %else %do;
21420     +           data _null_;
21421     +              file _mac;
21422     +              put '%macro _vars;';
21423     +              put '%mend _vars;';
21424     +           run;
21425     +       %end;
21426     +   %end;
21427     +   %else %do;
21428     +       data _null_;
21429     +          file _mac;
21430     +          put '%macro _vars;';
21431     +          put '%mend _vars;';
21432     +       run;
21433     +   %end;
21434     +   %inc _mac;
21435     +   filename _mac;
21436     +
21437     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
21438     +
21439     +   /* Check if FREQ variable is in the data set */
21440     +   %if &freq ne %then %do;
21441     +       data _null_;
21442     +          dsid = open("&data");
21443     +          if dsid>0 then do;
21444     +               if varnum(dsid, "&FREQ")<1 then
21445     +                  call symput('FREQ', '');
21446     +               dsid = close(dsid);
21447     +          end;
21448     +       run;
21449     +   %end;
21450     +
21451     +   %if &bindata eq %then %do;
21452     +       %let bindata = _BOUNDS;
21453     +       proc datasets lib=work nolist mt=(DATA VIEW);
21454     +          delete _BOUNDS;
21455     +       run;
21456     +   %end;
21457     +
21458     +   %global _EM_VARDISTOBS_MAX;
21459     +   %let _EM_VARDISTOBS_MAX = 1000000;
21460     +
21461     +   %if %symexist(EM_VARDISTOBS_MAX) %then %do;
21462     +       %let _EM_VARDISTOBS_MAX= %eval(&EM_VARDISTOBS_MAX);
21463     +   %end;
21464     +
21465     +   %if &computeStat = Y %then %do;
21466     +       proc dmdb data=&DATA(obs=&_EM_VARDISTOBS_MAX) varout=&STAT(rename=(NAME=VARIABLE));
21467     +          var %_Vars &vars;
21468     +          %if &FREQ ne %then %do;
21469     +              freq &FREQ;
21470     +          %end;
21471     +       run;
21472     +       proc sort data=&stat;
21473     +          by VARIABLE;
21474     +       run;
21475     +
21476     +       %if ^%sysfunc(indexc(&STAT, .)) %then %do;
21477     +           %let _library = WORK;
21478     +           %let _member  = &STAT;
21479     +      %end;
21480     +      %else %do;
21481     +          %let _library = %scan(&STAT, 1, .);
21482     +          %let _member  = %scan(&STAT, 2, .);
21483     +      %end;
21484     +
21485     +      proc datasets library=&_library nolist;
21486     +         modify &_member;
21487     +         label NMISS    = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
21488     +         label MIN      = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
21489     +         label MAX      = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
21490     +         label MEAN     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
21491     +         label STD      = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
21492     +         label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
21493     +         label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
21494     +      run;
21495     +      quit;
21496     +   %end;
21497     +
21498     +   %if &BIN ne N %then %do;
21499     +       %if %sysfunc(exist(&bindata))<1 %then %do;
21500     +           %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingmidpoints_note, NOQUOTE, &_em_nodeid));
21501     +           %put &EM_CODEBAR;
21502     +           %put * &msgString;
21503     +           %put &EM_CODEBAR;
21504     +           filename fref catalog 'work.em.profileformat.source';
21505     +
21506     +            %let _maxlevel = %eval(&numbars + 1);
21507     +            proc dmdb data=&data(obs=&_EM_VARDISTOBS_MAX) classout=_CLASSOUT maxlevel=&_maxlevel;
21508     +               class %_vars &vars;
21509     +            run;
21510     +            proc freq data=_CLASSOUT ORDER=DATA noprint;
21511     +               table NAME / OUT = _COUNT(where=(COUNT<&_maxlevel));
21512     +            run;
21513     +           proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
21514     +              by NAME;
21515     +           run;
21516     +           proc sort data=_CLASSOUT;
21517     +              by NAME;
21518     +          run;
21519     +          proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
21520     +             var NRAW;
21521     +             by NAME;
21522     +          run;
21523     +          proc delete data=WORK._CLASSOUT;
21524     +          run;
21525     +          data _null_;
21526     +             dsid = open('_DISCRETEMID');
21527     +             if dsid then do;
21528     +                call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
21529     +                dsid = close(dsid);
21530     +             end;
21531     +          run;
21532     +          data _DISCRETEMID;
21533     +             merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
21534     +             keep VARIABLE _MIDPOINT1--_MIDPOINT&numclassbars _NUMCLASSBINS_;
21535     +             by VARIABLE;
21536     +             if _b then output;
21537     +          run;
21538     +
21539     +          data _EMVARDIST / view=_EMVARDIST;
21540     +             set &DATA(keep=%_VARS &vars &FREQ  obs=&_EM_VARDISTOBS_MAX);
21541     +          run;
21542     +          proc stdize data=_EMVARDIST outstat=&pctlstat  out=_null_ pctlpts=(0 5 25 50 75 95 100);
21543     +             var %_vars &vars;
21544     +             %if &FREQ ne %then %do;
21545     +                 freq &FREQ / notrunc;
21546     +             %end;
21547     +          run;
21548     +          proc datasets lib=WORK NOLIST;
21549     +             delete _EMVARDIST / mt=view;
21550     +          run;
21551     +          quit;
21552     +          %if %upcase(&minmax) = Y %then %do;
21553     +              proc transpose data=&pctlstat out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
21554     +                 where  _type_ in('P0', 'P100');
21555     +              run;
21556     +              data _MINMAXDATA(keep=Variable Value Pos);
21557     +                 set _MINMAXDATA;
21558     +                 label VARIABLE  = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
21559     +                 Value = min; Pos=1; output;
21560     +                 Value = max; Pos=3; output;
21561     +              run;
21562     +          %end;
21563     +          proc transpose data=&pctlstat out=&bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5
21564     +                                                             COL3=P95 COL4=MAX));
21565     +             where  _type_ in('P0', 'P5', 'P95', 'P100');
21566     +          run;
21567     +          proc sort data=&bindata;
21568     +             by VARIABLE;
21569     +          run;
21570     +
21571     +          %let new_numbars=%eval(&NUMBARS+12);
21572     +          data &bindata;
21573     +             set &bindata;
21574     +             length Format $12;
21575     +             array _midpoint{&new_NUMBARS};
21576     +             array _bounds{&new_NUMBARS};
21577     +             if (max - min)>1e-10 then do;
21578     +                step = abs(P95-P5)/&NUMBARS;
21579     +                lstep = abs(p5- min)/5;
21580     +                ustep = abs(max-p95)/5;
21581     +                /* No outlying values */;
21582     +                if lstep<=step and ustep<=step then do;
21583     +                   step = abs(MIN-MAX)/&NUMBARS;
21584     +                   START=MIN;
21585     +                   do i=1 to &numbars;
21586     +                      _bounds(i)   = MIN + i*step;      if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
21587     +                      _midpoint(i) = MIN+ (i-0.5)*step; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
21588     +                   end;
21589     +                   %let new_numbars = &numbars;
21590     +                end;
21591     +                else do;
21592     +                   if lstep<=step then do;
21593     +                      step = abs(MIN-P95)/&NUMBARS;
21594     +                      /* Start Histogram at MIN value */
21595     +                      do i=1 to &NUMBARS;
21596     +                         _bounds(i)   = MIN + i*step;       if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
21597     +                         _midpoint(i) = MIN+ (i-0.5)*step;  if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
21598     +                      end;
21599     +                      /* Make BINS with upper outliers width */
21600     +                      do i=1 to 5;
21601     +                         numbars = &numbars + i;
21602     +                         _bounds(numbars)   = P95 + i*ustep;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21603     +                         _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21604     +                      end;
21605     +                       %let new_numbars = %eval(&numbars+5);
21606     +                   end;
21607     +                   else do;
21608     +                      /* Make BINS with lower outliers width */
21609     +                      do i=1 to 5;
21610     +                         _bounds(i)   = P5 - (5-i)*lstep; if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
21611     +                         _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
21612     +                      end;
21613     +                      if ustep<= step then do;
21614     +                         step = abs(P5-MAX)/&NUMBARS;
21615     +                         /* End Histogram at MAX value */
21616     +                         do i=1 to &NUMBARS;
21617     +                            numbars = i+5;
21618     +                            _bounds(numbars)   = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21619     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
21620     +                         end;
21621     +                          %let new_numbars = %eval(&numbars+5);
21622     +                      end;
21623     +                      else do;
21624     +                         do i=1 to &NUMBARS;
21625     +                            numbars = i+5;
21626     +                            _bounds(numbars)  = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21627     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
21628     +                         end;
21629     +                         /* Make BINS with upper outliers width */
21630     +                         do i=1 to 5;
21631     +                            numbars = &numbars+5+i;
21632     +                            _bounds(numbars)   = P95 + i*ustep; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21633     +                            _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
21634     +                         end;
21635     +                         %let new_numbars = %eval(&numbars+10);
21636     +                      end;
21637     +                   end;
21638     +                end;
21639     +             end;
21640     +             else do;
21641     +                _bounds(1)   = MIN;
21642     +                _midpoint(1) = MIN;
21643     +             end;
21644     +             Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
21645     +          run;
21646     +          %if %sysfunc(exist(_DISCRETEMID)) %then %do;
21647     +              data &bindata;
21648     +                 merge &bindata _DISCRETEMID(in = _b);
21649     +                 by VARIABLE;
21650     +                 if _b then _DISCRETE=1;
21651     +                 else _DISCRETE=0;
21652     +              run;
21653     +          %end;
21654     +
21655     +          data _null_;
21656     +             file fref;
21657     +             set &bindata end=eof;
21658     +             array _bounds{&NEW_NUMBARS};
21659     +             array _midpoint{&NEW_NUMBARS};
21660     +             if _n_=1 then
21661     +                put 'proc format;';
21662     +
21663     +             put 'value ' Format;
21664     +             if _DISCRETE then do;
21665     +                 do i=1 to &numbars;
21666     +                    _MID = _midpoint{i};
21667     +                    if _MID ne . and i<= _NUMCLASSBINS_ then
21668     +                       put _MID '="' _MID '"';
21669     +                 end;
21670     +                 put ';';
21671     +             end;
21672     +             else do;
21673     +                if min eq max then do;
21674     +                   put 'low - high ="' MIN '";';
21675     +                end;
21676     +                else do;
21677     +                   _LB  = MIN;
21678     +                   _MID = _midpoint{1};
21679     +                   _UB  = _bounds{1};
21680     +                   put 'LOW -' _UB '="' _MID '"';
21681     +
21682     +                   do i=1 to &NEW_NUMBARS-1;
21683     +                      _LB  = _bounds{i};
21684     +                      j=i+1;
21685     +                      _MID = _midpoint{j};
21686     +                      _UB  = _bounds{j};
21687     +                      if (_UB ne .) and (_LB ne _UB) then do;
21688     +                         if _UB>=MAX then
21689     +                            put _LB '-HIGH="' _MID '"';
21690     +                         else
21691     +                            put _LB '-' _UB '="' _MID '"';
21692     +                      end;
21693     +                   end;
21694     +                end;
21695     +             end;
21696     +             put ';';
21697     +             if eof then put 'run;';
21698     +          run;
21699     +
21700     +          %inc fref;
21701     +
21702     +          filename fref;
21703     +      %end;
21704     +
21705     +      data _binneddata / view=_binneddata;
21706     +         set &DATA(obs=&_EM_VARDISTOBS_MAX);
21707     +
21708     +         %let dsid    =%sysfunc(open(&bindata));
21709     +         %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
21710     +         %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
21711     +         %let obs = %sysfunc(fetch(&dsid));
21712     +
21713     +         %if (&obs=0) %then %do;
21714     +             format
21715     +         %end;
21716     +
21717     +         %let _count = 0;
21718     +         %do %while(&obs=0);
21719     +             %let _count = %eval(&_count +1);
21720     +             %let _name = %sysfunc(getvarc(&dsid, &namenum));
21721     +             %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
21722     +             %do;
21723     +                &_name &_fmtname..
21724     +             %end;
21725     +             %let obs = %sysfunc(fetch(&dsid));
21726     +         %end;
21727     +         %let dsid=%sysfunc(close(&dsid));
21728     +         ;
21729     +      run;
21730     +   %end;
21731     +
21732     +    %if &bin ne N %then %do;
21733     +        proc dmdb data=_binneddata(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
21734     +    %end;
21735     +    %else %do;
21736     +        proc dmdb data = &data(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
21737     +    %end;
21738     +      class %_vars &vars;
21739     +      %if &FREQ ne %then %do;
21740     +          freq &FREQ;
21741     +      %end;
21742     +   run;
21743     +   data &output;
21744     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
21745     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
21746     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
21747     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
21748     +      set _temptab;
21749     +      format VALUE 12.3 count;
21750     +      value = inputn(level, 'best12.');
21751     +      keep VARIABLE COUNT PERCENT VALUE;
21752     +   run;
21753     +   %if &BIN ne N and %sysfunc(exist(_MINMAXDATA)) and &minmax=Y %then %do;
21754     +       data &output;
21755     +          set &output(in=_a) _MINMAXDATA;
21756     +          if _a then Pos=2;
21757     +       run;
21758     +       proc sort data=&output out=&output(drop=pos);
21759     +          by VARIABLE POS VALUE;
21760     +          where VALUE ne .;
21761     +       run;
21762     +   %end;
21763     +   proc datasets lib=work nolist mt=(DATA VIEW);
21764     +      delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
21765     +   run;
21766     +   quit;
21767     +
21768     +   %doend:
21769     +%mend var_profile;
NOTE: %INCLUDE (level 1) ending.
21770      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
21771      %var_profile(DATA=EMWS1.FIMPORT_train, OUTPUT=EMWS1.Filter_VARDIST, METADATA=EMWS1.Filter_VariableSet, COMPUTESTAT=N, FREQ=, BIN=Y, NUMBARS= 16, minmax=Y);
*------------------------------------------------------------*
* Filter: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set EMWS1.Filter_VariableSet(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;

NOTE: There were 15 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 15 observations and 34 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set EMWS1.Filter_VariableSet end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Mon,  5 Apr, 2021 01:09:04 PM,
      Last Modified=Mon,  5 Apr, 2021 01:09:04 PM,
      Filename=C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\macros.sas7bcat,
      Release Created=9.0401M2,Host Created=W32_8PRO

NOTE: 4 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 74.
NOTE: There were 15 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
21772     +%macro _vars;
21773     +bore city_mpg compression_ratio curb_weight engine_size height highway_mpg
21774     +horsepower length normalized_losses peak_rpm price stroke wheel_base width
21775     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=EMWS1.FIMPORT_train(obs=1000000) classout=_CLASSOUT maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   bore city_mpg compression_ratio curb_weight engine_size height highway_mpg horsepower length normalized_losses peak_rpm price stroke wheel_base width
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 205   Memory used = 511K.
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: There were 205 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: There were 205 observations read from the data set EMWS1.FIMPORT_TRAIN.
NOTE: The data set WORK._CLASSOUT has 255 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;

NOTE: There were 255 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 0 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._COUNT has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 255 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 255 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 255 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 15 observations and 18 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT17 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 15 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 0 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 0 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS1.FIMPORT_train(keep
MPRINT(VAR_PROFILE):  =bore city_mpg compression_ratio curb_weight engine_size height highway_mpg horsepower length normalized_losses peak_rpm price stroke wheel_base width obs=1000000);
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=_PCTLSTAT out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   bore city_mpg compression_ratio curb_weight engine_size height highway_mpg horsepower length normalized_losses peak_rpm price stroke wheel_base width
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 205 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: There were 205 observations read from the data set EMWS1.FIMPORT_TRAIN.
NOTE: There were 205 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 16 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P100');
MPRINT(VAR_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100');
NOTE: The data set WORK._MINMAXDATA has 15 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VAR_PROFILE):   data _MINMAXDATA(keep=Variable Value Pos);
MPRINT(VAR_PROFILE):   set _MINMAXDATA;
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   Value = min;
MPRINT(VAR_PROFILE):   Pos=1;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   Value = max;
MPRINT(VAR_PROFILE):   Pos=3;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 15 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set WORK._MINMAXDATA has 30 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_BOUNDS(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BOUNDS has 15 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_BOUNDS;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 15 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 15 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   set _BOUNDS;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;

NOTE: There were 15 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 15 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   merge _BOUNDS _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;

WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
NOTE: There were 15 observations read from the data set WORK._BOUNDS.
NOTE: There were 0 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BOUNDS has 15 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _BOUNDS end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Mon,  5 Apr, 2021 01:09:06 PM,
      Last Modified=Mon,  5 Apr, 2021 01:09:06 PM,
      Filename=C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\em.sas7bcat,
      Release Created=9.0401M2,Host Created=W32_8PRO

NOTE: 347 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 34.
NOTE: There were 15 observations read from the data set WORK._BOUNDS.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
21776     +proc format;
MPRINT(VAR_PROFILE):   proc format;
21777     +value F1_
21778     +LOW -2.626 ="2.5653125 "
21779     +2.626 -2.712 ="2.6513125 "
21780     +2.712 -2.798 ="2.7373125 "
21781     +2.798 -2.884 ="2.8233125 "
21782     +2.884 -2.97 ="2.9093125 "
21783     +2.97 -3.030625 ="3.0003125 "
21784     +3.030625 -3.09125 ="3.0609375 "
21785     +3.09125 -3.151875 ="3.1215625 "
21786     +3.151875 -3.2125 ="3.1821875 "
21787     +3.2125 -3.273125 ="3.2428125 "
21788     +3.273125 -3.33375 ="3.3034375 "
21789     +3.33375 -3.394375 ="3.3640625 "
21790     +3.394375 -3.455 ="3.4246875 "
21791     +3.455 -3.515625 ="3.4853125 "
21792     +3.515625 -3.57625 ="3.5459375 "
21793     +3.57625 -3.636875 ="3.6065625 "
21794     +3.636875 -3.6975 ="3.6671875 "
21795     +3.6975 -3.758125 ="3.7278125 "
21796     +3.758125 -3.81875 ="3.7884375 "
21797     +3.81875 -3.879375 ="3.8490625 "
21798     +3.879375 -HIGH="3.9096875 "
21799     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -2.626 ="2.5653125 " 2.626 -2.712 ="2.6513125 " 2.712 -2.798 ="2.7373125 " 2.798 -2.884 ="2.8233125 " 2.884 -2.97 ="2.9093125 " 2.97 -3.030625 ="3.0003125 " 3.030625 -3.09125 ="3.0609375 " 3.09125 -3.151875 ="3.1215625 
" 3.151875 -3.2125 ="3.1821875 " 3.2125 -3.273125 ="3.2428125 " 3.273125 -3.33375 ="3.3034375 " 3.33375 -3.394375 ="3.3640625 " 3.394375 -3.455 ="3.4246875 " 3.455 -3.515625 ="3.4853125 " 3.515625 -3.57625 ="3.5459375 " 3.57625 -3.636875 ="3.6065625 " 
3.636875 -3.6975 ="3.6671875 " 3.6975 -3.758125 ="3.7278125 " 3.758125 -3.81875 ="3.7884375 " 3.81875 -3.879375 ="3.8490625 " 3.879375 -HIGH="3.9096875 " ;
NOTE: Format F1_ has been output.
21800     +value F2_
21801     +LOW -14.5 ="13.75 "
21802     +14.5 -16 ="15.25 "
21803     +16 -17.5 ="16.75 "
21804     +17.5 -19 ="18.25 "
21805     +19 -20.5 ="19.75 "
21806     +20.5 -22 ="21.25 "
21807     +22 -23.5 ="22.75 "
21808     +23.5 -25 ="24.25 "
21809     +25 -26.5 ="25.75 "
21810     +26.5 -28 ="27.25 "
21811     +28 -29.5 ="28.75 "
21812     +29.5 -31 ="30.25 "
21813     +31 -32.5 ="31.75 "
21814     +32.5 -34 ="33.25 "
21815     +34 -35.5 ="34.75 "
21816     +35.5 -37 ="36.25 "
21817     +37 -39.4 ="38.65 "
21818     +39.4 -41.8 ="41.05 "
21819     +41.8 -44.2 ="43.45 "
21820     +44.2 -46.6 ="45.85 "
21821     +46.6 -HIGH="48.25 "
21822     +;
MPRINT(VAR_PROFILE):   value F2_ LOW -14.5 ="13.75 " 14.5 -16 ="15.25 " 16 -17.5 ="16.75 " 17.5 -19 ="18.25 " 19 -20.5 ="19.75 " 20.5 -22 ="21.25 " 22 -23.5 ="22.75 " 23.5 -25 ="24.25 " 25 -26.5 ="25.75 " 26.5 -28 ="27.25 " 28 -29.5 ="28.75 " 29.5 -31 
="30.25 " 31 -32.5 ="31.75 " 32.5 -34 ="33.25 " 34 -35.5 ="34.75 " 35.5 -37 ="36.25 " 37 -39.4 ="38.65 " 39.4 -41.8 ="41.05 " 41.8 -44.2 ="43.45 " 44.2 -46.6 ="45.85 " 46.6 -HIGH="48.25 " ;
NOTE: Format F2_ has been output.
21823     +value F3_
21824     +LOW -8 ="7.5 "
21825     +8 -9 ="8.5 "
21826     +9 -10 ="9.5 "
21827     +10 -11 ="10.5 "
21828     +11 -12 ="11.5 "
21829     +12 -13 ="12.5 "
21830     +13 -14 ="13.5 "
21831     +14 -15 ="14.5 "
21832     +15 -16 ="15.5 "
21833     +16 -17 ="16.5 "
21834     +17 -18 ="17.5 "
21835     +18 -19 ="18.5 "
21836     +19 -20 ="19.5 "
21837     +20 -21 ="20.5 "
21838     +21 -22 ="21.5 "
21839     +22 -HIGH="22.5 "
21840     +;
MPRINT(VAR_PROFILE):   value F3_ LOW -8 ="7.5 " 8 -9 ="8.5 " 9 -10 ="9.5 " 10 -11 ="10.5 " 11 -12 ="11.5 " 12 -13 ="12.5 " 13 -14 ="13.5 " 14 -15 ="14.5 " 15 -16 ="15.5 " 16 -17 ="16.5 " 17 -18 ="17.5 " 18 -19 ="18.5 " 19 -20 ="19.5 " 20 -21 ="20.5 " 21 
-22 ="21.5 " 22 -HIGH="22.5 " ;
NOTE: Format F3_ has been output.
21841     +value F4_
21842     +LOW -1614.0625 ="1551.03125 "
21843     +1614.0625 -1740.125 ="1677.09375 "
21844     +1740.125 -1866.1875 ="1803.15625 "
21845     +1866.1875 -1992.25 ="1929.21875 "
21846     +1992.25 -2118.3125 ="2055.28125 "
21847     +2118.3125 -2244.375 ="2181.34375 "
21848     +2244.375 -2370.4375 ="2307.40625 "
21849     +2370.4375 -2496.5 ="2433.46875 "
21850     +2496.5 -2622.5625 ="2559.53125 "
21851     +2622.5625 -2748.625 ="2685.59375 "
21852     +2748.625 -2874.6875 ="2811.65625 "
21853     +2874.6875 -3000.75 ="2937.71875 "
21854     +3000.75 -3126.8125 ="3063.78125 "
21855     +3126.8125 -3252.875 ="3189.84375 "
21856     +3252.875 -3378.9375 ="3315.90625 "
21857     +3378.9375 -3505 ="3441.96875 "
21858     +3505 -3617.2 ="3568.03125 "
21859     +3617.2 -3729.4 ="3680.23125 "
21860     +3729.4 -3841.6 ="3792.43125 "
21861     +3841.6 -3953.8 ="3904.63125 "
21862     +3953.8 -HIGH="4016.83125 "
21863     +;
MPRINT(VAR_PROFILE):   value F4_ LOW -1614.0625 ="1551.03125 " 1614.0625 -1740.125 ="1677.09375 " 1740.125 -1866.1875 ="1803.15625 " 1866.1875 -1992.25 ="1929.21875 " 1992.25 -2118.3125 ="2055.28125 " 2118.3125 -2244.375 ="2181.34375 " 2244.375 -2370.4375 
="2307.40625 " 2370.4375 -2496.5 ="2433.46875 " 2496.5 -2622.5625 ="2559.53125 " 2622.5625 -2748.625 ="2685.59375 " 2748.625 -2874.6875 ="2811.65625 " 2874.6875 -3000.75 ="2937.71875 " 3000.75 -3126.8125 ="3063.78125 " 3126.8125 -3252.875 ="3189.84375 " 
3252.875 -3378.9375 ="3315.90625 " 3378.9375 -3505 ="3441.96875 " 3505 -3617.2 ="3568.03125 " 3617.2 -3729.4 ="3680.23125 " 3729.4 -3841.6 ="3792.43125 " 3841.6 -3953.8 ="3904.63125 " 3953.8 -HIGH="4016.83125 " ;
NOTE: Format F4_ has been output.
21864     +value F5_
21865     +LOW -69.875 ="65.4375 "
21866     +69.875 -78.75 ="74.3125 "
21867     +78.75 -87.625 ="83.1875 "
21868     +87.625 -96.5 ="92.0625 "
21869     +96.5 -105.375 ="100.9375 "
21870     +105.375 -114.25 ="109.8125 "
21871     +114.25 -123.125 ="118.6875 "
21872     +123.125 -132 ="127.5625 "
21873     +132 -140.875 ="136.4375 "
21874     +140.875 -149.75 ="145.3125 "
21875     +149.75 -158.625 ="154.1875 "
21876     +158.625 -167.5 ="163.0625 "
21877     +167.5 -176.375 ="171.9375 "
21878     +176.375 -185.25 ="180.8125 "
21879     +185.25 -194.125 ="189.6875 "
21880     +194.125 -203 ="198.5625 "
21881     +203 -227.6 ="223.1625 "
21882     +227.6 -252.2 ="247.7625 "
21883     +252.2 -276.8 ="272.3625 "
21884     +276.8 -301.4 ="296.9625 "
21885     +301.4 -HIGH="321.5625 "
21886     +;
MPRINT(VAR_PROFILE):   value F5_ LOW -69.875 ="65.4375 " 69.875 -78.75 ="74.3125 " 78.75 -87.625 ="83.1875 " 87.625 -96.5 ="92.0625 " 96.5 -105.375 ="100.9375 " 105.375 -114.25 ="109.8125 " 114.25 -123.125 ="118.6875 " 123.125 -132 ="127.5625 " 132 
-140.875 ="136.4375 " 140.875 -149.75 ="145.3125 " 149.75 -158.625 ="154.1875 " 158.625 -167.5 ="163.0625 " 167.5 -176.375 ="171.9375 " 176.375 -185.25 ="180.8125 " 185.25 -194.125 ="189.6875 " 194.125 -203 ="198.5625 " 203 -227.6 ="223.1625 " 227.6 
-252.2 ="247.7625 " 252.2 -276.8 ="272.3625 " 276.8 -301.4 ="296.9625 " 301.4 -HIGH="321.5625 " ;
NOTE: Format F5_ has been output.
21887     +value F6_
21888     +LOW -48.55 ="48.175 "
21889     +48.55 -49.3 ="48.925 "
21890     +49.3 -50.05 ="49.675 "
21891     +50.05 -50.8 ="50.425 "
21892     +50.8 -51.55 ="51.175 "
21893     +51.55 -52.3 ="51.925 "
21894     +52.3 -53.05 ="52.675 "
21895     +53.05 -53.8 ="53.425 "
21896     +53.8 -54.55 ="54.175 "
21897     +54.55 -55.3 ="54.925 "
21898     +55.3 -56.05 ="55.675 "
21899     +56.05 -56.8 ="56.425 "
21900     +56.8 -57.55 ="57.175 "
21901     +57.55 -58.3 ="57.925 "
21902     +58.3 -59.05 ="58.675 "
21903     +59.05 -HIGH="59.425 "
21904     +;
MPRINT(VAR_PROFILE):   value F6_ LOW -48.55 ="48.175 " 48.55 -49.3 ="48.925 " 49.3 -50.05 ="49.675 " 50.05 -50.8 ="50.425 " 50.8 -51.55 ="51.175 " 51.55 -52.3 ="51.925 " 52.3 -53.05 ="52.675 " 53.05 -53.8 ="53.425 " 53.8 -54.55 ="54.175 " 54.55 -55.3 
="54.925 " 55.3 -56.05 ="55.675 " 56.05 -56.8 ="56.425 " 56.8 -57.55 ="57.175 " 57.55 -58.3 ="57.925 " 58.3 -59.05 ="58.675 " 59.05 -HIGH="59.425 " ;
NOTE: Format F6_ has been output.
21905     +value F7_
21906     +LOW -17.6875 ="16.84375 "
21907     +17.6875 -19.375 ="18.53125 "
21908     +19.375 -21.0625 ="20.21875 "
21909     +21.0625 -22.75 ="21.90625 "
21910     +22.75 -24.4375 ="23.59375 "
21911     +24.4375 -26.125 ="25.28125 "
21912     +26.125 -27.8125 ="26.96875 "
21913     +27.8125 -29.5 ="28.65625 "
21914     +29.5 -31.1875 ="30.34375 "
21915     +31.1875 -32.875 ="32.03125 "
21916     +32.875 -34.5625 ="33.71875 "
21917     +34.5625 -36.25 ="35.40625 "
21918     +36.25 -37.9375 ="37.09375 "
21919     +37.9375 -39.625 ="38.78125 "
21920     +39.625 -41.3125 ="40.46875 "
21921     +41.3125 -43 ="42.15625 "
21922     +43 -45.2 ="44.35625 "
21923     +45.2 -47.4 ="46.55625 "
21924     +47.4 -49.6 ="48.75625 "
21925     +49.6 -51.8 ="50.95625 "
21926     +51.8 -HIGH="53.15625 "
21927     +;
MPRINT(VAR_PROFILE):   value F7_ LOW -17.6875 ="16.84375 " 17.6875 -19.375 ="18.53125 " 19.375 -21.0625 ="20.21875 " 21.0625 -22.75 ="21.90625 " 22.75 -24.4375 ="23.59375 " 24.4375 -26.125 ="25.28125 " 26.125 -27.8125 ="26.96875 " 27.8125 -29.5 ="28.65625 
" 29.5 -31.1875 ="30.34375 " 31.1875 -32.875 ="32.03125 " 32.875 -34.5625 ="33.71875 " 34.5625 -36.25 ="35.40625 " 36.25 -37.9375 ="37.09375 " 37.9375 -39.625 ="38.78125 " 39.625 -41.3125 ="40.46875 " 41.3125 -43 ="42.15625 " 43 -45.2 ="44.35625 " 45.2 
-47.4 ="46.55625 " 47.4 -49.6 ="48.75625 " 49.6 -51.8 ="50.95625 " 51.8 -HIGH="53.15625 " ;
NOTE: Format F7_ has been output.
21928     +value F8_
21929     +LOW -56.375 ="52.1875 "
21930     +56.375 -64.75 ="60.5625 "
21931     +64.75 -73.125 ="68.9375 "
21932     +73.125 -81.5 ="77.3125 "
21933     +81.5 -89.875 ="85.6875 "
21934     +89.875 -98.25 ="94.0625 "
21935     +98.25 -106.625 ="102.4375 "
21936     +106.625 -115 ="110.8125 "
21937     +115 -123.375 ="119.1875 "
21938     +123.375 -131.75 ="127.5625 "
21939     +131.75 -140.125 ="135.9375 "
21940     +140.125 -148.5 ="144.3125 "
21941     +148.5 -156.875 ="152.6875 "
21942     +156.875 -165.25 ="161.0625 "
21943     +165.25 -173.625 ="169.4375 "
21944     +173.625 -182 ="177.8125 "
21945     +182 -203.2 ="199.0125 "
21946     +203.2 -224.4 ="220.2125 "
21947     +224.4 -245.6 ="241.4125 "
21948     +245.6 -266.8 ="262.6125 "
21949     +266.8 -HIGH="283.8125 "
21950     +;
MPRINT(VAR_PROFILE):   value F8_ LOW -56.375 ="52.1875 " 56.375 -64.75 ="60.5625 " 64.75 -73.125 ="68.9375 " 73.125 -81.5 ="77.3125 " 81.5 -89.875 ="85.6875 " 89.875 -98.25 ="94.0625 " 98.25 -106.625 ="102.4375 " 106.625 -115 ="110.8125 " 115 -123.375 
="119.1875 " 123.375 -131.75 ="127.5625 " 131.75 -140.125 ="135.9375 " 140.125 -148.5 ="144.3125 " 148.5 -156.875 ="152.6875 " 156.875 -165.25 ="161.0625 " 165.25 -173.625 ="169.4375 " 173.625 -182 ="177.8125 " 182 -203.2 ="199.0125 " 203.2 -224.4 
="220.2125 " 224.4 -245.6 ="241.4125 " 245.6 -266.8 ="262.6125 " 266.8 -HIGH="283.8125 " ;
NOTE: Format F8_ has been output.
21951     +value F9_
21952     +LOW -144.3 ="142.346875 "
21953     +144.3 -147.5 ="145.546875 "
21954     +147.5 -150.7 ="148.746875 "
21955     +150.7 -153.9 ="151.946875 "
21956     +153.9 -157.1 ="155.146875 "
21957     +157.1 -160.2875 ="158.69375 "
21958     +160.2875 -163.475 ="161.88125 "
21959     +163.475 -166.6625 ="165.06875 "
21960     +166.6625 -169.85 ="168.25625 "
21961     +169.85 -173.0375 ="171.44375 "
21962     +173.0375 -176.225 ="174.63125 "
21963     +176.225 -179.4125 ="177.81875 "
21964     +179.4125 -182.6 ="181.00625 "
21965     +182.6 -185.7875 ="184.19375 "
21966     +185.7875 -188.975 ="187.38125 "
21967     +188.975 -192.1625 ="190.56875 "
21968     +192.1625 -195.35 ="193.75625 "
21969     +195.35 -198.5375 ="196.94375 "
21970     +198.5375 -201.725 ="200.13125 "
21971     +201.725 -204.9125 ="203.31875 "
21972     +204.9125 -HIGH="206.50625 "
21973     +;
MPRINT(VAR_PROFILE):   value F9_ LOW -144.3 ="142.346875 " 144.3 -147.5 ="145.546875 " 147.5 -150.7 ="148.746875 " 150.7 -153.9 ="151.946875 " 153.9 -157.1 ="155.146875 " 157.1 -160.2875 ="158.69375 " 160.2875 -163.475 ="161.88125 " 163.475 -166.6625 
="165.06875 " 166.6625 -169.85 ="168.25625 " 169.85 -173.0375 ="171.44375 " 173.0375 -176.225 ="174.63125 " 176.225 -179.4125 ="177.81875 " 179.4125 -182.6 ="181.00625 " 182.6 -185.7875 ="184.19375 " 185.7875 -188.975 ="187.38125 " 188.975 -192.1625 
="190.56875 " 192.1625 -195.35 ="193.75625 " 195.35 -198.5375 ="196.94375 " 198.5375 -201.725 ="200.13125 " 201.725 -204.9125 ="203.31875 " 204.9125 -HIGH="206.50625 " ;
NOTE: Format F9_ has been output.
21974     +value F10_
21975     +LOW -72.6875 ="68.84375 "
21976     +72.6875 -80.375 ="76.53125 "
21977     +80.375 -88.0625 ="84.21875 "
21978     +88.0625 -95.75 ="91.90625 "
21979     +95.75 -103.4375 ="99.59375 "
21980     +103.4375 -111.125 ="107.28125 "
21981     +111.125 -118.8125 ="114.96875 "
21982     +118.8125 -126.5 ="122.65625 "
21983     +126.5 -134.1875 ="130.34375 "
21984     +134.1875 -141.875 ="138.03125 "
21985     +141.875 -149.5625 ="145.71875 "
21986     +149.5625 -157.25 ="153.40625 "
21987     +157.25 -164.9375 ="161.09375 "
21988     +164.9375 -172.625 ="168.78125 "
21989     +172.625 -180.3125 ="176.46875 "
21990     +180.3125 -188 ="184.15625 "
21991     +188 -201.6 ="197.75625 "
21992     +201.6 -215.2 ="211.35625 "
21993     +215.2 -228.8 ="224.95625 "
21994     +228.8 -242.4 ="238.55625 "
21995     +242.4 -HIGH="252.15625 "
21996     +;
MPRINT(VAR_PROFILE):   value F10_ LOW -72.6875 ="68.84375 " 72.6875 -80.375 ="76.53125 " 80.375 -88.0625 ="84.21875 " 88.0625 -95.75 ="91.90625 " 95.75 -103.4375 ="99.59375 " 103.4375 -111.125 ="107.28125 " 111.125 -118.8125 ="114.96875 " 118.8125 -126.5 
="122.65625 " 126.5 -134.1875 ="130.34375 " 134.1875 -141.875 ="138.03125 " 141.875 -149.5625 ="145.71875 " 149.5625 -157.25 ="153.40625 " 157.25 -164.9375 ="161.09375 " 164.9375 -172.625 ="168.78125 " 172.625 -180.3125 ="176.46875 " 180.3125 -188 
="184.15625 " 188 -201.6 ="197.75625 " 201.6 -215.2 ="211.35625 " 215.2 -228.8 ="224.95625 " 228.8 -242.4 ="238.55625 " 242.4 -HIGH="252.15625 " ;
NOTE: Format F10_ has been output.
21997     +value F11_
21998     +LOW -4265.625 ="4207.8125 "
21999     +4265.625 -4381.25 ="4323.4375 "
22000     +4381.25 -4496.875 ="4439.0625 "
22001     +4496.875 -4612.5 ="4554.6875 "
22002     +4612.5 -4728.125 ="4670.3125 "
22003     +4728.125 -4843.75 ="4785.9375 "
22004     +4843.75 -4959.375 ="4901.5625 "
22005     +4959.375 -5075 ="5017.1875 "
22006     +5075 -5190.625 ="5132.8125 "
22007     +5190.625 -5306.25 ="5248.4375 "
22008     +5306.25 -5421.875 ="5364.0625 "
22009     +5421.875 -5537.5 ="5479.6875 "
22010     +5537.5 -5653.125 ="5595.3125 "
22011     +5653.125 -5768.75 ="5710.9375 "
22012     +5768.75 -5884.375 ="5826.5625 "
22013     +5884.375 -6000 ="5942.1875 "
22014     +6000 -6120 ="6062.1875 "
22015     +6120 -6240 ="6182.1875 "
22016     +6240 -6360 ="6302.1875 "
22017     +6360 -6480 ="6422.1875 "
22018     +6480 -HIGH="6542.1875 "
22019     +;
MPRINT(VAR_PROFILE):   value F11_ LOW -4265.625 ="4207.8125 " 4265.625 -4381.25 ="4323.4375 " 4381.25 -4496.875 ="4439.0625 " 4496.875 -4612.5 ="4554.6875 " 4612.5 -4728.125 ="4670.3125 " 4728.125 -4843.75 ="4785.9375 " 4843.75 -4959.375 ="4901.5625 " 
4959.375 -5075 ="5017.1875 " 5075 -5190.625 ="5132.8125 " 5190.625 -5306.25 ="5248.4375 " 5306.25 -5421.875 ="5364.0625 " 5421.875 -5537.5 ="5479.6875 " 5537.5 -5653.125 ="5595.3125 " 5653.125 -5768.75 ="5710.9375 " 5768.75 -5884.375 ="5826.5625 " 
5884.375 -6000 ="5942.1875 " 6000 -6120 ="6062.1875 " 6120 -6240 ="6182.1875 " 6240 -6360 ="6302.1875 " 6360 -6480 ="6422.1875 " 6480 -HIGH="6542.1875 " ;
NOTE: Format F11_ has been output.
22020     +value F12_
22021     +LOW -6831.125 ="5974.5625 "
22022     +6831.125 -8544.25 ="7687.6875 "
22023     +8544.25 -10257.375 ="9400.8125 "
22024     +10257.375 -11970.5 ="11113.9375 "
22025     +11970.5 -13683.625 ="12827.0625 "
22026     +13683.625 -15396.75 ="14540.1875 "
22027     +15396.75 -17109.875 ="16253.3125 "
22028     +17109.875 -18823 ="17966.4375 "
22029     +18823 -20536.125 ="19679.5625 "
22030     +20536.125 -22249.25 ="21392.6875 "
22031     +22249.25 -23962.375 ="23105.8125 "
22032     +23962.375 -25675.5 ="24818.9375 "
22033     +25675.5 -27388.625 ="26532.0625 "
22034     +27388.625 -29101.75 ="28245.1875 "
22035     +29101.75 -30814.875 ="29958.3125 "
22036     +30814.875 -32528 ="31671.4375 "
22037     +32528 -35102.4 ="34245.8375 "
22038     +35102.4 -37676.8 ="36820.2375 "
22039     +37676.8 -40251.2 ="39394.6375 "
22040     +40251.2 -42825.6 ="41969.0375 "
22041     +42825.6 -HIGH="44543.4375 "
22042     +;
MPRINT(VAR_PROFILE):   value F12_ LOW -6831.125 ="5974.5625 " 6831.125 -8544.25 ="7687.6875 " 8544.25 -10257.375 ="9400.8125 " 10257.375 -11970.5 ="11113.9375 " 11970.5 -13683.625 ="12827.0625 " 13683.625 -15396.75 ="14540.1875 " 15396.75 -17109.875 
="16253.3125 " 17109.875 -18823 ="17966.4375 " 18823 -20536.125 ="19679.5625 " 20536.125 -22249.25 ="21392.6875 " 22249.25 -23962.375 ="23105.8125 " 23962.375 -25675.5 ="24818.9375 " 25675.5 -27388.625 ="26532.0625 " 27388.625 -29101.75 ="28245.1875 " 
29101.75 -30814.875 ="29958.3125 " 30814.875 -32528 ="31671.4375 " 32528 -35102.4 ="34245.8375 " 35102.4 -37676.8 ="36820.2375 " 37676.8 -40251.2 ="39394.6375 " 40251.2 -42825.6 ="41969.0375 " 42825.6 -HIGH="44543.4375 " ;
NOTE: Format F12_ has been output.
22043     +value F13_
22044     +LOW -2.184 ="2.10125 "
22045     +2.184 -2.298 ="2.21525 "
22046     +2.298 -2.412 ="2.32925 "
22047     +2.412 -2.526 ="2.44325 "
22048     +2.526 -2.64 ="2.55725 "
22049     +2.64 -2.7025 ="2.67125 "
22050     +2.7025 -2.765 ="2.73375 "
22051     +2.765 -2.8275 ="2.79625 "
22052     +2.8275 -2.89 ="2.85875 "
22053     +2.89 -2.9525 ="2.92125 "
22054     +2.9525 -3.015 ="2.98375 "
22055     +3.015 -3.0775 ="3.04625 "
22056     +3.0775 -3.14 ="3.10875 "
22057     +3.14 -3.2025 ="3.17125 "
22058     +3.2025 -3.265 ="3.23375 "
22059     +3.265 -3.3275 ="3.29625 "
22060     +3.3275 -3.39 ="3.35875 "
22061     +3.39 -3.4525 ="3.42125 "
22062     +3.4525 -3.515 ="3.48375 "
22063     +3.515 -3.5775 ="3.54625 "
22064     +3.5775 -3.64 ="3.60875 "
22065     +3.64 -3.746 ="3.71475 "
22066     +3.746 -3.852 ="3.82075 "
22067     +3.852 -3.958 ="3.92675 "
22068     +3.958 -4.064 ="4.03275 "
22069     +4.064 -HIGH="4.13875 "
22070     +;
MPRINT(VAR_PROFILE):   value F13_ LOW -2.184 ="2.10125 " 2.184 -2.298 ="2.21525 " 2.298 -2.412 ="2.32925 " 2.412 -2.526 ="2.44325 " 2.526 -2.64 ="2.55725 " 2.64 -2.7025 ="2.67125 " 2.7025 -2.765 ="2.73375 " 2.765 -2.8275 ="2.79625 " 2.8275 -2.89 ="2.85875 
" 2.89 -2.9525 ="2.92125 " 2.9525 -3.015 ="2.98375 " 3.015 -3.0775 ="3.04625 " 3.0775 -3.14 ="3.10875 " 3.14 -3.2025 ="3.17125 " 3.2025 -3.265 ="3.23375 " 3.265 -3.3275 ="3.29625 " 3.3275 -3.39 ="3.35875 " 3.39 -3.4525 ="3.42125 " 3.4525 -3.515 ="3.48375 
" 3.515 -3.5775 ="3.54625 " 3.5775 -3.64 ="3.60875 " 3.64 -3.746 ="3.71475 " 3.746 -3.852 ="3.82075 " 3.852 -3.958 ="3.92675 " 3.958 -4.064 ="4.03275 " 4.064 -HIGH="4.13875 " ;
NOTE: Format F13_ has been output.
22071     +value F14_
22072     +LOW -87.88 ="87.13125 "
22073     +87.88 -89.16 ="88.41125 "
22074     +89.16 -90.44 ="89.69125 "
22075     +90.44 -91.72 ="90.97125 "
22076     +91.72 -93 ="92.25125 "
22077     +93 -94.0625 ="93.53125 "
22078     +94.0625 -95.125 ="94.59375 "
22079     +95.125 -96.1875 ="95.65625 "
22080     +96.1875 -97.25 ="96.71875 "
22081     +97.25 -98.3125 ="97.78125 "
22082     +98.3125 -99.375 ="98.84375 "
22083     +99.375 -100.4375 ="99.90625 "
22084     +100.4375 -101.5 ="100.96875 "
22085     +101.5 -102.5625 ="102.03125 "
22086     +102.5625 -103.625 ="103.09375 "
22087     +103.625 -104.6875 ="104.15625 "
22088     +104.6875 -105.75 ="105.21875 "
22089     +105.75 -106.8125 ="106.28125 "
22090     +106.8125 -107.875 ="107.34375 "
22091     +107.875 -108.9375 ="108.40625 "
22092     +108.9375 -110 ="109.46875 "
22093     +110 -112.18 ="111.64875 "
22094     +112.18 -114.36 ="113.82875 "
22095     +114.36 -116.54 ="116.00875 "
22096     +116.54 -118.72 ="118.18875 "
22097     +118.72 -HIGH="120.36875 "
22098     +;
MPRINT(VAR_PROFILE):   value F14_ LOW -87.88 ="87.13125 " 87.88 -89.16 ="88.41125 " 89.16 -90.44 ="89.69125 " 90.44 -91.72 ="90.97125 " 91.72 -93 ="92.25125 " 93 -94.0625 ="93.53125 " 94.0625 -95.125 ="94.59375 " 95.125 -96.1875 ="95.65625 " 96.1875 
-97.25 ="96.71875 " 97.25 -98.3125 ="97.78125 " 98.3125 -99.375 ="98.84375 " 99.375 -100.4375 ="99.90625 " 100.4375 -101.5 ="100.96875 " 101.5 -102.5625 ="102.03125 " 102.5625 -103.625 ="103.09375 " 103.625 -104.6875 ="104.15625 " 104.6875 -105.75 
="105.21875 " 105.75 -106.8125 ="106.28125 " 106.8125 -107.875 ="107.34375 " 107.875 -108.9375 ="108.40625 " 108.9375 -110 ="109.46875 " 110 -112.18 ="111.64875 " 112.18 -114.36 ="113.82875 " 114.36 -116.54 ="116.00875 " 116.54 -118.72 ="118.18875 " 
118.72 -HIGH="120.36875 " ;
NOTE: Format F14_ has been output.
22099     +value F15_
22100     +LOW -60.96 ="60.515625 "
22101     +60.96 -61.62 ="61.175625 "
22102     +61.62 -62.28 ="61.835625 "
22103     +62.28 -62.94 ="62.495625 "
22104     +62.94 -63.6 ="63.155625 "
22105     +63.6 -64.14375 ="63.871875 "
22106     +64.14375 -64.6875 ="64.415625 "
22107     +64.6875 -65.23125 ="64.959375 "
22108     +65.23125 -65.775 ="65.503125 "
22109     +65.775 -66.31875 ="66.046875 "
22110     +66.31875 -66.8625 ="66.590625 "
22111     +66.8625 -67.40625 ="67.134375 "
22112     +67.40625 -67.95 ="67.678125 "
22113     +67.95 -68.49375 ="68.221875 "
22114     +68.49375 -69.0375 ="68.765625 "
22115     +69.0375 -69.58125 ="69.309375 "
22116     +69.58125 -70.125 ="69.853125 "
22117     +70.125 -70.66875 ="70.396875 "
22118     +70.66875 -71.2125 ="70.940625 "
22119     +71.2125 -71.75625 ="71.484375 "
22120     +71.75625 -HIGH="72.028125 "
22121     +;
MPRINT(VAR_PROFILE):   value F15_ LOW -60.96 ="60.515625 " 60.96 -61.62 ="61.175625 " 61.62 -62.28 ="61.835625 " 62.28 -62.94 ="62.495625 " 62.94 -63.6 ="63.155625 " 63.6 -64.14375 ="63.871875 " 64.14375 -64.6875 ="64.415625 " 64.6875 -65.23125 
="64.959375 " 65.23125 -65.775 ="65.503125 " 65.775 -66.31875 ="66.046875 " 66.31875 -66.8625 ="66.590625 " 66.8625 -67.40625 ="67.134375 " 67.40625 -67.95 ="67.678125 " 67.95 -68.49375 ="68.221875 " 68.49375 -69.0375 ="68.765625 " 69.0375 -69.58125 
="69.309375 " 69.58125 -70.125 ="69.853125 " 70.125 -70.66875 ="70.396875 " 70.66875 -71.2125 ="70.940625 " 71.2125 -71.75625 ="71.484375 " 71.75625 -HIGH="72.028125 " ;
NOTE: Format F15_ has been output.
MPRINT(VAR_PROFILE):   run;
22122     +run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS1.FIMPORT_train(obs=1000000);
MPRINT(VAR_PROFILE):   format bore F1_. city_mpg F2_. compression_ratio F3_. curb_weight F4_. engine_size F5_. height F6_. highway_mpg F7_. horsepower F8_. length F9_. normalized_losses F10_. peak_rpm F11_. price F12_. stroke F13_. wheel_base F14_. width 
F15_. ;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   bore city_mpg compression_ratio curb_weight engine_size height highway_mpg horsepower length normalized_losses peak_rpm price stroke wheel_base width
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 205   Memory used = 511K.
NOTE: There were 205 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      
NOTE: There were 205 observations read from the data set EMWS1.FIMPORT_TRAIN.
NOTE: There were 205 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 282 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
      

MPRINT(VAR_PROFILE):   data EMWS1.Filter_VARDIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 282 observations read from the data set WORK._TEMPTAB.
NOTE: The data set EMWS1.FILTER_VARDIST has 282 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data EMWS1.Filter_VARDIST;
MPRINT(VAR_PROFILE):   set EMWS1.Filter_VARDIST(in=_a) _MINMAXDATA;
MPRINT(VAR_PROFILE):   if _a then Pos=2;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 282 observations read from the data set EMWS1.FILTER_VARDIST.
NOTE: There were 30 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set EMWS1.FILTER_VARDIST has 312 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=EMWS1.Filter_VARDIST out=EMWS1.Filter_VARDIST(drop=pos);
MPRINT(VAR_PROFILE):   by VARIABLE POS VALUE;
MPRINT(VAR_PROFILE):   where VALUE ne .;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 306 observations read from the data set EMWS1.FILTER_VARDIST.
      WHERE VALUE not = .;
NOTE: The data set EMWS1.FILTER_VARDIST has 306 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.10 seconds
      cpu time            0.03 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
NOTE: Deleting WORK._MINMAXDATA (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    data WORK.M18A6GT5;
MPRINT(EM_DIAGRAM):   retain _MAXLEVEL 25;
MPRINT(EM_DIAGRAM):   set WORK.M18A6GT5 end=eof;
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   drop _MAXLEVEL;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES =25;
MPRINT(EM_DIAGRAM):   if MAXVALUES>_MAXLEVEL then _MAXLEVEL=MAXVALUES;
MPRINT(EM_DIAGRAM):   if eof then call symput('_MAXLEVEL', strip(put(_MAXLEVEL, best.)));
MPRINT(EM_DIAGRAM):   run;
22133      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22134      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
22135      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22136      %macro DMDBClass;
22137          aspiration(ASC) body_style(ASC) drive_wheels(ASC) engine_location(ASC)
22138         engine_type(ASC) fuel_system(ASC) fuel_type(ASC) num_of_cylinders(ASC)
22139         num_of_doors(ASC)
22140      %mend DMDBClass;
22141      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22142      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
22143      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22144      %macro DMDBVar;
22145          bore city_mpg compression_ratio curb_weight engine_size height highway_mpg
22146         horsepower length peak_rpm price stroke wheel_base width
22147      %mend DMDBVar;
22148      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22149      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
22150      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22151      proc dmdb batch data=EMWS1.FIMPORT_train
22152      classout=WORK._EMFILTERCLASS
22153      varout=WORK._EMFILTERVAR
22154      maxlevel = 26
22155      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.FIMPORT_train classout=WORK._EMFILTERCLASS varout=WORK._EMFILTERVAR maxlevel = 26 ;
MPRINT(EM_DIAGRAM):   class
22156      class %DMDBClass;
MPRINT(DMDBCLASS):   aspiration(ASC) body_style(ASC) drive_wheels(ASC) engine_location(ASC) engine_type(ASC) fuel_system(ASC) fuel_type(ASC) num_of_cylinders(ASC) num_of_doors(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
22157      var %DMDBVar;
MPRINT(DMDBVAR):   bore city_mpg compression_ratio curb_weight engine_size height highway_mpg horsepower length peak_rpm price stroke wheel_base width
MPRINT(EM_DIAGRAM):  ;
22158      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 205   Memory used = 511K.
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: There were 205 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: There were 205 observations read from the data set EMWS1.FIMPORT_TRAIN.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 9 variables.
NOTE: The data set WORK._EMFILTERVAR has 14 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
22159      quit;
22160      *--- end code ---*;

22161      data WORK.M18A6GT5;
MPRINT(EM_DIAGRAM):    data WORK.M18A6GT5;
22162      set WORK.M18A6GT5;
MPRINT(EM_DIAGRAM):   set WORK.M18A6GT5;
22163      if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
22164      if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
22165      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 23 observations read from the data set WORK.M18A6GT5.
NOTE: The data set WORK.M18A6GT5 has 0 observations and 34 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

22166      proc freq data=WORK._EMFILTERCLASS noprint;
MPRINT(EM_DIAGRAM):    proc freq data=WORK._EMFILTERCLASS noprint;
22167      table NAME / out=WORK._EMFILTERFREQ(keep=NAME COUNT rename=(COUNT=NUMLEVELS));
MPRINT(EM_DIAGRAM):   table NAME / out=WORK._EMFILTERFREQ(keep=NAME COUNT rename=(COUNT=NUMLEVELS));
22168      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERFREQ has 9 observations and 2 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

22169      data WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   data WORK._EMFILTERCLASS;
22170      set WORK._EMFILTERCLASS (rename=(FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(EM_DIAGRAM):   set WORK._EMFILTERCLASS (rename=(FREQUENCY=COUNT FREQPERCENT=PERCENT));
22171      _OBS_= _N_;
MPRINT(EM_DIAGRAM):   _OBS_= _N_;
22172      if (CRAW eq '' and NRAW eq .) then _OBS_=0;
MPRINT(EM_DIAGRAM):   if (CRAW eq '' and NRAW eq .) then _OBS_=0;
22173      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22174      proc sort data=WORK._EMFILTERCLASS nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=WORK._EMFILTERCLASS nodupkey;
22175      by NAME _OBS_;
MPRINT(EM_DIAGRAM):   by NAME _OBS_;
22176      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22177      proc sort data=WORK._EMFILTERFREQ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._EMFILTERFREQ;
22178      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22179      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set WORK._EMFILTERFREQ.
NOTE: The data set WORK._EMFILTERFREQ has 9 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22180      data WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   data WORK._EMFILTERCLASS;
22181      merge WORK._EMFILTERCLASS WORK._EMFILTERFREQ;
MPRINT(EM_DIAGRAM):   merge WORK._EMFILTERCLASS WORK._EMFILTERFREQ;
22182      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22183      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: There were 9 observations read from the data set WORK._EMFILTERFREQ.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

22184      data work._FilterMinFreq;
MPRINT(EM_DIAGRAM):    data work._FilterMinFreq;
22185      set WORK.M2ZW46TL;
MPRINT(EM_DIAGRAM):   set WORK.M2ZW46TL;
22186      where level ne 'INTERVAL';
MPRINT(EM_DIAGRAM):   where level ne 'INTERVAL';
22187      if KEEPMISSING in('D', '') then
22188      KEEPMISSING = "Y";
MPRINT(EM_DIAGRAM):   if KEEPMISSING in('D', '') then KEEPMISSING = "Y";
22189      *if ROLE='REJECTED' and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
MPRINT(EM_DIAGRAM):   *if ROLE='REJECTED' and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
22190      if ROLE ^in('INPUT','TARGET') and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
MPRINT(EM_DIAGRAM):   if ROLE ^in('INPUT','TARGET') and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
22191      if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
MPRINT(EM_DIAGRAM):   if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
22192      if minfreq = . then minfreq=1;
MPRINT(EM_DIAGRAM):   if minfreq = . then minfreq=1;
22193      if MAXVALUES = . then MAXVALUES = 25;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES = 25;
22194      minClassPct = 0.01;
MPRINT(EM_DIAGRAM):   minClassPct = 0.01;
22195      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set WORK.M2ZW46TL.
      WHERE level not = 'INTERVAL';
NOTE: The data set WORK._FILTERMINFREQ has 9 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

22196      proc sort data=work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   proc sort data=work._FilterMinFreq;
22197      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22198      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set WORK._FILTERMINFREQ.
NOTE: The data set WORK._FILTERMINFREQ has 9 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22199      proc sort data=WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._EMFILTERCLASS;
22200      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22201      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERCLASS has 39 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22202      data work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   data work._FilterMinFreq;
22203      merge work._FilterMinFreq(drop=LEVEL in=_a) WORK._EMFILTERCLASS (in=_b);
MPRINT(EM_DIAGRAM):   merge work._FilterMinFreq(drop=LEVEL in=_a) WORK._EMFILTERCLASS (in=_b);
22204      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
22205      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22206      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set WORK._FILTERMINFREQ.
NOTE: There were 39 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._FILTERMINFREQ has 39 observations and 43 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

22207      data work._FilterExclude;
MPRINT(EM_DIAGRAM):    data work._FilterExclude;
22208      set work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   set work._FilterMinFreq;
22209      where ( ((CALCMETHOD = 'MINFREQ' and (COUNT ne . and COUNT <= minfreq)) or (CALCMETHOD = 'MINPCT' and (NMISSPERCENT ne . and 0.01*NMISSPERCENT <=minClassPct))) and (NUMLEVELS <= MAXVALUES)) or (KEEPMISSING eq 'N' and NRAW=. and CRAW='');
MPRINT(EM_DIAGRAM):   where ( ((CALCMETHOD = 'MINFREQ' and (COUNT ne . and COUNT <= minfreq)) or (CALCMETHOD = 'MINPCT' and (NMISSPERCENT ne . and 0.01*NMISSPERCENT <=minClassPct))) and (NUMLEVELS <= MAXVALUES)) or (KEEPMISSING eq 'N' and NRAW=. and 
CRAW='');
22210      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._FILTERMINFREQ.
      WHERE ((((CALCMETHOD='MINFREQ') and (COUNT not = .) and (COUNT<=minfreq)) or ((CALCMETHOD='MINPCT') and (NMISSPERCENT not = .) and (minClassPct>=(0.01*NMISSPERCENT)))) and (NUMLEVELS<=MAXVALUES)) or ((KEEPMISSING='N') and (NRAW=.) and (CRAW=' '));
NOTE: The data set WORK._FILTEREXCLUDE has 5 observations and 43 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22211      data work._ManualExclude;
MPRINT(EM_DIAGRAM):   data work._ManualExclude;
22212      set WORK.M2ZW46TL;
MPRINT(EM_DIAGRAM):   set WORK.M2ZW46TL;
22213      if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
MPRINT(EM_DIAGRAM):   if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
22214      if level ne 'INTERVAL' and calcmethod='MANUAL' then output;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' and calcmethod='MANUAL' then output;
22215      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 23 observations read from the data set WORK.M2ZW46TL.
NOTE: The data set WORK._MANUALEXCLUDE has 0 observations and 34 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

22216      proc sort data=work._ManualExclude;
MPRINT(EM_DIAGRAM):   proc sort data=work._ManualExclude;
22217      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22218      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._MANUALEXCLUDE has 0 observations and 34 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22219      proc sort data=EMWS1.Filter_CLASSFILTER(rename=(VARIABLE=NAME VALUE=LEVEL)) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_CLASSFILTER(rename=(VARIABLE=NAME VALUE=LEVEL)) out=_temp;
22220      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22221      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.FILTER_CLASSFILTER.
NOTE: View EMWS1.FILTER_CLASSFILTER.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      
NOTE: There were 0 observations read from the data set EMWS1.FILTER_CLASSDIST.
      WHERE Filter='Y';
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

22222      data work._ManualExclude;
MPRINT(EM_DIAGRAM):   data work._ManualExclude;
22223      merge work._ManualExclude(drop=LEVEL in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge work._ManualExclude(drop=LEVEL in=_a) _temp(in=_b);
22224      _OBS_=_N_;
MPRINT(EM_DIAGRAM):   _OBS_=_N_;
22225      if strip(Level) in('.', '') then _OBS_=0;
MPRINT(EM_DIAGRAM):   if strip(Level) in('.', '') then _OBS_=0;
22226      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
22227      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22228      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._MANUALEXCLUDE has 0 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22229      data work._FilterExclude;
MPRINT(EM_DIAGRAM):   data work._FilterExclude;
22230      set work._ManualExclude work._FilterExclude;
MPRINT(EM_DIAGRAM):   set work._ManualExclude work._FilterExclude;
22231      if type = 'N' and format='' then level= strip(level);
MPRINT(EM_DIAGRAM):   if type = 'N' and format='' then level= strip(level);
22232      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: There were 5 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set WORK._FILTEREXCLUDE has 5 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22233      proc sort data=work._FilterExclude nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=work._FilterExclude nodupkey;
22234      by NAME _OBS_;
MPRINT(EM_DIAGRAM):   by NAME _OBS_;
22235      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._FILTEREXCLUDE has 5 observations and 44 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

22236      %let _FilterClassNum= 0;
22237      data work._FilterExclude;
MPRINT(EM_DIAGRAM):   data work._FilterExclude;
22238      retain newvarindex 0;
MPRINT(EM_DIAGRAM):   retain newvarindex 0;
22239      length newvar normvar $32;
MPRINT(EM_DIAGRAM):   length newvar normvar $32;
22240      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
22241      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
22242      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22243      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
22244      newvarindex + 1;
MPRINT(EM_DIAGRAM):   newvarindex + 1;
22245      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
22246      newvar = strip("_FILTERFMT")!!strip(put(newvarindex, best.));
MPRINT(EM_DIAGRAM):   newvar = strip("_FILTERFMT")!!strip(put(newvarindex, best.));
22247      end;
MPRINT(EM_DIAGRAM):   end;
22248      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
22249      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
22250      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
22251      normvar = strip("_FILTERNORM")!!strip(put(newvarindex, best.));
MPRINT(EM_DIAGRAM):   normvar = strip("_FILTERNORM")!!strip(put(newvarindex, best.));
22252      end;
MPRINT(EM_DIAGRAM):   end;
22253      end;
MPRINT(EM_DIAGRAM):   end;
22254      end;
MPRINT(EM_DIAGRAM):   end;
22255      if eof then call symput('_FilterClassNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterClassNum', strip(put(_N_, best.)));
22256      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: The variable string in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 5 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set WORK._FILTEREXCLUDE has 5 observations and 46 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

22257      data EMWS1.Filter_CLASS;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASS;
22258      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,        NOQUOTE))" VALUE = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,        NOQUOTE))" COUNT =
22259         "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,       NOQUOTE))" CALCMETHOD =
22260         "%sysfunc(sasmsg(sashelp.dmine, rpt_filtermethod_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable" ROLE = "Role" VALUE = "Value" COUNT = "Frequency Count" PERCENT = "Percent" LABEL = "Label" CALCMETHOD = "Filter Method";
22261      length VALUE $13;
MPRINT(EM_DIAGRAM):   length VALUE $13;
22262      set work._FilterExclude;
MPRINT(EM_DIAGRAM):   set work._FilterExclude;
22263      keep NAME ROLE VALUE COUNT PERCENT LABEL CALCMETHOD;
MPRINT(EM_DIAGRAM):   keep NAME ROLE VALUE COUNT PERCENT LABEL CALCMETHOD;
22264      if COUNT = . then COUNT = 0;
MPRINT(EM_DIAGRAM):   if COUNT = . then COUNT = 0;
22265      if PERCENT = . then PERCENT = 0;
MPRINT(EM_DIAGRAM):   if PERCENT = . then PERCENT = 0;
22266      VALUE = LEVEL;
MPRINT(EM_DIAGRAM):   VALUE = LEVEL;
22267      if _OBS_ = 0 and KEEPMISSING='N' then do;
MPRINT(EM_DIAGRAM):   if _OBS_ = 0 and KEEPMISSING='N' then do;
22268      CALCMETHOD= '';
MPRINT(EM_DIAGRAM):   CALCMETHOD= '';
22269      KEEPMISSING = '';
MPRINT(EM_DIAGRAM):   KEEPMISSING = '';
22270      if VALUE = '' and type eq 'C' then VALUE = '_BLANK_';
MPRINT(EM_DIAGRAM):   if VALUE = '' and type eq 'C' then VALUE = '_BLANK_';
22271      if type eq 'N' then do;
MPRINT(EM_DIAGRAM):   if type eq 'N' then do;
22272      VALUE = strip(VALUE);
MPRINT(EM_DIAGRAM):   VALUE = strip(VALUE);
22273      if VALUE = '' then VALUE = '.';
MPRINT(EM_DIAGRAM):   if VALUE = '' then VALUE = '.';
22274      end;
MPRINT(EM_DIAGRAM):   end;
22275      end;
MPRINT(EM_DIAGRAM):   end;
22276      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set EMWS1.FILTER_CLASS has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

22277      %let _FOBS=0;
22278      filename _X "C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\NEWVAR.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\NEWVAR.txt";
22279      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
22280      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
22281      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
22282      file _X;
MPRINT(EM_DIAGRAM):   file _X;
22283      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22284      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
22285      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
22286      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
22287      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
22288      put 'length ' newvar ' $200;';
MPRINT(EM_DIAGRAM):   put 'length ' newvar ' $200;';
22289      put 'drop ' newvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' newvar ';';
22290      string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
MPRINT(EM_DIAGRAM):   string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
22291      put string;
MPRINT(EM_DIAGRAM):   put string;
22292      end;
MPRINT(EM_DIAGRAM):   end;
22293      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
22294      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
22295      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
22296      if (newvar eq name) then do;
MPRINT(EM_DIAGRAM):   if (newvar eq name) then do;
22297      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
22298      end;
MPRINT(EM_DIAGRAM):   end;
22299      put 'length ' normvar " $%dmnorlen;";
MPRINT(EM_DIAGRAM):   put 'length ' normvar
MPRINT(EM_DIAGRAM):   " $32;";
22300      put 'drop ' normvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' normvar ';';
22301      string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
MPRINT(EM_DIAGRAM):   string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
22302      put string;
MPRINT(EM_DIAGRAM):   put string;
22303      end;
MPRINT(EM_DIAGRAM):   end;
22304      end;
MPRINT(EM_DIAGRAM):   end;
22305      end;
MPRINT(EM_DIAGRAM):   end;
22306      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
22307      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\NEWVAR.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=April 05, 2021 13:09:06 o'cloc,
      Create Time=April 05, 2021 13:09:06 o'cloc

NOTE: 24 records were written to the file _X.
      The minimum record length was 1.
      The maximum record length was 40.
NOTE: There were 5 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22308      %let _FOBS=0;
22309      filename _X "C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\PUBLISHNEWVAR.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\PUBLISHNEWVAR.txt";
22310      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
22311      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
22312      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
22313      where ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where ROLE ne 'TARGET';
22314      file _X;
MPRINT(EM_DIAGRAM):   file _X;
22315      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22316      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
22317      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
22318      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
22319      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
22320      put 'length ' newvar ' $200;';
MPRINT(EM_DIAGRAM):   put 'length ' newvar ' $200;';
22321      put 'drop ' newvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' newvar ';';
22322      string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
MPRINT(EM_DIAGRAM):   string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
22323      put string;
MPRINT(EM_DIAGRAM):   put string;
22324      end;
MPRINT(EM_DIAGRAM):   end;
22325      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
22326      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
22327      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
22328      if (newvar eq name) then do;
MPRINT(EM_DIAGRAM):   if (newvar eq name) then do;
22329      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
22330      end;
MPRINT(EM_DIAGRAM):   end;
22331      put 'length ' normvar " $%dmnorlen;";
MPRINT(EM_DIAGRAM):   put 'length ' normvar
MPRINT(EM_DIAGRAM):   " $32;";
22332      put 'drop ' normvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' normvar ';';
22333      string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
MPRINT(EM_DIAGRAM):   string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
22334      put string;
MPRINT(EM_DIAGRAM):   put string;
22335      end;
MPRINT(EM_DIAGRAM):   end;
22336      end;
MPRINT(EM_DIAGRAM):   end;
22337      end;
MPRINT(EM_DIAGRAM):   end;
22338      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
22339      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\PUBLISHNEWVAR.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=April 05, 2021 13:09:06 o'cloc,
      Create Time=April 05, 2021 13:09:06 o'cloc

NOTE: 24 records were written to the file _X.
      The minimum record length was 1.
      The maximum record length was 40.
NOTE: There were 5 observations read from the data set WORK._FILTEREXCLUDE.
      WHERE ROLE not = 'TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22340      %let _FOBS=0;
22341      filename _X "C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\CLASSFILTERCODE.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\CLASSFILTERCODE.txt";
22342      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
22343      length line string $200 _filtervar $32;
MPRINT(EM_DIAGRAM):   length line string $200 _filtervar $32;
22344      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
22345      retain line '';
MPRINT(EM_DIAGRAM):   retain line '';
22346      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
22347      file _X;
MPRINT(EM_DIAGRAM):   file _X;
22348      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22349      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
22350      _filtervar = NAME;
MPRINT(EM_DIAGRAM):   _filtervar = NAME;
22351      if newvar ne '' then _filtervar = newvar;
MPRINT(EM_DIAGRAM):   if newvar ne '' then _filtervar = newvar;
22352      if normvar ne '' then _filtervar = normvar;
MPRINT(EM_DIAGRAM):   if normvar ne '' then _filtervar = normvar;
22353      if _N_ ne 1 then put ' and ';
MPRINT(EM_DIAGRAM):   if _N_ ne 1 then put ' and ';
22354      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
22355      line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
22356      end;
MPRINT(EM_DIAGRAM):   end;
22357      else do;
MPRINT(EM_DIAGRAM):   else do;
22358      if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
22359      else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
22360      end;
MPRINT(EM_DIAGRAM):   end;
22361      end;
MPRINT(EM_DIAGRAM):   end;
22362      else do;
MPRINT(EM_DIAGRAM):   else do;
22363      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
22364      string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
22365      end;
MPRINT(EM_DIAGRAM):   end;
22366      else do;
MPRINT(EM_DIAGRAM):   else do;
22367      if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
22368      else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
22369      end;
MPRINT(EM_DIAGRAM):   end;
22370      if length(strip(string)) + length(strip(line)) < 80 then do;
MPRINT(EM_DIAGRAM):   if length(strip(string)) + length(strip(line)) < 80 then do;
22371      line = strip(line)!!' '!!strip(string);
MPRINT(EM_DIAGRAM):   line = strip(line)!!' '!!strip(string);
22372      end;
MPRINT(EM_DIAGRAM):   end;
22373      else do;
MPRINT(EM_DIAGRAM):   else do;
22374      put line;
MPRINT(EM_DIAGRAM):   put line;
22375      line = string;
MPRINT(EM_DIAGRAM):   line = string;
22376      end;
MPRINT(EM_DIAGRAM):   end;
22377      end;
MPRINT(EM_DIAGRAM):   end;
22378      if last.name then do;
MPRINT(EM_DIAGRAM):   if last.name then do;
22379      if (format ne '' or type eq 'C') then do;
MPRINT(EM_DIAGRAM):   if (format ne '' or type eq 'C') then do;
22380      line = strip(line)!!')';
MPRINT(EM_DIAGRAM):   line = strip(line)!!')';
22381      end;
MPRINT(EM_DIAGRAM):   end;
22382      put line;
MPRINT(EM_DIAGRAM):   put line;
22383      end;
MPRINT(EM_DIAGRAM):   end;
22384      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
22385      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\CLASSFILTERCODE.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=April 05, 2021 13:09:06 o'cloc,
      Create Time=April 05, 2021 13:09:06 o'cloc

NOTE: 5 records were written to the file _X.
      The minimum record length was 5.
      The maximum record length was 41.
NOTE: There were 5 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22386      filename _X;
MPRINT(EM_DIAGRAM):   filename _X;
NOTE: Fileref _X has been deassigned.
22387      %let _FOBS=0;
22388      filename _X "C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\CLASSPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\CLASSPUBLISHFILTERCODE.txt";
22389      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
22390      length line string $200 _filtervar $32;
MPRINT(EM_DIAGRAM):   length line string $200 _filtervar $32;
22391      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
22392      retain line '';
MPRINT(EM_DIAGRAM):   retain line '';
22393      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
22394      where ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where ROLE ne 'TARGET';
22395      file _X;
MPRINT(EM_DIAGRAM):   file _X;
22396      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22397      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
22398      _filtervar = NAME;
MPRINT(EM_DIAGRAM):   _filtervar = NAME;
22399      if newvar ne '' then _filtervar = newvar;
MPRINT(EM_DIAGRAM):   if newvar ne '' then _filtervar = newvar;
22400      if normvar ne '' then _filtervar = normvar;
MPRINT(EM_DIAGRAM):   if normvar ne '' then _filtervar = normvar;
22401      if _N_ ne 1 then put ' and ';
MPRINT(EM_DIAGRAM):   if _N_ ne 1 then put ' and ';
22402      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
22403      line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
22404      end;
MPRINT(EM_DIAGRAM):   end;
22405      else do;
MPRINT(EM_DIAGRAM):   else do;
22406      if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
22407      else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
22408      end;
MPRINT(EM_DIAGRAM):   end;
22409      end;
MPRINT(EM_DIAGRAM):   end;
22410      else do;
MPRINT(EM_DIAGRAM):   else do;
22411      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
22412      string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
22413      end;
MPRINT(EM_DIAGRAM):   end;
22414      else do;
MPRINT(EM_DIAGRAM):   else do;
22415      if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
22416      else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
22417      end;
MPRINT(EM_DIAGRAM):   end;
22418      if length(strip(string)) + length(strip(line)) < 80 then do;
MPRINT(EM_DIAGRAM):   if length(strip(string)) + length(strip(line)) < 80 then do;
22419      line = strip(line)!!' '!!strip(string);
MPRINT(EM_DIAGRAM):   line = strip(line)!!' '!!strip(string);
22420      end;
MPRINT(EM_DIAGRAM):   end;
22421      else do;
MPRINT(EM_DIAGRAM):   else do;
22422      put line;
MPRINT(EM_DIAGRAM):   put line;
22423      line = string;
MPRINT(EM_DIAGRAM):   line = string;
22424      end;
MPRINT(EM_DIAGRAM):   end;
22425      end;
MPRINT(EM_DIAGRAM):   end;
22426      if last.name then do;
MPRINT(EM_DIAGRAM):   if last.name then do;
22427      if (format ne '' or type eq 'C') then do;
MPRINT(EM_DIAGRAM):   if (format ne '' or type eq 'C') then do;
22428      line = strip(line)!!')';
MPRINT(EM_DIAGRAM):   line = strip(line)!!')';
22429      end;
MPRINT(EM_DIAGRAM):   end;
22430      put line;
MPRINT(EM_DIAGRAM):   put line;
22431      end;
MPRINT(EM_DIAGRAM):   end;
22432      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
22433      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\CLASSPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=April 05, 2021 13:09:06 o'cloc,
      Create Time=April 05, 2021 13:09:06 o'cloc

NOTE: 5 records were written to the file _X.
      The minimum record length was 5.
      The maximum record length was 41.
NOTE: There were 5 observations read from the data set WORK._FILTEREXCLUDE.
      WHERE ROLE not = 'TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22434      filename _X;
MPRINT(EM_DIAGRAM):   filename _X;
NOTE: Fileref _X has been deassigned.
22435      %let _FilterIntervalNum= 0;
22436      proc sort data=EMWS1.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_INTERVAL;
22437      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22438      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.FILTER_INTERVAL.
NOTE: The data set EMWS1.FILTER_INTERVAL has 1 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.14 seconds
      cpu time            0.03 seconds
      

22439      filename _X "C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\INTERVALFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\INTERVALFILTERCODE.txt";
22440      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
22441      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
22442      set EMWS1.Filter_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL end=eof;
22443      file _X;
MPRINT(EM_DIAGRAM):   file _X;
22444      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
22445      ;
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') ;
22446      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22447      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
22448      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
22449      end;
MPRINT(EM_DIAGRAM):   end;
22450      else do;
MPRINT(EM_DIAGRAM):   else do;
22451      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
22452      end;
MPRINT(EM_DIAGRAM):   end;
22453      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
22454      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
22455      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
22456      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
22457      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
22458      end;
MPRINT(EM_DIAGRAM):   end;
22459      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
22460      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
22461      end;
MPRINT(EM_DIAGRAM):   end;
22462      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
22463      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
22464      end;
MPRINT(EM_DIAGRAM):   end;
22465      end;
MPRINT(EM_DIAGRAM):   end;
22466      else do;
MPRINT(EM_DIAGRAM):   else do;
22467      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
22468      end;
MPRINT(EM_DIAGRAM):   end;
22469      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
22470      put string;
MPRINT(EM_DIAGRAM):   put string;
22471      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
22472      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\INTERVALFILTERCODE.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=April 05, 2021 13:09:06 o'cloc,
      Create Time=April 05, 2021 13:09:06 o'cloc

NOTE: 1 record was written to the file _X.
      The minimum record length was 59.
      The maximum record length was 59.
NOTE: There were 1 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

22473      %let _FilterIntervalNum= 0;
22474      proc sort data=EMWS1.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_INTERVAL;
22475      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22476      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22477      filename _X "C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
22478      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
22479      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
22480      set EMWS1.Filter_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL end=eof;
22481      file _X;
MPRINT(EM_DIAGRAM):   file _X;
22482      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
22483      and ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') and ROLE ne 'TARGET';
22484      ;
MPRINT(EM_DIAGRAM):   ;
22485      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22486      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
22487      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
22488      end;
MPRINT(EM_DIAGRAM):   end;
22489      else do;
MPRINT(EM_DIAGRAM):   else do;
22490      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
22491      end;
MPRINT(EM_DIAGRAM):   end;
22492      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
22493      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
22494      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
22495      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
22496      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
22497      end;
MPRINT(EM_DIAGRAM):   end;
22498      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
22499      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
22500      end;
MPRINT(EM_DIAGRAM):   end;
22501      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
22502      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
22503      end;
MPRINT(EM_DIAGRAM):   end;
22504      end;
MPRINT(EM_DIAGRAM):   end;
22505      else do;
MPRINT(EM_DIAGRAM):   else do;
22506      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
22507      end;
MPRINT(EM_DIAGRAM):   end;
22508      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
22509      put string;
MPRINT(EM_DIAGRAM):   put string;
22510      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
22511      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\301152~1\AppData\Local\Temp\SAS Temporary Files\_TD13976_C2-COMPLAB-4_\Prc2\INTERVALPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=April 05, 2021 13:09:07 o'cloc,
      Create Time=April 05, 2021 13:09:07 o'cloc

NOTE: 1 record was written to the file _X.
      The minimum record length was 59.
      The maximum record length was 59.
NOTE: There were 1 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE ((INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N')) and (ROLE not = 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
22512      data EMWS1.Filter_TRAIN / view=EMWS1.Filter_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_TRAIN / view=EMWS1.Filter_TRAIN;
22513      set EMWS1.FIMPORT_train;
MPRINT(EM_DIAGRAM):   set EMWS1.FIMPORT_train;
22514      
22515      
22516      length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
22517      drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
22518      _FILTERFMT1= put(engine_type,$5.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(engine_type,$5.0);
22519      length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
22520      drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
22521      %dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
22522      
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
22523      
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(fuel_system,$4.0);
22524      length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
22525      drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
22526      _FILTERFMT2= put(fuel_system,$4.0);
22527      length _FILTERNORM2  $32;
22528      drop _FILTERNORM2 ;
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
22529      %dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
22530      
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
22531      
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(num_of_cylinders,$6.0);
22532      length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
22533      drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
22534      _FILTERFMT3= put(num_of_cylinders,$6.0);
22535      length _FILTERNORM3  $32;
22536      drop _FILTERNORM3 ;
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
22537      %dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
22538      if
22539      _FILTERNORM1 not in ( 'DOHCV')
22540       and
22541      _FILTERNORM2 not in ( 'MFI' , 'SPFI')
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( 'DOHCV') and _FILTERNORM2 not in ( 'MFI' , 'SPFI') and _FILTERNORM3 not in ( 'THREE' , 'TWELVE') and ( horsepower eq . or (1<=horsepower )) ;
22542       and
MPRINT(EM_DIAGRAM):   run;
22543      _FILTERNORM3 not in ( 'THREE' , 'TWELVE')
22544      and
22545      ( horsepower eq . or (1<=horsepower                      ))
22546      ;
22547      run;

NOTE: DATA STEP view saved on file EMWS1.FILTER_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
      

22548      data WORK.FilterFILTERVAR;
MPRINT(EM_DIAGRAM):    data WORK.FilterFILTERVAR;
22549      set
22550      EMWS1.Filter_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N'))
22551      EMWS1.Filter_CLASS(where=(CALCMETHOD ne 'NONE'))
22552      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N')) EMWS1.Filter_CLASS(where=(CALCMETHOD ne 'NONE')) ;
22553      keep NAME;
MPRINT(EM_DIAGRAM):   keep NAME;
22554      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: There were 5 observations read from the data set EMWS1.FILTER_CLASS.
      WHERE CALCMETHOD not = 'NONE';
NOTE: The data set WORK.FILTERFILTERVAR has 6 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

22555      proc sort data= WORK.FilterFILTERVAR nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data= WORK.FilterFILTERVAR nodupkey;
22556      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22557      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set WORK.FILTERFILTERVAR.
NOTE: 2 observations with duplicate key values were deleted.
NOTE: The data set WORK.FILTERFILTERVAR has 4 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22558      proc sort data=WORK.M3MTIARL;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M3MTIARL;
22559      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22560      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK.M3MTIARL.
NOTE: The data set WORK.M3MTIARL has 27 observations and 34 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22561      data WORK.FilterDMDBC;
MPRINT(EM_DIAGRAM):   data WORK.FilterDMDBC;
22562      merge WORK.M3MTIARL WORK.FilterFILTERVAR(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M3MTIARL WORK.FilterFILTERVAR(in=_b);
22563      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22564      if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
MPRINT(EM_DIAGRAM):   if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
22565      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK.M3MTIARL.
NOTE: There were 4 observations read from the data set WORK.FILTERFILTERVAR.
NOTE: The data set WORK.FILTERDMDBC has 5 observations and 34 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22566      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22567      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
22568      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22569      %macro DMDBClass;
22570          Risk(DESC) engine_type(ASC) fuel_system(ASC) num_of_cylinders(ASC)
22571      %mend DMDBClass;
22572      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22573      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
22574      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22575      %macro DMDBVar;
22576          horsepower
22577      %mend DMDBVar;
22578      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22579      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
22580      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22581      proc dmdb batch data=EMWS1.FIMPORT_train
22582      dmdbcat=WORK.Filter_DMDB
22583      varout=WORK.FILTER_VARSTATS
22584      maxlevel = 513
22585      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.FIMPORT_train dmdbcat=WORK.Filter_DMDB varout=WORK.FILTER_VARSTATS maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
22586      class %DMDBClass;
MPRINT(DMDBCLASS):   Risk(DESC) engine_type(ASC) fuel_system(ASC) num_of_cylinders(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
22587      var %DMDBVar;
MPRINT(DMDBVAR):   horsepower
MPRINT(EM_DIAGRAM):  ;
22588      target
22589      Risk
22590      ;
MPRINT(EM_DIAGRAM):   target Risk ;
22591      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 205   Memory used = 511K.
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: There were 205 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: There were 205 observations read from the data set EMWS1.FIMPORT_TRAIN.
NOTE: The data set WORK.FILTER_VARSTATS has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
22592      quit;
22593      *--- end code ---*;

22594      data WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):    data WORK.FILTER_VARSTATS;
22595      length DATAROLE $10 TYPE $8 NAME $32;
MPRINT(EM_DIAGRAM):   length DATAROLE $10 TYPE $8 NAME $32;
22596      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
22597      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
22598      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
22599      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
22600      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
22601      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
22602      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
22603      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
22604      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
22605      label NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NUMCAT = "Number of Levels";
22606      retain DATAROLE "TRAIN" type "ORIGINAL";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" type "ORIGINAL";
22607      set WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   set WORK.FILTER_VARSTATS;
22608      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable NUMCAT is uninitialized.
NOTE: There were 1 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set WORK.FILTER_VARSTATS has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

22609      proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
22610      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK.FILTER_VARSTATS to EMWS1.FILTER_STATS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set EMWS1.FILTER_STATS has 1 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.07 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
